; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Output\stm32f2xx_dbgmcu.o --asm_dir=.\Listing\ --list_dir=.\Listing\ --depend=.\Output\stm32f2xx_dbgmcu.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\BSP -I..\BSP\UCOS-II -I..\BSP\STM32F2xx\inc -I..\BSP\CMSIS -I..\BSP\CMSIS\Device_Support -I..\BSP\UCOS-II -I..\..\uC-CPU -I..\..\uC-CPU\ARM-Cortex-M3 -I..\..\uC-LIB -I..\..\uC-LIB\Ports\ARM-Cortex-M3 -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3 -I..\App -I..\Prj -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\INC\ST\STM32F2xx -DUSE_STDPERIPH_DRIVER -DDEBUG -DLJB_CPU_MAIN -DUSE_CPU_F205RC --omf_browse=.\Output\stm32f2xx_dbgmcu.crf ..\BSP\STM32F2xx\src\stm32f2xx_dbgmcu.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  DBGMCU_GetREVID PROC
;;;51       */
;;;52     uint32_t DBGMCU_GetREVID(void)
000000  481a              LDR      r0,|L1.108|
;;;53     {
;;;54        return(DBGMCU->IDCODE >> 16);
000002  6800              LDR      r0,[r0,#0]
000004  0c00              LSRS     r0,r0,#16
;;;55     }
000006  4770              BX       lr
;;;56     
                          ENDP

                  DBGMCU_GetDEVID PROC
;;;61       */
;;;62     uint32_t DBGMCU_GetDEVID(void)
000008  4818              LDR      r0,|L1.108|
;;;63     {
;;;64        return(DBGMCU->IDCODE & IDCODE_DEVID_MASK);
00000a  6800              LDR      r0,[r0,#0]
00000c  f3c0000b          UBFX     r0,r0,#0,#12
;;;65     }
000010  4770              BX       lr
;;;66     
                          ENDP

                  DBGMCU_Config PROC
;;;77       */
;;;78     void DBGMCU_Config(uint32_t DBGMCU_Periph, FunctionalState NewState)
000012  b131              CBZ      r1,|L1.34|
;;;79     {
;;;80       /* Check the parameters */
;;;81       assert_param(IS_DBGMCU_PERIPH(DBGMCU_Periph));
;;;82       assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;83       if (NewState != DISABLE)
;;;84       {
;;;85         DBGMCU->CR |= DBGMCU_Periph;
000014  4a15              LDR      r2,|L1.108|
000016  6852              LDR      r2,[r2,#4]
000018  ea420200          ORR      r2,r2,r0
00001c  4b13              LDR      r3,|L1.108|
00001e  605a              STR      r2,[r3,#4]
000020  e005              B        |L1.46|
                  |L1.34|
;;;86       }
;;;87       else
;;;88       {
;;;89         DBGMCU->CR &= ~DBGMCU_Periph;
000022  4a12              LDR      r2,|L1.108|
000024  6852              LDR      r2,[r2,#4]
000026  ea220200          BIC      r2,r2,r0
00002a  4b10              LDR      r3,|L1.108|
00002c  605a              STR      r2,[r3,#4]
                  |L1.46|
;;;90       }
;;;91     }
00002e  4770              BX       lr
;;;92     
                          ENDP

                  DBGMCU_APB1PeriphConfig PROC
;;;116      */
;;;117    void DBGMCU_APB1PeriphConfig(uint32_t DBGMCU_Periph, FunctionalState NewState)
000030  b131              CBZ      r1,|L1.64|
;;;118    {
;;;119      /* Check the parameters */
;;;120      assert_param(IS_DBGMCU_APB1PERIPH(DBGMCU_Periph));
;;;121      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;122    
;;;123      if (NewState != DISABLE)
;;;124      {
;;;125        DBGMCU->APB1FZ |= DBGMCU_Periph;
000032  4a0e              LDR      r2,|L1.108|
000034  6892              LDR      r2,[r2,#8]
000036  ea420200          ORR      r2,r2,r0
00003a  4b0c              LDR      r3,|L1.108|
00003c  609a              STR      r2,[r3,#8]
00003e  e005              B        |L1.76|
                  |L1.64|
;;;126      }
;;;127      else
;;;128      {
;;;129        DBGMCU->APB1FZ &= ~DBGMCU_Periph;
000040  4a0a              LDR      r2,|L1.108|
000042  6892              LDR      r2,[r2,#8]
000044  ea220200          BIC      r2,r2,r0
000048  4b08              LDR      r3,|L1.108|
00004a  609a              STR      r2,[r3,#8]
                  |L1.76|
;;;130      }
;;;131    }
00004c  4770              BX       lr
;;;132    
                          ENDP

                  DBGMCU_APB2PeriphConfig PROC
;;;145      */
;;;146    void DBGMCU_APB2PeriphConfig(uint32_t DBGMCU_Periph, FunctionalState NewState)
00004e  b131              CBZ      r1,|L1.94|
;;;147    {
;;;148      /* Check the parameters */
;;;149      assert_param(IS_DBGMCU_APB2PERIPH(DBGMCU_Periph));
;;;150      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;151    
;;;152      if (NewState != DISABLE)
;;;153      {
;;;154        DBGMCU->APB2FZ |= DBGMCU_Periph;
000050  4a06              LDR      r2,|L1.108|
000052  68d2              LDR      r2,[r2,#0xc]
000054  ea420200          ORR      r2,r2,r0
000058  4b04              LDR      r3,|L1.108|
00005a  60da              STR      r2,[r3,#0xc]
00005c  e005              B        |L1.106|
                  |L1.94|
;;;155      }
;;;156      else
;;;157      {
;;;158        DBGMCU->APB2FZ &= ~DBGMCU_Periph;
00005e  4a03              LDR      r2,|L1.108|
000060  68d2              LDR      r2,[r2,#0xc]
000062  ea220200          BIC      r2,r2,r0
000066  4b01              LDR      r3,|L1.108|
000068  60da              STR      r2,[r3,#0xc]
                  |L1.106|
;;;159      }
;;;160    }
00006a  4770              BX       lr
;;;161    
                          ENDP

                  |L1.108|
                          DCD      0xe0042000

;*** Start embedded assembler ***

#line 1 "..\\BSP\\STM32F2xx\\src\\stm32f2xx_dbgmcu.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___18_stm32f2xx_dbgmcu_c_588a430f____REV16|
#line 112 "..\\BSP\\CMSIS\\core_cmInstr.h"
|__asm___18_stm32f2xx_dbgmcu_c_588a430f____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___18_stm32f2xx_dbgmcu_c_588a430f____REVSH|
#line 130
|__asm___18_stm32f2xx_dbgmcu_c_588a430f____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
