; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Output\bsp_sdio.o --asm_dir=.\Listing\ --list_dir=.\Listing\ --depend=.\Output\bsp_sdio.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\BSP -I..\BSP\UCOS-II -I..\BSP\STM32F2xx\inc -I..\BSP\CMSIS -I..\BSP\CMSIS\Device_Support -I..\BSP\UCOS-II -I..\..\uC-CPU -I..\..\uC-CPU\ARM-Cortex-M3 -I..\..\uC-LIB -I..\..\uC-LIB\Ports\ARM-Cortex-M3 -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3 -I..\App -I..\Prj -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\INC\ST\STM32F2xx -DUSE_STDPERIPH_DRIVER -DDEBUG -DLJB_CPU_MAIN -DUSE_CPU_F205RC --omf_browse=.\Output\bsp_sdio.crf ..\BSP\bsp_sdio.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  BSP_SDIO_ISRHandler PROC
;;;276    ///
;;;277    void BSP_SDIO_ISRHandler(void)
000000  b510              PUSH     {r4,lr}
;;;278    {
;;;279    	if (StopCondition == 1)
000002  48dd              LDR      r0,|L1.888|
000004  6800              LDR      r0,[r0,#0]  ; StopCondition
000006  2801              CMP      r0,#1
000008  d10f              BNE      |L1.42|
;;;280    	{
;;;281    		SDIO->ARG = 0x0;
00000a  f04f0000          MOV      r0,#0
00000e  49db              LDR      r1,|L1.892|
000010  6008              STR      r0,[r1,#0]
;;;282    		SDIO->CMD = 0x44C;
000012  f240404c          MOV      r0,#0x44c
000016  f1010104          ADD      r1,r1,#4
00001a  6008              STR      r0,[r1,#0]
;;;283    		TransferError = CmdResp1Error(SD_CMD_STOP_TRANSMISSION);
00001c  f04f000c          MOV      r0,#0xc
000020  f7fffffe          BL       CmdResp1Error
000024  49d6              LDR      r1,|L1.896|
000026  7008              STRB     r0,[r1,#0]
000028  e003              B        |L1.50|
                  |L1.42|
;;;284    	}
;;;285    	else
;;;286    	{
;;;287    		TransferError = SD_OK;
00002a  f04f0000          MOV      r0,#0
00002e  49d4              LDR      r1,|L1.896|
000030  7008              STRB     r0,[r1,#0]
                  |L1.50|
;;;288    	}
;;;289    	SDIO_ClearITPendingBit(SDIO_IT_DATAEND);
000032  f44f7080          MOV      r0,#0x100
000036  f7fffffe          BL       SDIO_ClearITPendingBit
;;;290    	TransferEnd = 1;
00003a  f04f0001          MOV      r0,#1
00003e  49d1              LDR      r1,|L1.900|
000040  6008              STR      r0,[r1,#0]  ; TransferEnd
;;;291    	
;;;292    	if (BSP_Info.SDCallBack)
000042  48d1              LDR      r0,|L1.904|
000044  f8d00128          LDR      r0,[r0,#0x128]  ; BSP_Info
000048  b128              CBZ      r0,|L1.86|
;;;293    		BSP_Info.SDCallBack(0, NULL);
00004a  48cf              LDR      r0,|L1.904|
00004c  2100              MOVS     r1,#0
00004e  f8d02128          LDR      r2,[r0,#0x128]  ; BSP_Info
000052  4608              MOV      r0,r1
000054  4790              BLX      r2
                  |L1.86|
;;;294    }
000056  bd10              POP      {r4,pc}
;;;295    
                          ENDP

                  SD_LowLevel_DMA_RxConfig PROC
;;;224      */
;;;225    void SD_LowLevel_DMA_RxConfig(uint32_t *BufferDST, uint32_t BufferSize)
000058  b570              PUSH     {r4-r6,lr}
;;;226    {
00005a  4605              MOV      r5,r0
00005c  460c              MOV      r4,r1
;;;227    
;;;228    	DMA_ClearFlag(SD_SDIO_DMA_STREAM, SD_SDIO_DMA_FLAG_FEIF | SD_SDIO_DMA_FLAG_DMEIF | SD_SDIO_DMA_FLAG_TEIF | 
00005e  f04f51fa          MOV      r1,#0x1f400000
000062  48ca              LDR      r0,|L1.908|
000064  f7fffffe          BL       DMA_ClearFlag
;;;229    					SD_SDIO_DMA_FLAG_HTIF | SD_SDIO_DMA_FLAG_TCIF);
;;;230    	
;;;231    	/* DMA2 Stream3  or Stream6 disable */
;;;232    	DMA_Cmd(SD_SDIO_DMA_STREAM, DISABLE);
000068  2100              MOVS     r1,#0
00006a  48c8              LDR      r0,|L1.908|
00006c  f7fffffe          BL       DMA_Cmd
;;;233    
;;;234    	/* DMA2 Stream3 or Stream6 Config */
;;;235    	DMA_DeInit(SD_SDIO_DMA_STREAM);
000070  48c6              LDR      r0,|L1.908|
000072  f7fffffe          BL       DMA_DeInit
;;;236    
;;;237    	SDDMA_InitStructure.DMA_Channel = SD_SDIO_DMA_CHANNEL;
000076  f04f6000          MOV      r0,#0x8000000
00007a  49c5              LDR      r1,|L1.912|
00007c  6008              STR      r0,[r1,#0]  ; SDDMA_InitStructure
;;;238    	SDDMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)SDIO_FIFO_ADDRESS;
00007e  48c5              LDR      r0,|L1.916|
000080  6048              STR      r0,[r1,#4]  ; SDDMA_InitStructure
;;;239    	SDDMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)BufferDST;
000082  4608              MOV      r0,r1
000084  6085              STR      r5,[r0,#8]  ; SDDMA_InitStructure
;;;240    	SDDMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralToMemory;
000086  f04f0000          MOV      r0,#0
00008a  60c8              STR      r0,[r1,#0xc]  ; SDDMA_InitStructure
;;;241    	//SDDMA_InitStructure.DMA_BufferSize = 0;
;;;242    	SDDMA_InitStructure.DMA_BufferSize = BufferSize;
00008c  4608              MOV      r0,r1
00008e  6104              STR      r4,[r0,#0x10]  ; SDDMA_InitStructure
;;;243    	SDDMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
000090  f04f0000          MOV      r0,#0
000094  6148              STR      r0,[r1,#0x14]  ; SDDMA_InitStructure
;;;244    	SDDMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
000096  f44f6080          MOV      r0,#0x400
00009a  6188              STR      r0,[r1,#0x18]  ; SDDMA_InitStructure
;;;245    	SDDMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
00009c  f44f5080          MOV      r0,#0x1000
0000a0  61c8              STR      r0,[r1,#0x1c]  ; SDDMA_InitStructure
;;;246    	SDDMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
0000a2  f44f4080          MOV      r0,#0x4000
0000a6  6208              STR      r0,[r1,#0x20]  ; SDDMA_InitStructure
;;;247    	SDDMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
0000a8  f04f0000          MOV      r0,#0
0000ac  6248              STR      r0,[r1,#0x24]  ; SDDMA_InitStructure
;;;248    	SDDMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;
0000ae  f44f3040          MOV      r0,#0x30000
0000b2  6288              STR      r0,[r1,#0x28]  ; SDDMA_InitStructure
;;;249    	SDDMA_InitStructure.DMA_FIFOMode = DMA_FIFOMode_Enable;
0000b4  f04f0004          MOV      r0,#4
0000b8  62c8              STR      r0,[r1,#0x2c]  ; SDDMA_InitStructure
;;;250    	SDDMA_InitStructure.DMA_FIFOThreshold = DMA_FIFOThreshold_Full;
0000ba  f04f0003          MOV      r0,#3
0000be  6308              STR      r0,[r1,#0x30]  ; SDDMA_InitStructure
;;;251    	SDDMA_InitStructure.DMA_MemoryBurst = DMA_MemoryBurst_INC4;
0000c0  f44f0000          MOV      r0,#0x800000
0000c4  6348              STR      r0,[r1,#0x34]  ; SDDMA_InitStructure
;;;252    	SDDMA_InitStructure.DMA_PeripheralBurst = DMA_PeripheralBurst_INC4;
0000c6  f44f1000          MOV      r0,#0x200000
0000ca  6388              STR      r0,[r1,#0x38]  ; SDDMA_InitStructure
;;;253    	DMA_Init(SD_SDIO_DMA_STREAM, &SDDMA_InitStructure);
0000cc  48af              LDR      r0,|L1.908|
0000ce  f7fffffe          BL       DMA_Init
;;;254    
;;;255    	DMA_FlowControllerConfig(SD_SDIO_DMA_STREAM, DMA_FlowCtrl_Peripheral);
0000d2  2120              MOVS     r1,#0x20
0000d4  48ad              LDR      r0,|L1.908|
0000d6  f7fffffe          BL       DMA_FlowControllerConfig
;;;256    
;;;257    	///此时保持关闭
;;;258    	/* DMA2 Stream3  or Stream6 enable */
;;;259    	///DMA_Cmd(SD_SDIO_DMA_STREAM, ENABLE);
;;;260    	DMA_Cmd(SD_SDIO_DMA_STREAM, DISABLE);
0000da  2100              MOVS     r1,#0
0000dc  48ab              LDR      r0,|L1.908|
0000de  f7fffffe          BL       DMA_Cmd
;;;261    }
0000e2  bd70              POP      {r4-r6,pc}
;;;262    
                          ENDP

                  SD_LowLevel_DMA_TxConfig PROC
;;;181      */
;;;182    void SD_LowLevel_DMA_TxConfig(uint32_t *BufferSRC, uint32_t BufferSize)
0000e4  b570              PUSH     {r4-r6,lr}
;;;183    {
0000e6  4605              MOV      r5,r0
0000e8  460c              MOV      r4,r1
;;;184    	DMA_ClearFlag(SD_SDIO_DMA_STREAM, SD_SDIO_DMA_FLAG_FEIF | SD_SDIO_DMA_FLAG_DMEIF | SD_SDIO_DMA_FLAG_TEIF | 
0000ea  f04f51fa          MOV      r1,#0x1f400000
0000ee  48a7              LDR      r0,|L1.908|
0000f0  f7fffffe          BL       DMA_ClearFlag
;;;185    					SD_SDIO_DMA_FLAG_HTIF | SD_SDIO_DMA_FLAG_TCIF);
;;;186    
;;;187    	/* DMA2 Stream3  or Stream6 disable */
;;;188    	DMA_Cmd(SD_SDIO_DMA_STREAM, DISABLE);
0000f4  2100              MOVS     r1,#0
0000f6  48a5              LDR      r0,|L1.908|
0000f8  f7fffffe          BL       DMA_Cmd
;;;189    
;;;190    	/* DMA2 Stream3  or Stream6 Config */
;;;191    	DMA_DeInit(SD_SDIO_DMA_STREAM);
0000fc  48a3              LDR      r0,|L1.908|
0000fe  f7fffffe          BL       DMA_DeInit
;;;192    
;;;193    	SDDMA_InitStructure.DMA_Channel = SD_SDIO_DMA_CHANNEL;
000102  f04f6000          MOV      r0,#0x8000000
000106  49a2              LDR      r1,|L1.912|
000108  6008              STR      r0,[r1,#0]  ; SDDMA_InitStructure
;;;194    	SDDMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)SDIO_FIFO_ADDRESS;
00010a  48a2              LDR      r0,|L1.916|
00010c  6048              STR      r0,[r1,#4]  ; SDDMA_InitStructure
;;;195    	SDDMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)BufferSRC;
00010e  4608              MOV      r0,r1
000110  6085              STR      r5,[r0,#8]  ; SDDMA_InitStructure
;;;196    	SDDMA_InitStructure.DMA_DIR = DMA_DIR_MemoryToPeripheral;
000112  f04f0040          MOV      r0,#0x40
000116  60c8              STR      r0,[r1,#0xc]  ; SDDMA_InitStructure
;;;197    	//SDDMA_InitStructure.DMA_BufferSize = 0;
;;;198    	SDDMA_InitStructure.DMA_BufferSize = BufferSize;
000118  4608              MOV      r0,r1
00011a  6104              STR      r4,[r0,#0x10]  ; SDDMA_InitStructure
;;;199    	SDDMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
00011c  f04f0000          MOV      r0,#0
000120  6148              STR      r0,[r1,#0x14]  ; SDDMA_InitStructure
;;;200    	SDDMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
000122  f44f6080          MOV      r0,#0x400
000126  6188              STR      r0,[r1,#0x18]  ; SDDMA_InitStructure
;;;201    	SDDMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
000128  f44f5080          MOV      r0,#0x1000
00012c  61c8              STR      r0,[r1,#0x1c]  ; SDDMA_InitStructure
;;;202    	SDDMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
00012e  f44f4080          MOV      r0,#0x4000
000132  6208              STR      r0,[r1,#0x20]  ; SDDMA_InitStructure
;;;203    	SDDMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
000134  f04f0000          MOV      r0,#0
000138  6248              STR      r0,[r1,#0x24]  ; SDDMA_InitStructure
;;;204    	SDDMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;
00013a  f44f3040          MOV      r0,#0x30000
00013e  6288              STR      r0,[r1,#0x28]  ; SDDMA_InitStructure
;;;205    	SDDMA_InitStructure.DMA_FIFOMode = DMA_FIFOMode_Enable;
000140  f04f0004          MOV      r0,#4
000144  62c8              STR      r0,[r1,#0x2c]  ; SDDMA_InitStructure
;;;206    	SDDMA_InitStructure.DMA_FIFOThreshold = DMA_FIFOThreshold_Full;
000146  f04f0003          MOV      r0,#3
00014a  6308              STR      r0,[r1,#0x30]  ; SDDMA_InitStructure
;;;207    	SDDMA_InitStructure.DMA_MemoryBurst = DMA_MemoryBurst_INC4;
00014c  f44f0000          MOV      r0,#0x800000
000150  6348              STR      r0,[r1,#0x34]  ; SDDMA_InitStructure
;;;208    	SDDMA_InitStructure.DMA_PeripheralBurst = DMA_PeripheralBurst_INC4;
000152  f44f1000          MOV      r0,#0x200000
000156  6388              STR      r0,[r1,#0x38]  ; SDDMA_InitStructure
;;;209    	DMA_Init(SD_SDIO_DMA_STREAM, &SDDMA_InitStructure);
000158  488c              LDR      r0,|L1.908|
00015a  f7fffffe          BL       DMA_Init
;;;210    
;;;211    	DMA_FlowControllerConfig(SD_SDIO_DMA_STREAM, DMA_FlowCtrl_Peripheral);
00015e  2120              MOVS     r1,#0x20
000160  488a              LDR      r0,|L1.908|
000162  f7fffffe          BL       DMA_FlowControllerConfig
;;;212    
;;;213    	///此时保持关闭
;;;214    	/* DMA2 Stream3  or Stream6 enable */
;;;215    	///DMA_Cmd(SD_SDIO_DMA_STREAM, ENABLE);
;;;216    	DMA_Cmd(SD_SDIO_DMA_STREAM, DISABLE);    
000166  2100              MOVS     r1,#0
000168  4888              LDR      r0,|L1.908|
00016a  f7fffffe          BL       DMA_Cmd
;;;217    }
00016e  bd70              POP      {r4-r6,pc}
;;;218    
                          ENDP

                  BSP_InitSD PROC
;;;32     
;;;33     void BSP_InitSD(void)
000170  b570              PUSH     {r4-r6,lr}
;;;34     {
;;;35     	SD_Error res;
;;;36     	uint8_t sd;
;;;37     	
;;;38     	///GPIO 及时钟初始化：
;;;39     	///SD_LowLevel_Init();
;;;40     	res = SD_Init();
000172  f7fffffe          BL       SD_Init
000176  4605              MOV      r5,r0
;;;41     	if (res != SD_OK){
000178  b11d              CBZ      r5,|L1.386|
;;;42     		
;;;43     		BSP_Info.SD_Err = res;
00017a  4883              LDR      r0,|L1.904|
00017c  f8805118          STRB     r5,[r0,#0x118]
                  |L1.384|
;;;44     		return;
;;;45     	}
;;;46     	
;;;47     	sd = BSP_DetectSD();
;;;48     	if (sd)
;;;49     		BSP_Info.SD_NoMedia = 1;
;;;50     	else
;;;51     		BSP_Info.SD_NoMedia = 0;
;;;52     	
;;;53     	///设置 DMA：
;;;54     	SD_LowLevel_DMA_TxConfig(&__TmpBuf, 0);
;;;55     	SD_LowLevel_DMA_RxConfig(&__TmpBuf, 0);
;;;56     	
;;;57     	///允许 SDIO DMA：
;;;58     	SDIO_DMACmd(ENABLE);
;;;59     
;;;60     	///设置中断：
;;;61     	SDIO_ClearITPendingBit(SDIO_IT_DATAEND);
;;;62     	SDIO_ITConfig(SDIO_IT_DATAEND, ENABLE);
;;;63     	BSP_IntVectSet(BSP_INT_ID_SDIO, BSP_SDIO_ISRHandler);
;;;64         BSP_IntEn(BSP_INT_ID_SDIO);
;;;65     }
000180  bd70              POP      {r4-r6,pc}
                  |L1.386|
000182  f7fffffe          BL       BSP_DetectSD
000186  4604              MOV      r4,r0                 ;47
000188  b12c              CBZ      r4,|L1.406|
00018a  f04f0001          MOV      r0,#1                 ;49
00018e  497e              LDR      r1,|L1.904|
000190  f881011a          STRB     r0,[r1,#0x11a]        ;49
000194  e004              B        |L1.416|
                  |L1.406|
000196  f04f0000          MOV      r0,#0                 ;51
00019a  497b              LDR      r1,|L1.904|
00019c  f881011a          STRB     r0,[r1,#0x11a]        ;51
                  |L1.416|
0001a0  2100              MOVS     r1,#0                 ;54
0001a2  487d              LDR      r0,|L1.920|
0001a4  f7fffffe          BL       SD_LowLevel_DMA_TxConfig
0001a8  2100              MOVS     r1,#0                 ;55
0001aa  487b              LDR      r0,|L1.920|
0001ac  f7fffffe          BL       SD_LowLevel_DMA_RxConfig
0001b0  2001              MOVS     r0,#1                 ;58
0001b2  f7fffffe          BL       SDIO_DMACmd
0001b6  f44f7080          MOV      r0,#0x100             ;61
0001ba  f7fffffe          BL       SDIO_ClearITPendingBit
0001be  2101              MOVS     r1,#1                 ;62
0001c0  0208              LSLS     r0,r1,#8              ;62
0001c2  f7fffffe          BL       SDIO_ITConfig
0001c6  f2af11c7          ADR      r1,BSP_SDIO_ISRHandler + 1
0001ca  2031              MOVS     r0,#0x31              ;63
0001cc  f7fffffe          BL       BSP_IntVectSet
0001d0  2031              MOVS     r0,#0x31              ;64
0001d2  f7fffffe          BL       BSP_IntEn
0001d6  bf00              NOP      
0001d8  e7d2              B        |L1.384|
;;;66     
                          ENDP

                  BSP_EnableXferDMA PROC
;;;67     
;;;68     void BSP_EnableXferDMA(uint32_t *Buffer, uint32_t BufferSize, uint8_t Dir)
0001da  b570              PUSH     {r4-r6,lr}
;;;69     {
0001dc  4606              MOV      r6,r0
0001de  460c              MOV      r4,r1
0001e0  4615              MOV      r5,r2
;;;70     	SDDMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)Buffer;
0001e2  486b              LDR      r0,|L1.912|
0001e4  6086              STR      r6,[r0,#8]  ; SDDMA_InitStructure
;;;71     	if (!Dir)
0001e6  b925              CBNZ     r5,|L1.498|
;;;72     		SDDMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralToMemory;
0001e8  f04f0000          MOV      r0,#0
0001ec  4968              LDR      r1,|L1.912|
0001ee  60c8              STR      r0,[r1,#0xc]  ; SDDMA_InitStructure
0001f0  e003              B        |L1.506|
                  |L1.498|
;;;73     	else
;;;74     		SDDMA_InitStructure.DMA_DIR = DMA_DIR_MemoryToPeripheral;
0001f2  f04f0040          MOV      r0,#0x40
0001f6  4966              LDR      r1,|L1.912|
0001f8  60c8              STR      r0,[r1,#0xc]  ; SDDMA_InitStructure
                  |L1.506|
;;;75     	
;;;76     	SDDMA_InitStructure.DMA_BufferSize = BufferSize;
0001fa  4865              LDR      r0,|L1.912|
0001fc  6104              STR      r4,[r0,#0x10]  ; SDDMA_InitStructure
;;;77     	DMA_Init(SD_SDIO_DMA_STREAM, &SDDMA_InitStructure);
0001fe  4601              MOV      r1,r0
000200  4862              LDR      r0,|L1.908|
000202  f7fffffe          BL       DMA_Init
;;;78     
;;;79     	/* DMA2 Stream3  or Stream6 enable */
;;;80     	DMA_Cmd(SD_SDIO_DMA_STREAM, ENABLE);
000206  2101              MOVS     r1,#1
000208  4860              LDR      r0,|L1.908|
00020a  f7fffffe          BL       DMA_Cmd
;;;81     }
00020e  bd70              POP      {r4-r6,pc}
;;;82     
                          ENDP

                  SD_LowLevel_DeInit PROC
;;;87       */
;;;88     void SD_LowLevel_DeInit(void)
000210  b51c              PUSH     {r2-r4,lr}
;;;89     {
;;;90     	GPIO_InitTypeDef  GPIO_InitStructure;
;;;91       
;;;92     	/*!< Disable SDIO Clock */
;;;93     	SDIO_ClockCmd(DISABLE);
000212  2000              MOVS     r0,#0
000214  f7fffffe          BL       SDIO_ClockCmd
;;;94       
;;;95     	/*!< Set Power State to OFF */
;;;96     	SDIO_SetPowerState(SDIO_PowerState_OFF);
000218  2000              MOVS     r0,#0
00021a  f7fffffe          BL       SDIO_SetPowerState
;;;97     
;;;98     	/*!< DeInitializes the SDIO peripheral */
;;;99     	SDIO_DeInit();
00021e  f7fffffe          BL       SDIO_DeInit
;;;100      
;;;101    	/* Disable the SDIO APB2 Clock */
;;;102    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, DISABLE);
000222  2100              MOVS     r1,#0
000224  f44f6000          MOV      r0,#0x800
000228  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;103    
;;;104    	GPIO_PinAFConfig(GPIOC, GPIO_PinSource8,	GPIO_AF_MCO);
00022c  2200              MOVS     r2,#0
00022e  2108              MOVS     r1,#8
000230  485a              LDR      r0,|L1.924|
000232  f7fffffe          BL       GPIO_PinAFConfig
;;;105    	GPIO_PinAFConfig(GPIOC, GPIO_PinSource9,	GPIO_AF_MCO);
000236  2200              MOVS     r2,#0
000238  2109              MOVS     r1,#9
00023a  4858              LDR      r0,|L1.924|
00023c  f7fffffe          BL       GPIO_PinAFConfig
;;;106    	GPIO_PinAFConfig(GPIOC, GPIO_PinSource10,	GPIO_AF_MCO);
000240  2200              MOVS     r2,#0
000242  210a              MOVS     r1,#0xa
000244  4855              LDR      r0,|L1.924|
000246  f7fffffe          BL       GPIO_PinAFConfig
;;;107    	GPIO_PinAFConfig(GPIOC, GPIO_PinSource11,	GPIO_AF_MCO);
00024a  2200              MOVS     r2,#0
00024c  210b              MOVS     r1,#0xb
00024e  4853              LDR      r0,|L1.924|
000250  f7fffffe          BL       GPIO_PinAFConfig
;;;108    	GPIO_PinAFConfig(GPIOC, GPIO_PinSource12,	GPIO_AF_MCO);
000254  2200              MOVS     r2,#0
000256  210c              MOVS     r1,#0xc
000258  4850              LDR      r0,|L1.924|
00025a  f7fffffe          BL       GPIO_PinAFConfig
;;;109    	GPIO_PinAFConfig(GPIOD, GPIO_PinSource2,	GPIO_AF_MCO);
00025e  2200              MOVS     r2,#0
000260  2102              MOVS     r1,#2
000262  484f              LDR      r0,|L1.928|
000264  f7fffffe          BL       GPIO_PinAFConfig
;;;110    
;;;111    	/* Configure PC.08, PC.09, PC.10, PC.11 pins: D0, D1, D2, D3 pins */
;;;112    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_11;
000268  f44f6070          MOV      r0,#0xf00
00026c  9000              STR      r0,[sp,#0]
;;;113    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
00026e  f04f0000          MOV      r0,#0
000272  f88d0004          STRB     r0,[sp,#4]
;;;114    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
000276  f88d0007          STRB     r0,[sp,#7]
;;;115    	GPIO_Init(GPIOC, &GPIO_InitStructure);
00027a  4669              MOV      r1,sp
00027c  4847              LDR      r0,|L1.924|
00027e  f7fffffe          BL       GPIO_Init
;;;116    
;;;117    	/* Configure PD.02 CMD line */
;;;118    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
000282  f04f0004          MOV      r0,#4
000286  9000              STR      r0,[sp,#0]
;;;119    	GPIO_Init(GPIOD, &GPIO_InitStructure);
000288  4669              MOV      r1,sp
00028a  4845              LDR      r0,|L1.928|
00028c  f7fffffe          BL       GPIO_Init
;;;120    
;;;121    	/* Configure PC.12 pin: CLK pin */
;;;122    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
000290  f44f5080          MOV      r0,#0x1000
000294  9000              STR      r0,[sp,#0]
;;;123    	GPIO_Init(GPIOC, &GPIO_InitStructure);
000296  4669              MOV      r1,sp
000298  4840              LDR      r0,|L1.924|
00029a  f7fffffe          BL       GPIO_Init
;;;124    }
00029e  bd1c              POP      {r2-r4,pc}
;;;125    
                          ENDP

                  SD_LowLevel_Init PROC
;;;131      */
;;;132    void SD_LowLevel_Init(void)
0002a0  b51c              PUSH     {r2-r4,lr}
;;;133    {
;;;134    	GPIO_InitTypeDef  GPIO_InitStructure;
;;;135    
;;;136    	/* GPIOC and GPIOD Periph clock enable */
;;;137    	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC | RCC_AHB1Periph_GPIOD | SD_DETECT_GPIO_CLK, ENABLE);
0002a2  2101              MOVS     r1,#1
0002a4  200e              MOVS     r0,#0xe
0002a6  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;138    
;;;139    	GPIO_PinAFConfig(GPIOC, GPIO_PinSource8,	GPIO_AF_SDIO);
0002aa  220c              MOVS     r2,#0xc
0002ac  2108              MOVS     r1,#8
0002ae  483b              LDR      r0,|L1.924|
0002b0  f7fffffe          BL       GPIO_PinAFConfig
;;;140    	GPIO_PinAFConfig(GPIOC, GPIO_PinSource9,	GPIO_AF_SDIO);
0002b4  220c              MOVS     r2,#0xc
0002b6  2109              MOVS     r1,#9
0002b8  4838              LDR      r0,|L1.924|
0002ba  f7fffffe          BL       GPIO_PinAFConfig
;;;141    	GPIO_PinAFConfig(GPIOC, GPIO_PinSource10,	GPIO_AF_SDIO);
0002be  220c              MOVS     r2,#0xc
0002c0  210a              MOVS     r1,#0xa
0002c2  4836              LDR      r0,|L1.924|
0002c4  f7fffffe          BL       GPIO_PinAFConfig
;;;142    	GPIO_PinAFConfig(GPIOC, GPIO_PinSource11,	GPIO_AF_SDIO);
0002c8  220c              MOVS     r2,#0xc
0002ca  210b              MOVS     r1,#0xb
0002cc  4833              LDR      r0,|L1.924|
0002ce  f7fffffe          BL       GPIO_PinAFConfig
;;;143    	GPIO_PinAFConfig(GPIOC, GPIO_PinSource12,	GPIO_AF_SDIO);
0002d2  220c              MOVS     r2,#0xc
0002d4  4611              MOV      r1,r2
0002d6  4831              LDR      r0,|L1.924|
0002d8  f7fffffe          BL       GPIO_PinAFConfig
;;;144    	GPIO_PinAFConfig(GPIOD, GPIO_PinSource2,	GPIO_AF_SDIO);
0002dc  220c              MOVS     r2,#0xc
0002de  2102              MOVS     r1,#2
0002e0  482f              LDR      r0,|L1.928|
0002e2  f7fffffe          BL       GPIO_PinAFConfig
;;;145    
;;;146    	/* Configure PC.08, PC.09, PC.10, PC.11 pins: D0, D1, D2, D3 pins */
;;;147    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_11;
0002e6  f44f6070          MOV      r0,#0xf00
0002ea  9000              STR      r0,[sp,#0]
;;;148    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_25MHz;
0002ec  f04f0001          MOV      r0,#1
0002f0  f88d0005          STRB     r0,[sp,#5]
;;;149    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
0002f4  f04f0002          MOV      r0,#2
0002f8  f88d0004          STRB     r0,[sp,#4]
;;;150    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
0002fc  f04f0000          MOV      r0,#0
000300  f88d0006          STRB     r0,[sp,#6]
;;;151    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
000304  f04f0001          MOV      r0,#1
000308  f88d0007          STRB     r0,[sp,#7]
;;;152    	GPIO_Init(GPIOC, &GPIO_InitStructure);
00030c  4669              MOV      r1,sp
00030e  4823              LDR      r0,|L1.924|
000310  f7fffffe          BL       GPIO_Init
;;;153    
;;;154    	/* Configure PD.02 CMD line */
;;;155    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
000314  f04f0004          MOV      r0,#4
000318  9000              STR      r0,[sp,#0]
;;;156    	GPIO_Init(GPIOD, &GPIO_InitStructure);
00031a  4669              MOV      r1,sp
00031c  4820              LDR      r0,|L1.928|
00031e  f7fffffe          BL       GPIO_Init
;;;157    
;;;158    	/* Configure PC.12 pin: CLK pin */
;;;159    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
000322  f44f5080          MOV      r0,#0x1000
000326  9000              STR      r0,[sp,#0]
;;;160    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
000328  f04f0000          MOV      r0,#0
00032c  f88d0007          STRB     r0,[sp,#7]
;;;161    	GPIO_Init(GPIOC, &GPIO_InitStructure);
000330  4669              MOV      r1,sp
000332  481a              LDR      r0,|L1.924|
000334  f7fffffe          BL       GPIO_Init
;;;162      
;;;163    	/*!< Configure SD_SPI_DETECT_PIN pin: SD Card detect pin */
;;;164    	GPIO_InitStructure.GPIO_Pin = SD_DETECT_PIN;
000338  f44f4000          MOV      r0,#0x8000
00033c  9000              STR      r0,[sp,#0]
;;;165    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
00033e  f04f0000          MOV      r0,#0
000342  f88d0004          STRB     r0,[sp,#4]
;;;166    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
000346  f04f0001          MOV      r0,#1
00034a  f88d0007          STRB     r0,[sp,#7]
;;;167    	GPIO_Init(SD_DETECT_GPIO_PORT, &GPIO_InitStructure);
00034e  4669              MOV      r1,sp
000350  4814              LDR      r0,|L1.932|
000352  f7fffffe          BL       GPIO_Init
;;;168    
;;;169    	/* Enable the SDIO APB2 Clock */
;;;170    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, ENABLE);
000356  2101              MOVS     r1,#1
000358  02c8              LSLS     r0,r1,#11
00035a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;171    
;;;172    	/* Enable the DMA2 Clock */
;;;173    	RCC_AHB1PeriphClockCmd(SD_SDIO_DMA_CLK, ENABLE);
00035e  2101              MOVS     r1,#1
000360  0588              LSLS     r0,r1,#22
000362  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;174    }
000366  bd1c              POP      {r2-r4,pc}
;;;175    
                          ENDP

                  SD_DMAEndOfTransferStatus PROC
;;;267      */
;;;268    uint32_t SD_DMAEndOfTransferStatus(void)
000368  b510              PUSH     {r4,lr}
;;;269    {
;;;270    	return (uint32_t)DMA_GetFlagStatus(SD_SDIO_DMA_STREAM, SD_SDIO_DMA_FLAG_TCIF);
00036a  f04f51c0          MOV      r1,#0x18000000
00036e  4807              LDR      r0,|L1.908|
000370  f7fffffe          BL       DMA_GetFlagStatus
;;;271    }
000374  bd10              POP      {r4,pc}
;;;272    
                          ENDP

000376  0000              DCW      0x0000
                  |L1.888|
                          DCD      StopCondition
                  |L1.892|
                          DCD      0x40012c08
                  |L1.896|
                          DCD      TransferError
                  |L1.900|
                          DCD      TransferEnd
                  |L1.904|
                          DCD      BSP_Info
                  |L1.908|
                          DCD      0x40026458
                  |L1.912|
                          DCD      SDDMA_InitStructure
                  |L1.916|
                          DCD      0x40012c80
                  |L1.920|
                          DCD      __TmpBuf
                  |L1.924|
                          DCD      0x40020800
                  |L1.928|
                          DCD      0x40020c00
                  |L1.932|
                          DCD      0x40020400

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  SDDMA_InitStructure
                          %        60

                          AREA ||.data||, DATA, ALIGN=2

                  __TmpBuf
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\BSP\\bsp_sdio.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_bsp_sdio_c_4905c953____REV16|
#line 112 "..\\BSP\\CMSIS\\core_cmInstr.h"
|__asm___10_bsp_sdio_c_4905c953____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_bsp_sdio_c_4905c953____REVSH|
#line 130
|__asm___10_bsp_sdio_c_4905c953____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
