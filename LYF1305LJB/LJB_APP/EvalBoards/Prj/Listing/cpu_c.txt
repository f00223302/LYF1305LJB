; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Output\cpu_c.o --asm_dir=.\Listing\ --list_dir=.\Listing\ --depend=.\Output\cpu_c.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\BSP -I..\BSP\UCOS-II -I..\BSP\STM32F2xx\inc -I..\BSP\CMSIS -I..\BSP\CMSIS\Device_Support -I..\BSP\UCOS-II -I..\..\uC-CPU -I..\..\uC-CPU\ARM-Cortex-M3 -I..\..\uC-LIB -I..\..\uC-LIB\Ports\ARM-Cortex-M3 -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3 -I..\App -I..\Prj -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\INC\ST\STM32F2xx -DUSE_STDPERIPH_DRIVER -DDEBUG -DLJB_CPU_MAIN -DUSE_CPU_F205RC --omf_browse=.\Output\cpu_c.crf ..\..\uC-CPU\ARM-Cortex-M3\cpu_c.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  CPU_BitBandClr PROC
;;;134    
;;;135    void  CPU_BitBandClr (CPU_ADDR    addr,
000000  b510              PUSH     {r4,lr}
;;;136                          CPU_INT08U  bit_nbr)
;;;137    {
;;;138        CPU_ADDR  bit_word_off;
;;;139        CPU_ADDR  bit_word_addr;
;;;140    
;;;141    
;;;142        if ((addr >= CPU_BIT_BAND_SRAM_REG_LO) &&
000002  f1b05f00          CMP      r0,#0x20000000
000006  d30c              BCC      |L1.34|
;;;143            (addr <= CPU_BIT_BAND_SRAM_REG_HI)) {
000008  4cf7              LDR      r4,|L1.1000|
00000a  42a0              CMP      r0,r4
00000c  d809              BHI      |L1.34|
;;;144            bit_word_off  = ((addr - CPU_BIT_BAND_SRAM_REG_LO  ) * 32) + (bit_nbr * 4);
00000e  ea4f1440          LSL      r4,r0,#5
000012  eb040381          ADD      r3,r4,r1,LSL #2
;;;145            bit_word_addr = CPU_BIT_BAND_SRAM_BASE   + bit_word_off;
000016  f1035208          ADD      r2,r3,#0x22000000
;;;146    
;;;147          *(volatile CPU_INT32U *)(bit_word_addr) = 0;
00001a  f04f0400          MOV      r4,#0
00001e  6014              STR      r4,[r2,#0]
000020  e00e              B        |L1.64|
                  |L1.34|
;;;148    
;;;149        } else if ((addr >= CPU_BIT_BAND_PERIPH_REG_LO) &&
000022  f1b04f80          CMP      r0,#0x40000000
000026  d30b              BCC      |L1.64|
;;;150                   (addr <= CPU_BIT_BAND_PERIPH_REG_HI)) {
000028  4cf0              LDR      r4,|L1.1004|
00002a  42a0              CMP      r0,r4
00002c  d808              BHI      |L1.64|
;;;151            bit_word_off  = ((addr - CPU_BIT_BAND_PERIPH_REG_LO) * 32) + (bit_nbr * 4);
00002e  ea4f1440          LSL      r4,r0,#5
000032  eb040381          ADD      r3,r4,r1,LSL #2
;;;152            bit_word_addr = CPU_BIT_BAND_PERIPH_BASE + bit_word_off;
000036  f1034284          ADD      r2,r3,#0x42000000
;;;153    
;;;154          *(volatile CPU_INT32U *)(bit_word_addr) = 0;
00003a  f04f0400          MOV      r4,#0
00003e  6014              STR      r4,[r2,#0]
                  |L1.64|
;;;155        }
;;;156    }
000040  bd10              POP      {r4,pc}
;;;157    
                          ENDP

                  CPU_BitBandSet PROC
;;;177    
;;;178    void  CPU_BitBandSet (CPU_ADDR    addr,
000042  b510              PUSH     {r4,lr}
;;;179                          CPU_INT08U  bit_nbr)
;;;180    {
;;;181        CPU_ADDR  bit_word_off;
;;;182        CPU_ADDR  bit_word_addr;
;;;183    
;;;184    
;;;185        if ((addr >= CPU_BIT_BAND_SRAM_REG_LO) &&
000044  f1b05f00          CMP      r0,#0x20000000
000048  d30c              BCC      |L1.100|
;;;186            (addr <= CPU_BIT_BAND_SRAM_REG_HI)) {
00004a  4ce7              LDR      r4,|L1.1000|
00004c  42a0              CMP      r0,r4
00004e  d809              BHI      |L1.100|
;;;187            bit_word_off  = ((addr - CPU_BIT_BAND_SRAM_REG_LO  ) * 32) + (bit_nbr * 4);
000050  ea4f1440          LSL      r4,r0,#5
000054  eb040381          ADD      r3,r4,r1,LSL #2
;;;188            bit_word_addr = CPU_BIT_BAND_SRAM_BASE   + bit_word_off;
000058  f1035208          ADD      r2,r3,#0x22000000
;;;189    
;;;190          *(volatile CPU_INT32U *)(bit_word_addr) = 1;
00005c  f04f0401          MOV      r4,#1
000060  6014              STR      r4,[r2,#0]
000062  e00e              B        |L1.130|
                  |L1.100|
;;;191    
;;;192        } else if ((addr >= CPU_BIT_BAND_PERIPH_REG_LO) &&
000064  f1b04f80          CMP      r0,#0x40000000
000068  d30b              BCC      |L1.130|
;;;193                   (addr <= CPU_BIT_BAND_PERIPH_REG_HI)) {
00006a  4ce0              LDR      r4,|L1.1004|
00006c  42a0              CMP      r0,r4
00006e  d808              BHI      |L1.130|
;;;194            bit_word_off  = ((addr - CPU_BIT_BAND_PERIPH_REG_LO) * 32) + (bit_nbr * 4);
000070  ea4f1440          LSL      r4,r0,#5
000074  eb040381          ADD      r3,r4,r1,LSL #2
;;;195            bit_word_addr = CPU_BIT_BAND_PERIPH_BASE + bit_word_off;
000078  f1034284          ADD      r2,r3,#0x42000000
;;;196    
;;;197          *(volatile CPU_INT32U *)(bit_word_addr) = 1;
00007c  f04f0401          MOV      r4,#1
000080  6014              STR      r4,[r2,#0]
                  |L1.130|
;;;198        }
;;;199    }
000082  bd10              POP      {r4,pc}
;;;200    
                          ENDP

                  CPU_IntSrcDis PROC
;;;251    /*$PAGE*/
;;;252    void  CPU_IntSrcDis (CPU_INT08U  pos)
000084  e92d41f0          PUSH     {r4-r8,lr}
;;;253    {
000088  4604              MOV      r4,r0
;;;254        CPU_INT08U  group;
;;;255        CPU_INT08U  pos_max;
;;;256        CPU_INT08U  nbr;
;;;257        CPU_SR_ALLOC();
00008a  f04f0800          MOV      r8,#0
;;;258    
;;;259    
;;;260        switch (pos) {
00008e  2c10              CMP      r4,#0x10
000090  d26b              BCS      |L1.362|
000092  e8dff004          TBB      [pc,r4]
000096  080e              DCB      0x08,0x0e
000098  0f101429          DCB      0x0f,0x10,0x14,0x29
00009c  3e090a0b          DCB      0x3e,0x09,0x0a,0x0b
0000a0  0c11120d          DCB      0x0c,0x11,0x12,0x0d
0000a4  1353              DCB      0x13,0x53
;;;261            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;262            case CPU_INT_RSVD_07:
0000a6  bf00              NOP      
;;;263            case CPU_INT_RSVD_08:
0000a8  bf00              NOP      
;;;264            case CPU_INT_RSVD_09:
0000aa  bf00              NOP      
;;;265            case CPU_INT_RSVD_10:
0000ac  bf00              NOP      
;;;266            case CPU_INT_RSVD_13:
0000ae  bf00              NOP      
;;;267                 break;
0000b0  e091              B        |L1.470|
;;;268    
;;;269    
;;;270                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;271            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;272            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
0000b2  bf00              NOP      
;;;273            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
0000b4  bf00              NOP      
;;;274            case CPU_INT_SVCALL:                                    /* SVCall (see Note #2).                                */
0000b6  bf00              NOP      
;;;275            case CPU_INT_DBGMON:                                    /* Debug monitor (see Note #2).                         */
0000b8  bf00              NOP      
;;;276            case CPU_INT_PENDSV:                                    /* PendSV (see Note #2).                                */
0000ba  bf00              NOP      
;;;277                 break;
0000bc  e08b              B        |L1.470|
;;;278    
;;;279            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;280                 CPU_CRITICAL_ENTER();
0000be  bf00              NOP      
0000c0  bf00              NOP      
0000c2  f7fffffe          BL       CPU_SR_Save
0000c6  4680              MOV      r8,r0
0000c8  bf00              NOP      
0000ca  bf00              NOP      
;;;281                 CPU_REG_NVIC_SHCSR &= ~CPU_REG_NVIC_SHCSR_MEMFAULTENA;
0000cc  48c8              LDR      r0,|L1.1008|
0000ce  6800              LDR      r0,[r0,#0]
0000d0  f4203080          BIC      r0,r0,#0x10000
0000d4  49c6              LDR      r1,|L1.1008|
0000d6  6008              STR      r0,[r1,#0]
;;;282                 CPU_CRITICAL_EXIT();
0000d8  bf00              NOP      
0000da  bf00              NOP      
0000dc  4640              MOV      r0,r8
0000de  f7fffffe          BL       CPU_SR_Restore
0000e2  bf00              NOP      
0000e4  bf00              NOP      
;;;283                 break;
0000e6  e076              B        |L1.470|
;;;284    
;;;285            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;286                 CPU_CRITICAL_ENTER();
0000e8  bf00              NOP      
0000ea  bf00              NOP      
0000ec  f7fffffe          BL       CPU_SR_Save
0000f0  4680              MOV      r8,r0
0000f2  bf00              NOP      
0000f4  bf00              NOP      
;;;287                 CPU_REG_NVIC_SHCSR &= ~CPU_REG_NVIC_SHCSR_BUSFAULTENA;
0000f6  48be              LDR      r0,|L1.1008|
0000f8  6800              LDR      r0,[r0,#0]
0000fa  f4203000          BIC      r0,r0,#0x20000
0000fe  49bc              LDR      r1,|L1.1008|
000100  6008              STR      r0,[r1,#0]
;;;288                 CPU_CRITICAL_EXIT();
000102  bf00              NOP      
000104  bf00              NOP      
000106  4640              MOV      r0,r8
000108  f7fffffe          BL       CPU_SR_Restore
00010c  bf00              NOP      
00010e  bf00              NOP      
;;;289                 break;
000110  e061              B        |L1.470|
;;;290    
;;;291            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;292                 CPU_CRITICAL_ENTER();
000112  bf00              NOP      
000114  bf00              NOP      
000116  f7fffffe          BL       CPU_SR_Save
00011a  4680              MOV      r8,r0
00011c  bf00              NOP      
00011e  bf00              NOP      
;;;293                 CPU_REG_NVIC_SHCSR &= ~CPU_REG_NVIC_SHCSR_USGFAULTENA;
000120  48b3              LDR      r0,|L1.1008|
000122  6800              LDR      r0,[r0,#0]
000124  f4202080          BIC      r0,r0,#0x40000
000128  49b1              LDR      r1,|L1.1008|
00012a  6008              STR      r0,[r1,#0]
;;;294                 CPU_CRITICAL_EXIT();
00012c  bf00              NOP      
00012e  bf00              NOP      
000130  4640              MOV      r0,r8
000132  f7fffffe          BL       CPU_SR_Restore
000136  bf00              NOP      
000138  bf00              NOP      
;;;295                 break;
00013a  e04c              B        |L1.470|
;;;296    
;;;297            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;298                 CPU_CRITICAL_ENTER();
00013c  bf00              NOP      
00013e  bf00              NOP      
000140  f7fffffe          BL       CPU_SR_Save
000144  4680              MOV      r8,r0
000146  bf00              NOP      
000148  bf00              NOP      
;;;299                 CPU_REG_NVIC_ST_CTRL &= ~CPU_REG_NVIC_ST_CTRL_ENABLE;
00014a  f04f20e0          MOV      r0,#0xe000e000
00014e  6900              LDR      r0,[r0,#0x10]
000150  f0200001          BIC      r0,r0,#1
000154  f04f21e0          MOV      r1,#0xe000e000
000158  6108              STR      r0,[r1,#0x10]
;;;300                 CPU_CRITICAL_EXIT();
00015a  bf00              NOP      
00015c  bf00              NOP      
00015e  4640              MOV      r0,r8
000160  f7fffffe          BL       CPU_SR_Restore
000164  bf00              NOP      
000166  bf00              NOP      
;;;301                 break;
000168  e035              B        |L1.470|
                  |L1.362|
;;;302    
;;;303    
;;;304                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;305            default:
;;;306                pos_max = CPU_INT_SRC_POS_MAX;
00016a  f04f20e0          MOV      r0,#0xe000e000
00016e  6840              LDR      r0,[r0,#4]
000170  f1000001          ADD      r0,r0,#1
000174  f04f0110          MOV      r1,#0x10
000178  eb011040          ADD      r0,r1,r0,LSL #5
00017c  b2c6              UXTB     r6,r0
;;;307                if (pos < pos_max) {                                /* See Note #3.                                         */
00017e  42b4              CMP      r4,r6
000180  da28              BGE      |L1.468|
;;;308                     group = (pos - 16) / 32;
000182  f1a40010          SUB      r0,r4,#0x10
000186  ea4f71e0          ASR      r1,r0,#31
00018a  eb0061d1          ADD      r1,r0,r1,LSR #27
00018e  f3c11547          UBFX     r5,r1,#5,#8
;;;309                     nbr   = (pos - 16) % 32;
000192  ea4f71e0          ASR      r1,r0,#31
000196  eb0061d1          ADD      r1,r0,r1,LSR #27
00019a  ea4f1161          ASR      r1,r1,#5
00019e  eba01141          SUB      r1,r0,r1,LSL #5
0001a2  b2cf              UXTB     r7,r1
;;;310    
;;;311                     CPU_CRITICAL_ENTER();
0001a4  bf00              NOP      
0001a6  bf00              NOP      
0001a8  f7fffffe          BL       CPU_SR_Save
0001ac  4680              MOV      r8,r0
0001ae  bf00              NOP      
0001b0  bf00              NOP      
;;;312                     CPU_REG_NVIC_CLREN(group) = DEF_BIT(nbr);
0001b2  f04f0001          MOV      r0,#1
0001b6  fa00f007          LSL      r0,r0,r7
0001ba  f04f21e0          MOV      r1,#0xe000e000
0001be  eb010185          ADD      r1,r1,r5,LSL #2
0001c2  f8c10180          STR      r0,[r1,#0x180]
;;;313                     CPU_CRITICAL_EXIT();
0001c6  bf00              NOP      
0001c8  bf00              NOP      
0001ca  4640              MOV      r0,r8
0001cc  f7fffffe          BL       CPU_SR_Restore
0001d0  bf00              NOP      
0001d2  bf00              NOP      
                  |L1.468|
;;;314                 }
;;;315                 break;
0001d4  bf00              NOP      
                  |L1.470|
0001d6  bf00              NOP                            ;267
;;;316        }
;;;317    }
0001d8  e8bd81f0          POP      {r4-r8,pc}
;;;318    
                          ENDP

                  CPU_IntSrcEn PROC
;;;340    
;;;341    void  CPU_IntSrcEn (CPU_INT08U  pos)
0001dc  e92d41f0          PUSH     {r4-r8,lr}
;;;342    {
0001e0  4604              MOV      r4,r0
;;;343        CPU_INT08U  group;
;;;344        CPU_INT08U  nbr;
;;;345        CPU_INT08U  pos_max;
;;;346        CPU_SR_ALLOC();
0001e2  f04f0800          MOV      r8,#0
;;;347    
;;;348    
;;;349        switch (pos) {
0001e6  2c10              CMP      r4,#0x10
0001e8  d26b              BCS      |L1.706|
0001ea  e8dff004          TBB      [pc,r4]
0001ee  080e              DCB      0x08,0x0e
0001f0  0f101429          DCB      0x0f,0x10,0x14,0x29
0001f4  3e090a0b          DCB      0x3e,0x09,0x0a,0x0b
0001f8  0c11120d          DCB      0x0c,0x11,0x12,0x0d
0001fc  1353              DCB      0x13,0x53
;;;350            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;351            case CPU_INT_RSVD_07:
0001fe  bf00              NOP      
;;;352            case CPU_INT_RSVD_08:
000200  bf00              NOP      
;;;353            case CPU_INT_RSVD_09:
000202  bf00              NOP      
;;;354            case CPU_INT_RSVD_10:
000204  bf00              NOP      
;;;355            case CPU_INT_RSVD_13:
000206  bf00              NOP      
;;;356                 break;
000208  e091              B        |L1.814|
;;;357    
;;;358    
;;;359                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;360            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;361            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
00020a  bf00              NOP      
;;;362            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
00020c  bf00              NOP      
;;;363            case CPU_INT_SVCALL:                                    /* SVCall (see Note #2).                                */
00020e  bf00              NOP      
;;;364            case CPU_INT_DBGMON:                                    /* Debug monitor (see Note #2).                         */
000210  bf00              NOP      
;;;365            case CPU_INT_PENDSV:                                    /* PendSV (see Note #2).                                */
000212  bf00              NOP      
;;;366                 break;
000214  e08b              B        |L1.814|
;;;367    
;;;368            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;369                 CPU_CRITICAL_ENTER();
000216  bf00              NOP      
000218  bf00              NOP      
00021a  f7fffffe          BL       CPU_SR_Save
00021e  4680              MOV      r8,r0
000220  bf00              NOP      
000222  bf00              NOP      
;;;370                 CPU_REG_NVIC_SHCSR |= CPU_REG_NVIC_SHCSR_MEMFAULTENA;
000224  4872              LDR      r0,|L1.1008|
000226  6800              LDR      r0,[r0,#0]
000228  f4403080          ORR      r0,r0,#0x10000
00022c  4970              LDR      r1,|L1.1008|
00022e  6008              STR      r0,[r1,#0]
;;;371                 CPU_CRITICAL_EXIT();
000230  bf00              NOP      
000232  bf00              NOP      
000234  4640              MOV      r0,r8
000236  f7fffffe          BL       CPU_SR_Restore
00023a  bf00              NOP      
00023c  bf00              NOP      
;;;372                 break;
00023e  e076              B        |L1.814|
;;;373    
;;;374            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;375                 CPU_CRITICAL_ENTER();
000240  bf00              NOP      
000242  bf00              NOP      
000244  f7fffffe          BL       CPU_SR_Save
000248  4680              MOV      r8,r0
00024a  bf00              NOP      
00024c  bf00              NOP      
;;;376                 CPU_REG_NVIC_SHCSR |= CPU_REG_NVIC_SHCSR_BUSFAULTENA;
00024e  4868              LDR      r0,|L1.1008|
000250  6800              LDR      r0,[r0,#0]
000252  f4403000          ORR      r0,r0,#0x20000
000256  4966              LDR      r1,|L1.1008|
000258  6008              STR      r0,[r1,#0]
;;;377                 CPU_CRITICAL_EXIT();
00025a  bf00              NOP      
00025c  bf00              NOP      
00025e  4640              MOV      r0,r8
000260  f7fffffe          BL       CPU_SR_Restore
000264  bf00              NOP      
000266  bf00              NOP      
;;;378                 break;
000268  e061              B        |L1.814|
;;;379    
;;;380            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;381                 CPU_CRITICAL_ENTER();
00026a  bf00              NOP      
00026c  bf00              NOP      
00026e  f7fffffe          BL       CPU_SR_Save
000272  4680              MOV      r8,r0
000274  bf00              NOP      
000276  bf00              NOP      
;;;382                 CPU_REG_NVIC_SHCSR |= CPU_REG_NVIC_SHCSR_USGFAULTENA;
000278  485d              LDR      r0,|L1.1008|
00027a  6800              LDR      r0,[r0,#0]
00027c  f4402080          ORR      r0,r0,#0x40000
000280  495b              LDR      r1,|L1.1008|
000282  6008              STR      r0,[r1,#0]
;;;383                 CPU_CRITICAL_EXIT();
000284  bf00              NOP      
000286  bf00              NOP      
000288  4640              MOV      r0,r8
00028a  f7fffffe          BL       CPU_SR_Restore
00028e  bf00              NOP      
000290  bf00              NOP      
;;;384                 break;
000292  e04c              B        |L1.814|
;;;385    
;;;386            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;387                 CPU_CRITICAL_ENTER();
000294  bf00              NOP      
000296  bf00              NOP      
000298  f7fffffe          BL       CPU_SR_Save
00029c  4680              MOV      r8,r0
00029e  bf00              NOP      
0002a0  bf00              NOP      
;;;388                 CPU_REG_NVIC_ST_CTRL |= CPU_REG_NVIC_ST_CTRL_ENABLE;
0002a2  f04f20e0          MOV      r0,#0xe000e000
0002a6  6900              LDR      r0,[r0,#0x10]
0002a8  f0400001          ORR      r0,r0,#1
0002ac  f04f21e0          MOV      r1,#0xe000e000
0002b0  6108              STR      r0,[r1,#0x10]
;;;389                 CPU_CRITICAL_EXIT();
0002b2  bf00              NOP      
0002b4  bf00              NOP      
0002b6  4640              MOV      r0,r8
0002b8  f7fffffe          BL       CPU_SR_Restore
0002bc  bf00              NOP      
0002be  bf00              NOP      
;;;390                 break;
0002c0  e035              B        |L1.814|
                  |L1.706|
;;;391    
;;;392    
;;;393                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;394            default:
;;;395                pos_max = CPU_INT_SRC_POS_MAX;
0002c2  f04f20e0          MOV      r0,#0xe000e000
0002c6  6840              LDR      r0,[r0,#4]
0002c8  f1000001          ADD      r0,r0,#1
0002cc  f04f0110          MOV      r1,#0x10
0002d0  eb011040          ADD      r0,r1,r0,LSL #5
0002d4  b2c7              UXTB     r7,r0
;;;396                if (pos < pos_max) {                                /* See Note #3.                                         */
0002d6  42bc              CMP      r4,r7
0002d8  da28              BGE      |L1.812|
;;;397                     group = (pos - 16) / 32;
0002da  f1a40010          SUB      r0,r4,#0x10
0002de  ea4f71e0          ASR      r1,r0,#31
0002e2  eb0061d1          ADD      r1,r0,r1,LSR #27
0002e6  f3c11547          UBFX     r5,r1,#5,#8
;;;398                     nbr   = (pos - 16) % 32;
0002ea  ea4f71e0          ASR      r1,r0,#31
0002ee  eb0061d1          ADD      r1,r0,r1,LSR #27
0002f2  ea4f1161          ASR      r1,r1,#5
0002f6  eba01141          SUB      r1,r0,r1,LSL #5
0002fa  b2ce              UXTB     r6,r1
;;;399    
;;;400                     CPU_CRITICAL_ENTER();
0002fc  bf00              NOP      
0002fe  bf00              NOP      
000300  f7fffffe          BL       CPU_SR_Save
000304  4680              MOV      r8,r0
000306  bf00              NOP      
000308  bf00              NOP      
;;;401                     CPU_REG_NVIC_SETEN(group) = DEF_BIT(nbr);
00030a  f04f0001          MOV      r0,#1
00030e  fa00f006          LSL      r0,r0,r6
000312  f04f21e0          MOV      r1,#0xe000e000
000316  eb010185          ADD      r1,r1,r5,LSL #2
00031a  f8c10100          STR      r0,[r1,#0x100]
;;;402                     CPU_CRITICAL_EXIT();
00031e  bf00              NOP      
000320  bf00              NOP      
000322  4640              MOV      r0,r8
000324  f7fffffe          BL       CPU_SR_Restore
000328  bf00              NOP      
00032a  bf00              NOP      
                  |L1.812|
;;;403                 }
;;;404                 break;
00032c  bf00              NOP      
                  |L1.814|
00032e  bf00              NOP                            ;356
;;;405        }
;;;406    }
000330  e8bd81f0          POP      {r4-r8,pc}
;;;407    
                          ENDP

                  CPU_IntSrcPendClr PROC
;;;439    
;;;440    void  CPU_IntSrcPendClr (CPU_INT08U  pos)
000334  e92d41f0          PUSH     {r4-r8,lr}
;;;441    
;;;442    {
000338  4604              MOV      r4,r0
;;;443        CPU_INT08U  group;
;;;444        CPU_INT08U  nbr;
;;;445        CPU_INT08U  pos_max;
;;;446        CPU_SR_ALLOC();
00033a  f04f0800          MOV      r8,#0
;;;447    
;;;448    
;;;449        switch (pos) {
00033e  2c10              CMP      r4,#0x10
000340  d219              BCS      |L1.886|
000342  e8dff004          TBB      [pc,r4]
000346  080e              DCB      0x08,0x0e
000348  0f101115          DCB      0x0f,0x10,0x11,0x15
00034c  16090a0b          DCB      0x16,0x09,0x0a,0x0b
000350  0c12130d          DCB      0x0c,0x12,0x13,0x0d
000354  1417              DCB      0x14,0x17
;;;450            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;451            case CPU_INT_RSVD_07:
000356  bf00              NOP      
;;;452            case CPU_INT_RSVD_08:
000358  bf00              NOP      
;;;453            case CPU_INT_RSVD_09:
00035a  bf00              NOP      
;;;454            case CPU_INT_RSVD_10:
00035c  bf00              NOP      
;;;455            case CPU_INT_RSVD_13:
00035e  bf00              NOP      
;;;456                 break;
000360  e03f              B        |L1.994|
;;;457                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;458            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;459            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
000362  bf00              NOP      
;;;460            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
000364  bf00              NOP      
;;;461            case CPU_INT_MEM:                                       /* Memory management (see Note #2).                     */
000366  bf00              NOP      
;;;462            case CPU_INT_SVCALL:                                    /* SVCall (see Note #2).                                */
000368  bf00              NOP      
;;;463            case CPU_INT_DBGMON:                                    /* Debug monitor (see Note #2).                         */
00036a  bf00              NOP      
;;;464            case CPU_INT_PENDSV:                                    /* PendSV (see Note #2).                                */
00036c  bf00              NOP      
;;;465            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
00036e  bf00              NOP      
;;;466            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
000370  bf00              NOP      
;;;467            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
000372  bf00              NOP      
;;;468                 break;
000374  e035              B        |L1.994|
                  |L1.886|
;;;469                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;470            default:
;;;471                pos_max = CPU_INT_SRC_POS_MAX;
000376  f04f20e0          MOV      r0,#0xe000e000
00037a  6840              LDR      r0,[r0,#4]
00037c  f1000001          ADD      r0,r0,#1
000380  f04f0110          MOV      r1,#0x10
000384  eb011040          ADD      r0,r1,r0,LSL #5
000388  b2c7              UXTB     r7,r0
;;;472                if (pos < pos_max) {                                /* See Note #3.                                         */
00038a  42bc              CMP      r4,r7
00038c  da28              BGE      |L1.992|
;;;473                     group = (pos - 16) / 32;
00038e  f1a40010          SUB      r0,r4,#0x10
000392  ea4f71e0          ASR      r1,r0,#31
000396  eb0061d1          ADD      r1,r0,r1,LSR #27
00039a  f3c11547          UBFX     r5,r1,#5,#8
;;;474                     nbr   = (pos - 16) % 32;
00039e  ea4f71e0          ASR      r1,r0,#31
0003a2  eb0061d1          ADD      r1,r0,r1,LSR #27
0003a6  ea4f1161          ASR      r1,r1,#5
0003aa  eba01141          SUB      r1,r0,r1,LSL #5
0003ae  b2ce              UXTB     r6,r1
;;;475    
;;;476                     CPU_CRITICAL_ENTER();
0003b0  bf00              NOP      
0003b2  bf00              NOP      
0003b4  f7fffffe          BL       CPU_SR_Save
0003b8  4680              MOV      r8,r0
0003ba  bf00              NOP      
0003bc  bf00              NOP      
;;;477                     CPU_REG_NVIC_CLRPEND(group) = DEF_BIT(nbr);
0003be  f04f0001          MOV      r0,#1
0003c2  fa00f006          LSL      r0,r0,r6
0003c6  f04f21e0          MOV      r1,#0xe000e000
0003ca  eb010185          ADD      r1,r1,r5,LSL #2
0003ce  f8c10280          STR      r0,[r1,#0x280]
;;;478                     CPU_CRITICAL_EXIT();
0003d2  bf00              NOP      
0003d4  bf00              NOP      
0003d6  4640              MOV      r0,r8
0003d8  f7fffffe          BL       CPU_SR_Restore
0003dc  bf00              NOP      
0003de  bf00              NOP      
                  |L1.992|
;;;479                 }
;;;480                 break;
0003e0  bf00              NOP      
                  |L1.994|
0003e2  bf00              NOP                            ;456
;;;481        }
;;;482    }
0003e4  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1000|
                          DCD      0x200fffff
                  |L1.1004|
                          DCD      0x400fffff
                  |L1.1008|
                          DCD      0xe000ed24
                          ENDP

                  CPU_IntSrcPrioSet PROC
;;;511    
;;;512    void  CPU_IntSrcPrioSet (CPU_INT08U  pos,
0003f4  e92d5ff0          PUSH     {r4-r12,lr}
;;;513                             CPU_INT08U  prio)
;;;514    {
0003f8  4606              MOV      r6,r0
0003fa  460d              MOV      r5,r1
;;;515        CPU_INT08U  group;
;;;516        CPU_INT08U  nbr;
;;;517        CPU_INT08U  pos_max;
;;;518        CPU_INT32U  prio_32;
;;;519        CPU_INT32U  temp;
;;;520        CPU_SR_ALLOC();
0003fc  f04f0b00          MOV      r11,#0
;;;521    
;;;522    
;;;523        prio_32 = CPU_RevBits((CPU_INT08U)prio);
000400  4628              MOV      r0,r5
000402  f7fffffe          BL       CPU_RevBits
000406  4682              MOV      r10,r0
;;;524        prio    = (CPU_INT08U)(prio_32 >> (3 * DEF_OCTET_NBR_BITS));
000408  ea4f651a          LSR      r5,r10,#24
;;;525    
;;;526        switch (pos) {
00040c  2e10              CMP      r6,#0x10
00040e  d27c              BCS      |L1.1290|
000410  e8dff006          TBB      [pc,r6]
000414  080e0f10          DCB      0x08,0x0e,0x0f,0x10
000418  11273d09          DCB      0x11,0x27,0x3d,0x09
00041c  0a0b0c53          DCB      0x0a,0x0b,0x0c,0x53
000420  690d8197          DCB      0x69,0x0d,0x81,0x97
;;;527            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;528            case CPU_INT_RSVD_07:
000424  bf00              NOP      
;;;529            case CPU_INT_RSVD_08:
000426  bf00              NOP      
;;;530            case CPU_INT_RSVD_09:
000428  bf00              NOP      
;;;531            case CPU_INT_RSVD_10:
00042a  bf00              NOP      
;;;532            case CPU_INT_RSVD_13:
00042c  bf00              NOP      
;;;533                 break;
00042e  e0e0              B        |L1.1522|
;;;534    
;;;535    
;;;536                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;537            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;538            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
000430  bf00              NOP      
;;;539            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
000432  bf00              NOP      
;;;540                 break;
000434  e0dd              B        |L1.1522|
;;;541    
;;;542            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;543                 CPU_CRITICAL_ENTER();
000436  bf00              NOP      
000438  bf00              NOP      
00043a  f7fffffe          BL       CPU_SR_Save
00043e  4683              MOV      r11,r0
000440  bf00              NOP      
000442  bf00              NOP      
;;;544                 temp                 = CPU_REG_NVIC_SHPRI1;
000444  48dd              LDR      r0,|L1.1980|
000446  6804              LDR      r4,[r0,#0]
;;;545                 temp                &= ~(DEF_OCTET_MASK << (0 * DEF_OCTET_NBR_BITS));
000448  f02404ff          BIC      r4,r4,#0xff
;;;546                 temp                |=  (prio           << (0 * DEF_OCTET_NBR_BITS));
00044c  ea440405          ORR      r4,r4,r5
;;;547                 CPU_REG_NVIC_SHPRI1  = temp;
000450  6004              STR      r4,[r0,#0]
;;;548                 CPU_CRITICAL_EXIT();
000452  bf00              NOP      
000454  bf00              NOP      
000456  4658              MOV      r0,r11
000458  f7fffffe          BL       CPU_SR_Restore
00045c  bf00              NOP      
00045e  bf00              NOP      
;;;549                 break;
000460  e0c7              B        |L1.1522|
;;;550    
;;;551            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;552                 CPU_CRITICAL_ENTER();
000462  bf00              NOP      
000464  bf00              NOP      
000466  f7fffffe          BL       CPU_SR_Save
00046a  4683              MOV      r11,r0
00046c  bf00              NOP      
00046e  bf00              NOP      
;;;553                 temp                 = CPU_REG_NVIC_SHPRI1;
000470  48d2              LDR      r0,|L1.1980|
000472  6804              LDR      r4,[r0,#0]
;;;554                 temp                &= ~(DEF_OCTET_MASK << (1 * DEF_OCTET_NBR_BITS));
000474  f424447f          BIC      r4,r4,#0xff00
;;;555                 temp                |=  (prio           << (1 * DEF_OCTET_NBR_BITS));
000478  ea442405          ORR      r4,r4,r5,LSL #8
;;;556                 CPU_REG_NVIC_SHPRI1  = temp;
00047c  6004              STR      r4,[r0,#0]
;;;557                 CPU_CRITICAL_EXIT();
00047e  bf00              NOP      
000480  bf00              NOP      
000482  4658              MOV      r0,r11
000484  f7fffffe          BL       CPU_SR_Restore
000488  bf00              NOP      
00048a  bf00              NOP      
;;;558                 break;
00048c  e0b1              B        |L1.1522|
;;;559    
;;;560            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;561                 CPU_CRITICAL_ENTER();
00048e  bf00              NOP      
000490  bf00              NOP      
000492  f7fffffe          BL       CPU_SR_Save
000496  4683              MOV      r11,r0
000498  bf00              NOP      
00049a  bf00              NOP      
;;;562                 temp                 = CPU_REG_NVIC_SHPRI1;
00049c  48c7              LDR      r0,|L1.1980|
00049e  6804              LDR      r4,[r0,#0]
;;;563                 temp                &= ~(DEF_OCTET_MASK << (2 * DEF_OCTET_NBR_BITS));
0004a0  f424047f          BIC      r4,r4,#0xff0000
;;;564                 temp                |=  (prio           << (2 * DEF_OCTET_NBR_BITS));
0004a4  ea444405          ORR      r4,r4,r5,LSL #16
;;;565                 CPU_REG_NVIC_SHPRI1  = temp;
0004a8  6004              STR      r4,[r0,#0]
;;;566                 CPU_CRITICAL_EXIT();
0004aa  bf00              NOP      
0004ac  bf00              NOP      
0004ae  4658              MOV      r0,r11
0004b0  f7fffffe          BL       CPU_SR_Restore
0004b4  bf00              NOP      
0004b6  bf00              NOP      
;;;567                 break;
0004b8  e09b              B        |L1.1522|
;;;568    
;;;569            case CPU_INT_SVCALL:                                    /* SVCall.                                              */
;;;570                 CPU_CRITICAL_ENTER();
0004ba  bf00              NOP      
0004bc  bf00              NOP      
0004be  f7fffffe          BL       CPU_SR_Save
0004c2  4683              MOV      r11,r0
0004c4  bf00              NOP      
0004c6  bf00              NOP      
;;;571                 temp                 = CPU_REG_NVIC_SHPRI2;
0004c8  48bd              LDR      r0,|L1.1984|
0004ca  6804              LDR      r4,[r0,#0]
;;;572                 temp                &= ~((CPU_INT32U)DEF_OCTET_MASK << (3 * DEF_OCTET_NBR_BITS));
0004cc  f024447f          BIC      r4,r4,#0xff000000
;;;573                 temp                |=  (prio                       << (3 * DEF_OCTET_NBR_BITS));
0004d0  ea446405          ORR      r4,r4,r5,LSL #24
;;;574                 CPU_REG_NVIC_SHPRI2  = temp;
0004d4  6004              STR      r4,[r0,#0]
;;;575                 CPU_CRITICAL_EXIT();
0004d6  bf00              NOP      
0004d8  bf00              NOP      
0004da  4658              MOV      r0,r11
0004dc  f7fffffe          BL       CPU_SR_Restore
0004e0  bf00              NOP      
0004e2  bf00              NOP      
;;;576                 break;
0004e4  e085              B        |L1.1522|
;;;577    
;;;578            case CPU_INT_DBGMON:                                    /* Debug monitor.                                       */
;;;579                 CPU_CRITICAL_ENTER();
0004e6  bf00              NOP      
0004e8  bf00              NOP      
0004ea  f7fffffe          BL       CPU_SR_Save
0004ee  4683              MOV      r11,r0
0004f0  bf00              NOP      
0004f2  bf00              NOP      
;;;580                 temp                = CPU_REG_NVIC_SHPRI3;
0004f4  48b3              LDR      r0,|L1.1988|
0004f6  6804              LDR      r4,[r0,#0]
;;;581                 temp                &= ~(DEF_OCTET_MASK << (0 * DEF_OCTET_NBR_BITS));
0004f8  f02404ff          BIC      r4,r4,#0xff
;;;582                 temp                |=  (prio           << (0 * DEF_OCTET_NBR_BITS));
0004fc  ea440405          ORR      r4,r4,r5
;;;583                 CPU_REG_NVIC_SHPRI3  = temp;
000500  6004              STR      r4,[r0,#0]
;;;584                 CPU_CRITICAL_EXIT();
000502  bf00              NOP      
000504  bf00              NOP      
000506  4658              MOV      r0,r11
000508  e000              B        |L1.1292|
                  |L1.1290|
00050a  e030              B        |L1.1390|
                  |L1.1292|
00050c  f7fffffe          BL       CPU_SR_Restore
000510  bf00              NOP      
000512  bf00              NOP      
;;;585                 break;
000514  e06d              B        |L1.1522|
;;;586    
;;;587            case CPU_INT_PENDSV:                                    /* PendSV.                                              */
;;;588                 CPU_CRITICAL_ENTER();
000516  bf00              NOP      
000518  bf00              NOP      
00051a  f7fffffe          BL       CPU_SR_Save
00051e  4683              MOV      r11,r0
000520  bf00              NOP      
000522  bf00              NOP      
;;;589                 temp                 = CPU_REG_NVIC_SHPRI3;
000524  48a7              LDR      r0,|L1.1988|
000526  6804              LDR      r4,[r0,#0]
;;;590                 temp                &= ~(DEF_OCTET_MASK << (2 * DEF_OCTET_NBR_BITS));
000528  f424047f          BIC      r4,r4,#0xff0000
;;;591                 temp                |=  (prio           << (2 * DEF_OCTET_NBR_BITS));
00052c  ea444405          ORR      r4,r4,r5,LSL #16
;;;592                 CPU_REG_NVIC_SHPRI3  = temp;
000530  6004              STR      r4,[r0,#0]
;;;593                 CPU_CRITICAL_EXIT();
000532  bf00              NOP      
000534  bf00              NOP      
000536  4658              MOV      r0,r11
000538  f7fffffe          BL       CPU_SR_Restore
00053c  bf00              NOP      
00053e  bf00              NOP      
;;;594                 break;
000540  e057              B        |L1.1522|
;;;595    
;;;596            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;597                 CPU_CRITICAL_ENTER();
000542  bf00              NOP      
000544  bf00              NOP      
000546  f7fffffe          BL       CPU_SR_Save
00054a  4683              MOV      r11,r0
00054c  bf00              NOP      
00054e  bf00              NOP      
;;;598                 temp                 = CPU_REG_NVIC_SHPRI3;
000550  489c              LDR      r0,|L1.1988|
000552  6804              LDR      r4,[r0,#0]
;;;599                 temp                &= ~((CPU_INT32U)DEF_OCTET_MASK << (3 * DEF_OCTET_NBR_BITS));
000554  f024447f          BIC      r4,r4,#0xff000000
;;;600                 temp                |=  (prio                       << (3 * DEF_OCTET_NBR_BITS));
000558  ea446405          ORR      r4,r4,r5,LSL #24
;;;601                 CPU_REG_NVIC_SHPRI3  = temp;
00055c  6004              STR      r4,[r0,#0]
;;;602                 CPU_CRITICAL_EXIT();
00055e  bf00              NOP      
000560  bf00              NOP      
000562  4658              MOV      r0,r11
000564  f7fffffe          BL       CPU_SR_Restore
000568  bf00              NOP      
00056a  bf00              NOP      
;;;603                 break;
00056c  e041              B        |L1.1522|
                  |L1.1390|
;;;604    
;;;605    
;;;606                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;607            default:
;;;608                pos_max = CPU_INT_SRC_POS_MAX;
00056e  f04f20e0          MOV      r0,#0xe000e000
000572  6840              LDR      r0,[r0,#4]
000574  f1000001          ADD      r0,r0,#1
000578  f04f0110          MOV      r1,#0x10
00057c  eb011040          ADD      r0,r1,r0,LSL #5
000580  f00009ff          AND      r9,r0,#0xff
;;;609                if (pos < pos_max) {                                /* See Note #3.                                         */
000584  454e              CMP      r6,r9
000586  da33              BGE      |L1.1520|
;;;610                     group                    = (pos - 16) / 4;
000588  f1a60010          SUB      r0,r6,#0x10
00058c  ea4f71e0          ASR      r1,r0,#31
000590  eb007191          ADD      r1,r0,r1,LSR #30
000594  f3c10787          UBFX     r7,r1,#2,#8
;;;611                     nbr                      = (pos - 16) % 4;
000598  ea4f71e0          ASR      r1,r0,#31
00059c  eb007191          ADD      r1,r0,r1,LSR #30
0005a0  ea4f01a1          ASR      r1,r1,#2
0005a4  eba00181          SUB      r1,r0,r1,LSL #2
0005a8  f00108ff          AND      r8,r1,#0xff
;;;612    
;;;613                     CPU_CRITICAL_ENTER();
0005ac  bf00              NOP      
0005ae  bf00              NOP      
0005b0  f7fffffe          BL       CPU_SR_Save
0005b4  4683              MOV      r11,r0
0005b6  bf00              NOP      
0005b8  bf00              NOP      
;;;614                     temp                     = CPU_REG_NVIC_PRIO(group);
0005ba  4883              LDR      r0,|L1.1992|
0005bc  f8504027          LDR      r4,[r0,r7,LSL #2]
;;;615                     temp                    &= ~(DEF_OCTET_MASK << (nbr * DEF_OCTET_NBR_BITS));
0005c0  ea4f01c8          LSL      r1,r8,#3
0005c4  f04f00ff          MOV      r0,#0xff
0005c8  fa00f001          LSL      r0,r0,r1
0005cc  ea240400          BIC      r4,r4,r0
;;;616                     temp                    |=  (prio           << (nbr * DEF_OCTET_NBR_BITS));
0005d0  ea4f01c8          LSL      r1,r8,#3
0005d4  fa05f001          LSL      r0,r5,r1
0005d8  ea400404          ORR      r4,r0,r4
;;;617                     CPU_REG_NVIC_PRIO(group) = temp;
0005dc  487a              LDR      r0,|L1.1992|
0005de  f8404027          STR      r4,[r0,r7,LSL #2]
;;;618                     CPU_CRITICAL_EXIT();
0005e2  bf00              NOP      
0005e4  bf00              NOP      
0005e6  4658              MOV      r0,r11
0005e8  f7fffffe          BL       CPU_SR_Restore
0005ec  bf00              NOP      
0005ee  bf00              NOP      
                  |L1.1520|
;;;619                 }
;;;620                 break;
0005f0  bf00              NOP      
                  |L1.1522|
0005f2  bf00              NOP                            ;533
;;;621        }
;;;622    }
0005f4  e8bd9ff0          POP      {r4-r12,pc}
;;;623    
                          ENDP

                  CPU_IntSrcPrioGet PROC
;;;646    
;;;647    CPU_INT16S  CPU_IntSrcPrioGet (CPU_INT08U  pos)
0005f8  e92d5ff0          PUSH     {r4-r12,lr}
;;;648    {
0005fc  4606              MOV      r6,r0
;;;649        CPU_INT08U  group;
;;;650        CPU_INT08U  nbr;
;;;651        CPU_INT08U  pos_max;
;;;652        CPU_INT16S  prio;
;;;653        CPU_INT32U  prio_32;
;;;654        CPU_INT32U  temp;
;;;655        CPU_SR_ALLOC();
0005fe  f04f0b00          MOV      r11,#0
;;;656    
;;;657    
;;;658        switch (pos) {
000602  2e10              CMP      r6,#0x10
000604  d26f              BCS      |L1.1766|
000606  e8dff006          TBB      [pc,r6]
00060a  080f              DCB      0x08,0x0f
00060c  1215182a          DCB      0x12,0x15,0x18,0x2a
000610  3d090a0b          DCB      0x3d,0x09,0x0a,0x0b
000614  0c495c0d          DCB      0x0c,0x49,0x5c,0x0d
000618  6f82              DCB      0x6f,0x82
;;;659            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;660            case CPU_INT_RSVD_07:
00061a  bf00              NOP      
;;;661            case CPU_INT_RSVD_08:
00061c  bf00              NOP      
;;;662            case CPU_INT_RSVD_09:
00061e  bf00              NOP      
;;;663            case CPU_INT_RSVD_10:
000620  bf00              NOP      
;;;664            case CPU_INT_RSVD_13:
000622  bf00              NOP      
;;;665                 prio = DEF_INT_16S_MIN_VAL;
000624  4c69              LDR      r4,|L1.1996|
;;;666                 break;
000626  e0bd              B        |L1.1956|
;;;667    
;;;668    
;;;669                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;670            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;671                 prio = -3;
000628  f06f0402          MVN      r4,#2
;;;672                 break;
00062c  e0ba              B        |L1.1956|
;;;673    
;;;674            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
;;;675                 prio = -2;
00062e  f06f0401          MVN      r4,#1
;;;676                 break;
000632  e0b7              B        |L1.1956|
;;;677    
;;;678            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
;;;679                 prio = -1;
000634  f04f34ff          MOV      r4,#0xffffffff
;;;680                 break;
000638  e0b4              B        |L1.1956|
;;;681    
;;;682    
;;;683            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;684                 CPU_CRITICAL_ENTER();
00063a  bf00              NOP      
00063c  bf00              NOP      
00063e  f7fffffe          BL       CPU_SR_Save
000642  4683              MOV      r11,r0
000644  bf00              NOP      
000646  bf00              NOP      
;;;685                 temp = CPU_REG_NVIC_SHPRI1;
000648  485c              LDR      r0,|L1.1980|
00064a  6805              LDR      r5,[r0,#0]
;;;686                 prio = (temp >> (0 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
00064c  b2ec              UXTB     r4,r5
;;;687                 CPU_CRITICAL_EXIT();
00064e  bf00              NOP      
000650  bf00              NOP      
000652  4658              MOV      r0,r11
000654  f7fffffe          BL       CPU_SR_Restore
000658  bf00              NOP      
00065a  bf00              NOP      
;;;688                 break;
00065c  e0a2              B        |L1.1956|
;;;689    
;;;690    
;;;691            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;692                 CPU_CRITICAL_ENTER();
00065e  bf00              NOP      
000660  bf00              NOP      
000662  f7fffffe          BL       CPU_SR_Save
000666  4683              MOV      r11,r0
000668  bf00              NOP      
00066a  bf00              NOP      
;;;693                 temp = CPU_REG_NVIC_SHPRI1;
00066c  4853              LDR      r0,|L1.1980|
00066e  6805              LDR      r5,[r0,#0]
;;;694                 prio = (temp >> (1 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000670  f3c52407          UBFX     r4,r5,#8,#8
;;;695                 CPU_CRITICAL_EXIT();
000674  bf00              NOP      
000676  bf00              NOP      
000678  4658              MOV      r0,r11
00067a  f7fffffe          BL       CPU_SR_Restore
00067e  bf00              NOP      
000680  bf00              NOP      
;;;696                 break;
000682  e08f              B        |L1.1956|
;;;697    
;;;698    
;;;699            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;700                 CPU_CRITICAL_ENTER();
000684  bf00              NOP      
000686  bf00              NOP      
000688  f7fffffe          BL       CPU_SR_Save
00068c  4683              MOV      r11,r0
00068e  bf00              NOP      
000690  bf00              NOP      
;;;701                 temp = CPU_REG_NVIC_SHPRI1;
000692  484a              LDR      r0,|L1.1980|
000694  6805              LDR      r5,[r0,#0]
;;;702                 prio = (temp >> (2 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000696  f3c54407          UBFX     r4,r5,#16,#8
;;;703                 break;
00069a  e083              B        |L1.1956|
;;;704    
;;;705            case CPU_INT_SVCALL:                                    /* SVCall.                                              */
;;;706                 CPU_CRITICAL_ENTER();
00069c  bf00              NOP      
00069e  bf00              NOP      
0006a0  f7fffffe          BL       CPU_SR_Save
0006a4  4683              MOV      r11,r0
0006a6  bf00              NOP      
0006a8  bf00              NOP      
;;;707                 temp = CPU_REG_NVIC_SHPRI2;
0006aa  4845              LDR      r0,|L1.1984|
0006ac  6805              LDR      r5,[r0,#0]
;;;708                 prio = (temp >> (3 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
0006ae  ea4f6415          LSR      r4,r5,#24
;;;709                 CPU_CRITICAL_EXIT();
0006b2  bf00              NOP      
0006b4  bf00              NOP      
0006b6  4658              MOV      r0,r11
0006b8  f7fffffe          BL       CPU_SR_Restore
0006bc  bf00              NOP      
0006be  bf00              NOP      
;;;710                 break;
0006c0  e070              B        |L1.1956|
;;;711    
;;;712            case CPU_INT_DBGMON:                                    /* Debug monitor.                                       */
;;;713                 CPU_CRITICAL_ENTER();
0006c2  bf00              NOP      
0006c4  bf00              NOP      
0006c6  f7fffffe          BL       CPU_SR_Save
0006ca  4683              MOV      r11,r0
0006cc  bf00              NOP      
0006ce  bf00              NOP      
;;;714                 temp = CPU_REG_NVIC_SHPRI3;
0006d0  483c              LDR      r0,|L1.1988|
0006d2  6805              LDR      r5,[r0,#0]
;;;715                 prio = (temp >> (0 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
0006d4  b2ec              UXTB     r4,r5
;;;716                 CPU_CRITICAL_EXIT();
0006d6  bf00              NOP      
0006d8  bf00              NOP      
0006da  4658              MOV      r0,r11
0006dc  f7fffffe          BL       CPU_SR_Restore
0006e0  bf00              NOP      
0006e2  bf00              NOP      
;;;717                 break;
0006e4  e05e              B        |L1.1956|
                  |L1.1766|
0006e6  e025              B        |L1.1844|
;;;718    
;;;719            case CPU_INT_PENDSV:                                    /* PendSV.                                              */
;;;720                 CPU_CRITICAL_ENTER();
0006e8  bf00              NOP      
0006ea  bf00              NOP      
0006ec  f7fffffe          BL       CPU_SR_Save
0006f0  4683              MOV      r11,r0
0006f2  bf00              NOP      
0006f4  bf00              NOP      
;;;721                 temp = CPU_REG_NVIC_SHPRI3;
0006f6  4833              LDR      r0,|L1.1988|
0006f8  6805              LDR      r5,[r0,#0]
;;;722                 prio = (temp >> (2 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
0006fa  f3c54407          UBFX     r4,r5,#16,#8
;;;723                 CPU_CRITICAL_EXIT();
0006fe  bf00              NOP      
000700  bf00              NOP      
000702  4658              MOV      r0,r11
000704  f7fffffe          BL       CPU_SR_Restore
000708  bf00              NOP      
00070a  bf00              NOP      
;;;724                 break;
00070c  e04a              B        |L1.1956|
;;;725    
;;;726            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;727                 CPU_CRITICAL_ENTER();
00070e  bf00              NOP      
000710  bf00              NOP      
000712  f7fffffe          BL       CPU_SR_Save
000716  4683              MOV      r11,r0
000718  bf00              NOP      
00071a  bf00              NOP      
;;;728                 temp = CPU_REG_NVIC_SHPRI3;
00071c  4829              LDR      r0,|L1.1988|
00071e  6805              LDR      r5,[r0,#0]
;;;729                 prio = (temp >> (3 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000720  ea4f6415          LSR      r4,r5,#24
;;;730                 CPU_CRITICAL_EXIT();
000724  bf00              NOP      
000726  bf00              NOP      
000728  4658              MOV      r0,r11
00072a  f7fffffe          BL       CPU_SR_Restore
00072e  bf00              NOP      
000730  bf00              NOP      
;;;731                 break;
000732  e037              B        |L1.1956|
                  |L1.1844|
;;;732    
;;;733    
;;;734                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;735            default:
;;;736                pos_max = CPU_INT_SRC_POS_MAX;
000734  f04f20e0          MOV      r0,#0xe000e000
000738  6840              LDR      r0,[r0,#4]
00073a  f1000001          ADD      r0,r0,#1
00073e  f04f0110          MOV      r1,#0x10
000742  eb011040          ADD      r0,r1,r0,LSL #5
000746  f0000aff          AND      r10,r0,#0xff
;;;737                if (pos < pos_max) {                                /* See Note #3.                                         */
00074a  4556              CMP      r6,r10
00074c  da28              BGE      |L1.1952|
;;;738                     group = (pos - 16) / 4;
00074e  f1a60010          SUB      r0,r6,#0x10
000752  ea4f71e0          ASR      r1,r0,#31
000756  eb007191          ADD      r1,r0,r1,LSR #30
00075a  f3c10787          UBFX     r7,r1,#2,#8
;;;739                     nbr   = (pos - 16) % 4;
00075e  ea4f71e0          ASR      r1,r0,#31
000762  eb007191          ADD      r1,r0,r1,LSR #30
000766  ea4f01a1          ASR      r1,r1,#2
00076a  eba00181          SUB      r1,r0,r1,LSL #2
00076e  f00109ff          AND      r9,r1,#0xff
;;;740    
;;;741                     CPU_CRITICAL_ENTER();
000772  bf00              NOP      
000774  bf00              NOP      
000776  f7fffffe          BL       CPU_SR_Save
00077a  4683              MOV      r11,r0
00077c  bf00              NOP      
00077e  bf00              NOP      
;;;742                     temp  = CPU_REG_NVIC_PRIO(group);
000780  4811              LDR      r0,|L1.1992|
000782  f8505027          LDR      r5,[r0,r7,LSL #2]
;;;743                     CPU_CRITICAL_EXIT();
000786  bf00              NOP      
000788  bf00              NOP      
00078a  4658              MOV      r0,r11
00078c  f7fffffe          BL       CPU_SR_Restore
000790  bf00              NOP      
000792  bf00              NOP      
;;;744    
;;;745                     prio  = (temp >> (nbr * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000794  ea4f00c9          LSL      r0,r9,#3
000798  fa25f000          LSR      r0,r5,r0
00079c  b2c4              UXTB     r4,r0
00079e  e000              B        |L1.1954|
                  |L1.1952|
;;;746                 } else {
;;;747                     prio  = DEF_INT_16S_MIN_VAL;
0007a0  4c0a              LDR      r4,|L1.1996|
                  |L1.1954|
;;;748                 }
;;;749                 break;
0007a2  bf00              NOP      
                  |L1.1956|
0007a4  bf00              NOP                            ;666
;;;750        }
;;;751    
;;;752        if (prio >= 0) {
0007a6  2c00              CMP      r4,#0
0007a8  db05              BLT      |L1.1974|
;;;753            prio_32 = CPU_RevBits((CPU_INT32U)prio);
0007aa  4620              MOV      r0,r4
0007ac  f7fffffe          BL       CPU_RevBits
0007b0  4680              MOV      r8,r0
;;;754            prio    = (CPU_INT16S)(prio_32 >> (3 * DEF_OCTET_NBR_BITS));
0007b2  ea4f6418          LSR      r4,r8,#24
                  |L1.1974|
;;;755        }
;;;756    
;;;757        return (prio);
0007b6  4620              MOV      r0,r4
;;;758    }
0007b8  e8bd9ff0          POP      {r4-r12,pc}
;;;759    
                          ENDP

                  |L1.1980|
                          DCD      0xe000ed18
                  |L1.1984|
                          DCD      0xe000ed1c
                  |L1.1988|
                          DCD      0xe000ed20
                  |L1.1992|
                          DCD      0xe000e400
                  |L1.1996|
                          DCD      0xffff8000
