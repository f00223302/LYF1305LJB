; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Output\app_led.o --asm_dir=.\Listing\ --list_dir=.\Listing\ --depend=.\Output\app_led.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\BSP -I..\BSP\UCOS-II -I..\BSP\STM32F2xx\inc -I..\BSP\CMSIS -I..\BSP\CMSIS\Device_Support -I..\BSP\UCOS-II -I..\..\uC-CPU -I..\..\uC-CPU\ARM-Cortex-M3 -I..\..\uC-LIB -I..\..\uC-LIB\Ports\ARM-Cortex-M3 -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3 -I..\App -I..\Prj -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\INC\ST\STM32F2xx -DUSE_STDPERIPH_DRIVER -DDEBUG -DLJB_CPU_MAIN -DUSE_CPU_F205RC --omf_browse=.\Output\app_led.crf ..\App\app_led.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LedHandler PROC
;;;15     
;;;16     void LedHandler(void)
000000  b510              PUSH     {r4,lr}
;;;17     {
;;;18     	//////////////////////////////
;;;19     	///		记录采集板
;;;20     	//////////////////////////////
;;;21     #if defined JLB_CPU_SAMPLE	
;;;22     	
;;;23     	if (AppInfo.ComLedFlag){
;;;24     		
;;;25     		if (AppInfo.ComLedTm >= 160){
;;;26     			
;;;27     			BSP_LED_Off(LED_COM);
;;;28     			AppInfo.ComLedTm = 0;
;;;29     			AppInfo.ComLedFlag--;
;;;30     		}
;;;31     		else{
;;;32     			
;;;33     			if ((AppInfo.ComLedTm % 80) == 0)
;;;34     				BSP_LED_On(LED_COM);
;;;35     			else if ((AppInfo.ComLedTm % 40) == 0)
;;;36     				BSP_LED_Off(LED_COM);
;;;37     			
;;;38     			AppInfo.ComLedTm++;
;;;39     		}
;;;40     	}
;;;41     	
;;;42     	if (AppInfo.CanLedFlag){
;;;43     		
;;;44     		if (AppInfo.CanLedTm >= 160){
;;;45     			
;;;46     			BSP_LED_Off(LED_CAN);
;;;47     			AppInfo.CanLedTm = 0;
;;;48     			AppInfo.CanLedFlag--;
;;;49     		}
;;;50     		else{
;;;51     			
;;;52     			if ((AppInfo.CanLedTm % 80) == 0)
;;;53     				BSP_LED_On(LED_CAN);
;;;54     			else if ((AppInfo.CanLedTm % 40) == 0)
;;;55     				BSP_LED_Off(LED_CAN);
;;;56     			
;;;57     			AppInfo.CanLedTm++;
;;;58     		}
;;;59     	}
;;;60     	
;;;61     	if (AppInfo.TaxLedFlag){
;;;62     		
;;;63     		if (AppInfo.TaxLedTm >= 160){
;;;64     			
;;;65     			BSP_LED_Off(LED_TAX);
;;;66     			AppInfo.TaxLedTm = 0;
;;;67     			AppInfo.TaxLedFlag--;
;;;68     		}
;;;69     		else{
;;;70     			
;;;71     			if ((AppInfo.TaxLedTm % 80) == 0)
;;;72     				BSP_LED_On(LED_TAX);
;;;73     			else if ((AppInfo.TaxLedTm % 40) == 0)
;;;74     				BSP_LED_Off(LED_TAX);
;;;75     			
;;;76     			AppInfo.TaxLedTm++;
;;;77     		}
;;;78     	}
;;;79     	
;;;80     	//////////////////////////////
;;;81     	///		记录控制板
;;;82     	//////////////////////////////
;;;83     #elif defined JLB_CPU_MAIN
;;;84     	
;;;85     	if (AppInfo.WorkLedFlag){
;;;86     			
;;;87     		if ((AppInfo.WorkLedTm % 80) == 0)
;;;88     			BSP_LED_On(LED_WORK); 			
;;;89     		else if ((AppInfo.WorkLedTm % 40) == 0)
;;;90     			BSP_LED_Off(LED_WORK);
;;;91     			
;;;92     		AppInfo.WorkLedTm++;
;;;93     	}
;;;94     		
;;;95     	if (AppInfo.ErrLedFlag){
;;;96     			
;;;97     		if (AppInfo.ErrLedTm >= AppInfo.ErrLedTmConst2){
;;;98     				
;;;99     			BSP_LED_Off(LED_ERR);
;;;100    			AppInfo.ErrLedTm = 0;
;;;101    		}				
;;;102    		else if (AppInfo.ErrLedTm <= AppInfo.ErrLedTmConst1)
;;;103    			BSP_LED_On(LED_ERR);
;;;104    			
;;;105    		AppInfo.ErrLedTm++;
;;;106    	}
;;;107    		
;;;108    	if (AppInfo.CopyLedFlag){
;;;109    		
;;;110    		if (AppInfo.CopyLedTm >= 160){
;;;111    			
;;;112    			BSP_LED_Off(LED_COPY);
;;;113    			AppInfo.CopyLedTm = 0;
;;;114    			AppInfo.CopyLedFlag--;
;;;115    		}
;;;116    		else{
;;;117    			
;;;118    			if ((AppInfo.CopyLedTm % 80) == 0)
;;;119    				BSP_LED_On(LED_COPY);
;;;120    			else if ((AppInfo.CopyLedTm % 40) == 0)
;;;121    				BSP_LED_Off(LED_COPY);
;;;122    			
;;;123    			AppInfo.CopyLedTm++;
;;;124    		}
;;;125    	}
;;;126    	
;;;127    	if (AppInfo.LaisLedFlag){
;;;128    		
;;;129    		if (AppInfo.LaisLedTm >= 160){
;;;130    			
;;;131    			BSP_LED_Off(LED_LAIS);
;;;132    			AppInfo.LaisLedTm = 0;
;;;133    			AppInfo.LaisLedFlag--;
;;;134    		}
;;;135    		else{
;;;136    			
;;;137    			if ((AppInfo.LaisLedTm % 80) == 0)
;;;138    				BSP_LED_On(LED_LAIS);
;;;139    			else if ((AppInfo.LaisLedTm % 40) == 0)
;;;140    				BSP_LED_Off(LED_LAIS);
;;;141    			
;;;142    			AppInfo.LaisLedTm++;
;;;143    		}
;;;144    	}
;;;145    	
;;;146    	
;;;147    	if (AppInfo.MiscLedFlag){
;;;148    		
;;;149    		if (AppInfo.MiscLedTm >= 160){
;;;150    			
;;;151    			BSP_LED_Off(LED_MISC);
;;;152    			AppInfo.MiscLedTm = 0;
;;;153    			AppInfo.MiscLedFlag--;
;;;154    		}
;;;155    		else{
;;;156    			
;;;157    			if ((AppInfo.MiscLedTm % 80) == 0)
;;;158    				BSP_LED_On(LED_MISC);
;;;159    			else if ((AppInfo.MiscLedTm % 40) == 0)
;;;160    				BSP_LED_Off(LED_MISC);
;;;161    			
;;;162    			AppInfo.MiscLedTm++;
;;;163    		}
;;;164    	}
;;;165    	
;;;166    	//////////////////////////////
;;;167    	///		解码板
;;;168    	//////////////////////////////
;;;169    #elif defined JMB_CPU_MAIN
;;;170    	if (AppInfo.WorkLedFlag){
;;;171    			
;;;172    		if ((AppInfo.WorkLedTm % 80) == 0)
;;;173    			BSP_LED_On(LED_BLNK); 			
;;;174    		else if ((AppInfo.WorkLedTm % 40) == 0)
;;;175    			BSP_LED_Off(LED_BLNK);
;;;176    			
;;;177    		AppInfo.WorkLedTm++;
;;;178    	}
;;;179    
;;;180    	//////////////////////////////
;;;181    	///		连接板
;;;182    	//////////////////////////////
;;;183    #elif defined LJB_CPU_MAIN	
;;;184    
;;;185        if (AppInfo.WorkLedTm >= 500)
000002  485c              LDR      r0,|L1.372|
000004  f8b00054          LDRH     r0,[r0,#0x54]  ; AppInfo
000008  f5b07ffa          CMP      r0,#0x1f4
00000c  db08              BLT      |L1.32|
;;;186        {
;;;187            BSP_LED_Off(LED_WORK);
00000e  2001              MOVS     r0,#1
000010  f7fffffe          BL       BSP_LED_Off
;;;188    		
;;;189            AppInfo.WorkLedTm = 0;
000014  f04f0000          MOV      r0,#0
000018  4956              LDR      r1,|L1.372|
00001a  f8a10054          STRH     r0,[r1,#0x54]
00001e  e020              B        |L1.98|
                  |L1.32|
;;;190        }
;;;191        else
;;;192        {
;;;193            if ((AppInfo.WorkLedTm % 200)   == 0)
000020  4854              LDR      r0,|L1.372|
000022  f8b00054          LDRH     r0,[r0,#0x54]  ; AppInfo
000026  21c8              MOVS     r1,#0xc8
000028  fb90f2f1          SDIV     r2,r0,r1
00002c  fb010012          MLS      r0,r1,r2,r0
000030  b918              CBNZ     r0,|L1.58|
;;;194            {
;;;195                BSP_LED_On(LED_WORK);
000032  2001              MOVS     r0,#1
000034  f7fffffe          BL       BSP_LED_On
000038  e00b              B        |L1.82|
                  |L1.58|
;;;196            }
;;;197    		else if ((AppInfo.WorkLedTm % 100) == 0)
00003a  484e              LDR      r0,|L1.372|
00003c  f8b00054          LDRH     r0,[r0,#0x54]  ; AppInfo
000040  2164              MOVS     r1,#0x64
000042  fb90f2f1          SDIV     r2,r0,r1
000046  fb010012          MLS      r0,r1,r2,r0
00004a  b910              CBNZ     r0,|L1.82|
;;;198    		{
;;;199                BSP_LED_Off(LED_WORK);
00004c  2001              MOVS     r0,#1
00004e  f7fffffe          BL       BSP_LED_Off
                  |L1.82|
;;;200    		}
;;;201    
;;;202    		AppInfo.WorkLedTm++;
000052  4848              LDR      r0,|L1.372|
000054  f8b00054          LDRH     r0,[r0,#0x54]  ; AppInfo
000058  f1000001          ADD      r0,r0,#1
00005c  4945              LDR      r1,|L1.372|
00005e  f8a10054          STRH     r0,[r1,#0x54]
                  |L1.98|
;;;203        }
;;;204    
;;;205    
;;;206    	if (AppInfo.UsartRxFlag[COM1])
000062  4844              LDR      r0,|L1.372|
000064  f8900020          LDRB     r0,[r0,#0x20]  ; AppInfo
000068  b3b0              CBZ      r0,|L1.216|
;;;207    	{	
;;;208    		if (AppInfo.RxLedTm >= 160)
00006a  4842              LDR      r0,|L1.372|
00006c  f8b0005e          LDRH     r0,[r0,#0x5e]  ; AppInfo
000070  28a0              CMP      r0,#0xa0
000072  db0f              BLT      |L1.148|
;;;209    		{	
;;;210    			BSP_LED_Off(LED_USART_RX);
000074  2002              MOVS     r0,#2
000076  f7fffffe          BL       BSP_LED_Off
;;;211    			
;;;212    			AppInfo.RxLedTm = 0;
00007a  f04f0000          MOV      r0,#0
00007e  493d              LDR      r1,|L1.372|
000080  f8a1005e          STRH     r0,[r1,#0x5e]
;;;213    			
;;;214    			AppInfo.UsartRxFlag[COM1]--;
000084  4608              MOV      r0,r1
000086  f8900020          LDRB     r0,[r0,#0x20]  ; AppInfo
00008a  f1a00001          SUB      r0,r0,#1
00008e  f8810020          STRB     r0,[r1,#0x20]
000092  e02a              B        |L1.234|
                  |L1.148|
;;;215    		}
;;;216    		else
;;;217    		{	
;;;218    			if ((AppInfo.RxLedTm % 80) == 0)
000094  4837              LDR      r0,|L1.372|
000096  f8b0005e          LDRH     r0,[r0,#0x5e]  ; AppInfo
00009a  2150              MOVS     r1,#0x50
00009c  fb90f2f1          SDIV     r2,r0,r1
0000a0  fb010012          MLS      r0,r1,r2,r0
0000a4  b918              CBNZ     r0,|L1.174|
;;;219    			{
;;;220    				BSP_LED_On(LED_USART_RX);
0000a6  2002              MOVS     r0,#2
0000a8  f7fffffe          BL       BSP_LED_On
0000ac  e00b              B        |L1.198|
                  |L1.174|
;;;221    			}
;;;222    			else if ((AppInfo.RxLedTm % 40) == 0)
0000ae  4831              LDR      r0,|L1.372|
0000b0  f8b0005e          LDRH     r0,[r0,#0x5e]  ; AppInfo
0000b4  2128              MOVS     r1,#0x28
0000b6  fb90f2f1          SDIV     r2,r0,r1
0000ba  fb010012          MLS      r0,r1,r2,r0
0000be  b910              CBNZ     r0,|L1.198|
;;;223    			{
;;;224    				 BSP_LED_Off(LED_USART_RX);
0000c0  2002              MOVS     r0,#2
0000c2  f7fffffe          BL       BSP_LED_Off
                  |L1.198|
;;;225    			}
;;;226    			
;;;227    			AppInfo.RxLedTm++;
0000c6  482b              LDR      r0,|L1.372|
0000c8  f8b0005e          LDRH     r0,[r0,#0x5e]  ; AppInfo
0000cc  f1000001          ADD      r0,r0,#1
0000d0  4928              LDR      r1,|L1.372|
0000d2  f8a1005e          STRH     r0,[r1,#0x5e]
0000d6  e008              B        |L1.234|
                  |L1.216|
0000d8  e7ff              B        |L1.218|
                  |L1.218|
;;;228    		}
;;;229    	}
;;;230    	else
;;;231    	{
;;;232    		BSP_LED_Off(LED_USART_TX);
0000da  2003              MOVS     r0,#3
0000dc  f7fffffe          BL       BSP_LED_Off
;;;233    		
;;;234    		AppInfo.RxLedTm = 0;
0000e0  f04f0000          MOV      r0,#0
0000e4  4923              LDR      r1,|L1.372|
0000e6  f8a1005e          STRH     r0,[r1,#0x5e]
                  |L1.234|
;;;235    	}
;;;236    
;;;237    	if (AppInfo.UsartTxFlag[COM1])
0000ea  4822              LDR      r0,|L1.372|
0000ec  f8900026          LDRB     r0,[r0,#0x26]  ; AppInfo
0000f0  b3b0              CBZ      r0,|L1.352|
;;;238    	{	
;;;239    		if (AppInfo.TxLedTm >= 160)
0000f2  4820              LDR      r0,|L1.372|
0000f4  f8b00060          LDRH     r0,[r0,#0x60]  ; AppInfo
0000f8  28a0              CMP      r0,#0xa0
0000fa  db0f              BLT      |L1.284|
;;;240    		{	
;;;241    			BSP_LED_Off(LED_USART_TX);
0000fc  2003              MOVS     r0,#3
0000fe  f7fffffe          BL       BSP_LED_Off
;;;242    			AppInfo.TxLedTm = 0;
000102  f04f0000          MOV      r0,#0
000106  491b              LDR      r1,|L1.372|
000108  f8a10060          STRH     r0,[r1,#0x60]
;;;243    			AppInfo.UsartTxFlag[COM1]--;
00010c  4608              MOV      r0,r1
00010e  f8900026          LDRB     r0,[r0,#0x26]  ; AppInfo
000112  f1a00001          SUB      r0,r0,#1
000116  f8810026          STRB     r0,[r1,#0x26]
00011a  e02a              B        |L1.370|
                  |L1.284|
;;;244    		}
;;;245    		else
;;;246    		{	
;;;247    			if ((AppInfo.TxLedTm % 80) == 0)
00011c  4815              LDR      r0,|L1.372|
00011e  f8b00060          LDRH     r0,[r0,#0x60]  ; AppInfo
000122  2150              MOVS     r1,#0x50
000124  fb90f2f1          SDIV     r2,r0,r1
000128  fb010012          MLS      r0,r1,r2,r0
00012c  b918              CBNZ     r0,|L1.310|
;;;248    			{
;;;249    				BSP_LED_On(LED_USART_TX);
00012e  2003              MOVS     r0,#3
000130  f7fffffe          BL       BSP_LED_On
000134  e00b              B        |L1.334|
                  |L1.310|
;;;250    			}
;;;251    			else if ((AppInfo.TxLedTm % 40) == 0)
000136  480f              LDR      r0,|L1.372|
000138  f8b00060          LDRH     r0,[r0,#0x60]  ; AppInfo
00013c  2128              MOVS     r1,#0x28
00013e  fb90f2f1          SDIV     r2,r0,r1
000142  fb010012          MLS      r0,r1,r2,r0
000146  b910              CBNZ     r0,|L1.334|
;;;252    			{
;;;253    			    BSP_LED_Off(LED_USART_TX);
000148  2003              MOVS     r0,#3
00014a  f7fffffe          BL       BSP_LED_Off
                  |L1.334|
;;;254    			}
;;;255    			
;;;256    			AppInfo.TxLedTm++;
00014e  4809              LDR      r0,|L1.372|
000150  f8b00060          LDRH     r0,[r0,#0x60]  ; AppInfo
000154  f1000001          ADD      r0,r0,#1
000158  4906              LDR      r1,|L1.372|
00015a  f8a10060          STRH     r0,[r1,#0x60]
00015e  e008              B        |L1.370|
                  |L1.352|
000160  e7ff              B        |L1.354|
                  |L1.354|
;;;257    		}
;;;258    	}
;;;259    	else
;;;260    	{
;;;261    		BSP_LED_Off(LED_USART_TX);
000162  2003              MOVS     r0,#3
000164  f7fffffe          BL       BSP_LED_Off
;;;262    		
;;;263    		AppInfo.RxLedTm = 0;
000168  f04f0000          MOV      r0,#0
00016c  4901              LDR      r1,|L1.372|
00016e  f8a1005e          STRH     r0,[r1,#0x5e]
                  |L1.370|
;;;264    	}
;;;265    
;;;266    #endif
;;;267    }
000172  bd10              POP      {r4,pc}
;;;268    
                          ENDP

                  |L1.372|
                          DCD      AppInfo

;*** Start embedded assembler ***

#line 1 "..\\App\\app_led.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_app_led_c_e41f16dd____REV16|
#line 112 "..\\BSP\\CMSIS\\core_cmInstr.h"
|__asm___9_app_led_c_e41f16dd____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_app_led_c_e41f16dd____REVSH|
#line 130
|__asm___9_app_led_c_e41f16dd____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
