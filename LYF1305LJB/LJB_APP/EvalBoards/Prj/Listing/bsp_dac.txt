; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Output\bsp_dac.o --asm_dir=.\Listing\ --list_dir=.\Listing\ --depend=.\Output\bsp_dac.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\BSP -I..\BSP\UCOS-II -I..\BSP\STM32F2xx\inc -I..\BSP\CMSIS -I..\BSP\CMSIS\Device_Support -I..\BSP\UCOS-II -I..\..\uC-CPU -I..\..\uC-CPU\ARM-Cortex-M3 -I..\..\uC-LIB -I..\..\uC-LIB\Ports\ARM-Cortex-M3 -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3 -I..\App -I..\Prj -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\INC\ST\STM32F2xx -DUSE_STDPERIPH_DRIVER -DDEBUG -DLJB_CPU_MAIN -DUSE_CPU_F205RC --omf_browse=.\Output\bsp_dac.crf ..\BSP\bsp_DAC.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  BSP_DAC1_DMA_ISRHandler PROC
;;;248    #if (DAC_DMA_USE_INTERRUPT)
;;;249    void BSP_DAC1_DMA_ISRHandler(void)
000000  b510              PUSH     {r4,lr}
;;;250    {
;;;251    	CPU_REG32  status;
;;;252    
;;;253    	status = DMA1->HISR;
000002  4870              LDR      r0,|L1.452|
000004  6844              LDR      r4,[r0,#4]
;;;254    
;;;255    	///DMA 传送完成
;;;256    	if (DEF_BIT_IS_SET(status, DEF_BIT_11)){
000006  f3c420c0          UBFX     r0,r4,#11,#1
00000a  b170              CBZ      r0,|L1.42|
;;;257    
;;;258    		DMA_ClearITPendingBit(DAC1_DMA_STREAM, DAC1_DMA_IT_TCIF);
00000c  496e              LDR      r1,|L1.456|
00000e  486d              LDR      r0,|L1.452|
000010  3088              ADDS     r0,r0,#0x88
000012  f7fffffe          BL       DMA_ClearITPendingBit
;;;259    		
;;;260    		if (BSP_Info.DACCallBack)
000016  486d              LDR      r0,|L1.460|
000018  f8d00120          LDR      r0,[r0,#0x120]  ; BSP_Info
00001c  b128              CBZ      r0,|L1.42|
;;;261    			BSP_Info.DACCallBack(0, NULL);
00001e  486b              LDR      r0,|L1.460|
000020  2100              MOVS     r1,#0
000022  f8d02120          LDR      r2,[r0,#0x120]  ; BSP_Info
000026  4608              MOV      r0,r1
000028  4790              BLX      r2
                  |L1.42|
;;;262    	}
;;;263    
;;;264    	///DMA 传送错误
;;;265    	if (DEF_BIT_IS_SET(status, DEF_BIT_09))
00002a  f3c42040          UBFX     r0,r4,#9,#1
00002e  b120              CBZ      r0,|L1.58|
;;;266    		DMA_ClearITPendingBit(DAC1_DMA_STREAM, DMA_IT_TEIF5);	
000030  4967              LDR      r1,|L1.464|
000032  4864              LDR      r0,|L1.452|
000034  3088              ADDS     r0,r0,#0x88
000036  f7fffffe          BL       DMA_ClearITPendingBit
                  |L1.58|
;;;267    
;;;268    	///DMA FIFO 错误
;;;269    	if (DEF_BIT_IS_SET(status, DEF_BIT_06))
00003a  f3c41080          UBFX     r0,r4,#6,#1
00003e  b120              CBZ      r0,|L1.74|
;;;270    		DMA_ClearITPendingBit(DAC1_DMA_STREAM, DMA_IT_FEIF5);	
000040  4964              LDR      r1,|L1.468|
000042  4860              LDR      r0,|L1.452|
000044  3088              ADDS     r0,r0,#0x88
000046  f7fffffe          BL       DMA_ClearITPendingBit
                  |L1.74|
;;;271    }
00004a  bd10              POP      {r4,pc}
;;;272    
                          ENDP

                  BSP_DAC_DMAConfig PROC
;;;195    #if (DAC_USE_DMA)
;;;196    void BSP_DAC_DMAConfig(uint32_t dac_ch, DMA_Stream_TypeDef *stream, uint32_t dma_ch, uint32_t data_addr, uint16_t *buf)
00004c  e92d41f0          PUSH     {r4-r8,lr}
;;;197    {
000050  4607              MOV      r7,r0
000052  460c              MOV      r4,r1
000054  4615              MOV      r5,r2
000056  461e              MOV      r6,r3
000058  f8dd8018          LDR      r8,[sp,#0x18]
;;;198    
;;;199    	/* DMA1_Stream5 channel7 configuration **************************************/
;;;200    	DMA_DeInit(stream);
00005c  4620              MOV      r0,r4
00005e  f7fffffe          BL       DMA_DeInit
;;;201    	
;;;202    	DAC_DMA_InitStructure.DMA_Channel = dma_ch;  
000062  485d              LDR      r0,|L1.472|
000064  6005              STR      r5,[r0,#0]  ; DAC_DMA_InitStructure
;;;203    	DAC_DMA_InitStructure.DMA_PeripheralBaseAddr = data_addr;
000066  6046              STR      r6,[r0,#4]  ; DAC_DMA_InitStructure
;;;204    	DAC_DMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)&(buf[0]);
000068  f8c08008          STR      r8,[r0,#8]  ; DAC_DMA_InitStructure
;;;205    	DAC_DMA_InitStructure.DMA_DIR = DMA_DIR_MemoryToPeripheral;
00006c  f04f0040          MOV      r0,#0x40
000070  4959              LDR      r1,|L1.472|
000072  60c8              STR      r0,[r1,#0xc]  ; DAC_DMA_InitStructure
;;;206    	DAC_DMA_InitStructure.DMA_BufferSize = 0;
000074  f04f0000          MOV      r0,#0
000078  6108              STR      r0,[r1,#0x10]  ; DAC_DMA_InitStructure
;;;207    	DAC_DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
00007a  6148              STR      r0,[r1,#0x14]  ; DAC_DMA_InitStructure
;;;208    	DAC_DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
00007c  f44f6080          MOV      r0,#0x400
000080  6188              STR      r0,[r1,#0x18]  ; DAC_DMA_InitStructure
;;;209    	DAC_DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
000082  f44f6000          MOV      r0,#0x800
000086  61c8              STR      r0,[r1,#0x1c]  ; DAC_DMA_InitStructure
;;;210    	DAC_DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
000088  f44f5000          MOV      r0,#0x2000
00008c  6208              STR      r0,[r1,#0x20]  ; DAC_DMA_InitStructure
;;;211    	DAC_DMA_InitStructure.DMA_Mode = DMA_Mode_Normal;
00008e  f04f0000          MOV      r0,#0
000092  6248              STR      r0,[r1,#0x24]  ; DAC_DMA_InitStructure
;;;212    	DAC_DMA_InitStructure.DMA_Priority = DMA_Priority_High;
000094  f44f3000          MOV      r0,#0x20000
000098  6288              STR      r0,[r1,#0x28]  ; DAC_DMA_InitStructure
;;;213    	DAC_DMA_InitStructure.DMA_FIFOMode = DMA_FIFOMode_Disable;         
00009a  f04f0000          MOV      r0,#0
00009e  62c8              STR      r0,[r1,#0x2c]  ; DAC_DMA_InitStructure
;;;214    	DAC_DMA_InitStructure.DMA_FIFOThreshold = DMA_FIFOThreshold_HalfFull;
0000a0  f04f0001          MOV      r0,#1
0000a4  6308              STR      r0,[r1,#0x30]  ; DAC_DMA_InitStructure
;;;215    	DAC_DMA_InitStructure.DMA_MemoryBurst = DMA_MemoryBurst_Single;
0000a6  f04f0000          MOV      r0,#0
0000aa  6348              STR      r0,[r1,#0x34]  ; DAC_DMA_InitStructure
;;;216    	DAC_DMA_InitStructure.DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
0000ac  6388              STR      r0,[r1,#0x38]  ; DAC_DMA_InitStructure
;;;217    	DMA_Init(stream, &DAC_DMA_InitStructure);
0000ae  4620              MOV      r0,r4
0000b0  f7fffffe          BL       DMA_Init
;;;218    	
;;;219    
;;;220    	/* Enable DMA for DAC Channel */
;;;221    	DAC_DMACmd(dac_ch, ENABLE);	
0000b4  2101              MOVS     r1,#1
0000b6  4638              MOV      r0,r7
0000b8  f7fffffe          BL       DAC_DMACmd
;;;222    }
0000bc  e8bd81f0          POP      {r4-r8,pc}
;;;223    #endif///
                          ENDP

                  BSP_DAC_Config PROC
;;;181    
;;;182    void BSP_DAC_Config(uint32_t dac_ch)
0000c0  b51f              PUSH     {r0-r4,lr}
;;;183    {
0000c2  4604              MOV      r4,r0
;;;184    	DAC_InitTypeDef  DAC_InitStructure;
;;;185    
;;;186    	/* DAC channel2 Configuration */
;;;187    	DAC_InitStructure.DAC_Trigger = DAC_Trigger_T6_TRGO;
0000c4  f04f0004          MOV      r0,#4
0000c8  9000              STR      r0,[sp,#0]
;;;188    	DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_None;
0000ca  f04f0000          MOV      r0,#0
0000ce  9001              STR      r0,[sp,#4]
;;;189    	DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
0000d0  9003              STR      r0,[sp,#0xc]
;;;190    	DAC_InitStructure.DAC_LFSRUnmask_TriangleAmplitude = DAC_TriangleAmplitude_1023;
0000d2  f44f6010          MOV      r0,#0x900
0000d6  9002              STR      r0,[sp,#8]
;;;191    	DAC_Init(dac_ch, &DAC_InitStructure);
0000d8  4669              MOV      r1,sp
0000da  4620              MOV      r0,r4
0000dc  f7fffffe          BL       DAC_Init
;;;192    }
0000e0  bd1f              POP      {r0-r4,pc}
;;;193    
                          ENDP

                  BSP_DAC_GPIOConfig PROC
;;;164    ////////////////////////////////////////////////////////////////////////////////
;;;165    void BSP_DAC_GPIOConfig(uint16_t pins)
0000e2  b51c              PUSH     {r2-r4,lr}
;;;166    {
0000e4  4604              MOV      r4,r0
;;;167    	GPIO_InitTypeDef GPIO_InitStructure;
;;;168      
;;;169      	/* DMA1 clock and GPIOA clock enable (to be used with DAC) */
;;;170      	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_DMA1 | RCC_AHB1Periph_GPIOA, ENABLE);
0000e6  f04f0101          MOV      r1,#1
0000ea  483c              LDR      r0,|L1.476|
0000ec  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;171    
;;;172      	/* DAC Periph clock enable */
;;;173      	RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE);
0000f0  2101              MOVS     r1,#1
0000f2  0748              LSLS     r0,r1,#29
0000f4  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;174    
;;;175      	/* DAC channel 1 & 2 (DAC_OUT1 = PA.4)(DAC_OUT2 = PA.5) configuration */
;;;176    	GPIO_InitStructure.GPIO_Pin = pins;///GPIO_Pin_4 | GPIO_Pin_5;
0000f8  9400              STR      r4,[sp,#0]
;;;177    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
0000fa  f04f0003          MOV      r0,#3
0000fe  f88d0004          STRB     r0,[sp,#4]
;;;178    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
000102  f04f0000          MOV      r0,#0
000106  f88d0007          STRB     r0,[sp,#7]
;;;179    	GPIO_Init(GPIOA, &GPIO_InitStructure);
00010a  4669              MOV      r1,sp
00010c  4834              LDR      r0,|L1.480|
00010e  f7fffffe          BL       GPIO_Init
;;;180    }
000112  bd1c              POP      {r2-r4,pc}
;;;181    
                          ENDP

                  BSP_DAC_Init PROC
;;;83     ///只用到 DAC1
;;;84     void BSP_DAC_Init(uint16_t *buf)
000114  b538              PUSH     {r3-r5,lr}
;;;85     {
000116  4604              MOV      r4,r0
;;;86     
;;;87     	///trigger : TM6TRO
;;;88     	BSP_Tm6_Init();
000118  f7fffffe          BL       BSP_Tm6_Init
;;;89     	
;;;90     	DAC_DeInit();
00011c  f7fffffe          BL       DAC_DeInit
;;;91     	
;;;92     	BSP_DAC_GPIOConfig(GPIO_Pin_4);/// | GPIO_Pin_5);
000120  2010              MOVS     r0,#0x10
000122  f7fffffe          BL       BSP_DAC_GPIOConfig
;;;93     	BSP_DAC_Config(DAC_Channel_1);
000126  2000              MOVS     r0,#0
000128  f7fffffe          BL       BSP_DAC_Config
;;;94     
;;;95     #if (DAC_USE_DMA)
;;;96     	BSP_DAC_DMAConfig(DAC_Channel_1, DAC1_DMA_STREAM, DAC1_DMA_CHANNEL, (uint32_t)DAC1_DHR12R1_ADDRESS, buf);
00012c  4b2d              LDR      r3,|L1.484|
00012e  f04f6260          MOV      r2,#0xe000000
000132  4924              LDR      r1,|L1.452|
000134  3188              ADDS     r1,r1,#0x88
000136  2000              MOVS     r0,#0
000138  9400              STR      r4,[sp,#0]
00013a  f7fffffe          BL       BSP_DAC_DMAConfig
;;;97     #endif///
;;;98     
;;;99     #if (DAC_USE_INTERRUPT)
;;;100    	///允许中断
;;;101      	DAC_ITConfig(DAC_Channel_1, DAC_IT_DMAUDR, ENABLE);
;;;102    	///dac中断设置
;;;103    	BSP_IntVectSet(BSP_INT_ID_TIM6, BSP_DAC1_ISRHandler);
;;;104        BSP_IntEn(BSP_INT_ID_DAC1);
;;;105    #endif///ADC_USE_INTERRUPT
;;;106    
;;;107    #if (DAC_USE_DMA)
;;;108    #if (DAC_DMA_USE_INTERRUPT)
;;;109    	///允许DMA中断
;;;110    	DMA_ITConfig(DAC1_DMA_STREAM, DMA_IT_TC, ENABLE);
00013e  2201              MOVS     r2,#1
000140  2110              MOVS     r1,#0x10
000142  4820              LDR      r0,|L1.452|
000144  3088              ADDS     r0,r0,#0x88
000146  f7fffffe          BL       DMA_ITConfig
;;;111    	DMA_ClearFlag(DAC1_DMA_STREAM, DAC1_DMA_FLAG_TCIF);
00014a  4927              LDR      r1,|L1.488|
00014c  481d              LDR      r0,|L1.452|
00014e  3088              ADDS     r0,r0,#0x88
000150  f7fffffe          BL       DMA_ClearFlag
;;;112    	///DMA中断设置
;;;113    	BSP_IntVectSet(DAC1_DMA_INT_ID, BSP_DAC1_DMA_ISRHandler);
000154  f2af1157          ADR      r1,BSP_DAC1_DMA_ISRHandler + 1
000158  2010              MOVS     r0,#0x10
00015a  f7fffffe          BL       BSP_IntVectSet
;;;114        BSP_IntEn(DAC1_DMA_INT_ID);
00015e  2010              MOVS     r0,#0x10
000160  f7fffffe          BL       BSP_IntEn
;;;115    #endif///
;;;116    #endif///
;;;117    
;;;118      	/* Enable DAC1 Channel */
;;;119    	DAC_Cmd(DAC_Channel_1, ENABLE);
000164  2101              MOVS     r1,#1
000166  2000              MOVS     r0,#0
000168  f7fffffe          BL       DAC_Cmd
;;;120    
;;;121    #if (DAC_USE_DMA)
;;;122    	///暂时不允许
;;;123    	DMA_Cmd(DAC1_DMA_STREAM, DISABLE);
00016c  2100              MOVS     r1,#0
00016e  4815              LDR      r0,|L1.452|
000170  3088              ADDS     r0,r0,#0x88
000172  f7fffffe          BL       DMA_Cmd
;;;124    	
;;;125    #endif///
;;;126    }
000176  bd38              POP      {r3-r5,pc}
;;;127    
                          ENDP

                  BSP_DAC_Start PROC
;;;128    
;;;129    void BSP_DAC_Start(uint16_t *buf, uint16_t len)
000178  b570              PUSH     {r4-r6,lr}
;;;130    {
00017a  4604              MOV      r4,r0
00017c  460d              MOV      r5,r1
;;;131    	if (BSP_Info.Error & BSP_ERROR_DAC_BUF_EMPTY)
00017e  4813              LDR      r0,|L1.460|
000180  6800              LDR      r0,[r0,#0]  ; BSP_Info
000182  f0100f08          TST      r0,#8
000186  d000              BEQ      |L1.394|
                  |L1.392|
;;;132    		return;
;;;133    	
;;;134    #if (DAC_USE_DMA)
;;;135    	//重新写入 DMA 传输数量：必须确认当前 DMA 已经完成
;;;136    	if (DMA_GetCmdStatus(DAC1_DMA_STREAM) == DISABLE){
;;;137    		/*
;;;138    		///重新初始化DMA
;;;139    		BSP_DAC_DMAConfig(DAC_Channel_1, DAC1_DMA_STREAM, DAC1_DMA_CHANNEL, (uint32_t)DAC1_DHR12R1_ADDRESS, buf);
;;;140    		///设置 DMA 长度并启动 DMA 发送
;;;141    		DMA_SetCurrDataCounter(DAC1_DMA_STREAM, len);*/
;;;142    		
;;;143    		DAC_DMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)&(buf[0]);
;;;144    		DAC_DMA_InitStructure.DMA_BufferSize = len;
;;;145    		DMA_Init(DAC1_DMA_STREAM, &DAC_DMA_InitStructure);
;;;146    		/* Enable DMA for DAC Channel */
;;;147    		DAC_DMACmd(DAC_Channel_1, ENABLE);		
;;;148    		
;;;149    		DMA_Cmd(DAC1_DMA_STREAM, ENABLE); 
;;;150    
;;;151    		///需要先打开TIM6：
;;;152    		TIM_Cmd(TIM6, ENABLE);
;;;153    	}
;;;154    #else
;;;155    	;
;;;156    #endif
;;;157    }
000188  bd70              POP      {r4-r6,pc}
                  |L1.394|
00018a  480e              LDR      r0,|L1.452|
00018c  3088              ADDS     r0,r0,#0x88           ;136
00018e  f7fffffe          BL       DMA_GetCmdStatus
000192  b9a0              CBNZ     r0,|L1.446|
000194  4810              LDR      r0,|L1.472|
000196  6084              STR      r4,[r0,#8]            ;143  ; DAC_DMA_InitStructure
000198  6105              STR      r5,[r0,#0x10]         ;144  ; DAC_DMA_InitStructure
00019a  4601              MOV      r1,r0                 ;145
00019c  4809              LDR      r0,|L1.452|
00019e  3088              ADDS     r0,r0,#0x88           ;145
0001a0  f7fffffe          BL       DMA_Init
0001a4  2101              MOVS     r1,#1                 ;147
0001a6  2000              MOVS     r0,#0                 ;147
0001a8  f7fffffe          BL       DAC_DMACmd
0001ac  2101              MOVS     r1,#1                 ;149
0001ae  4805              LDR      r0,|L1.452|
0001b0  3088              ADDS     r0,r0,#0x88           ;149
0001b2  f7fffffe          BL       DMA_Cmd
0001b6  2101              MOVS     r1,#1                 ;152
0001b8  480c              LDR      r0,|L1.492|
0001ba  f7fffffe          BL       TIM_Cmd
                  |L1.446|
0001be  bf00              NOP      
0001c0  e7e2              B        |L1.392|
;;;158    
                          ENDP

0001c2  0000              DCW      0x0000
                  |L1.452|
                          DCD      0x40026000
                  |L1.456|
                          DCD      0x20008800
                  |L1.460|
                          DCD      BSP_Info
                  |L1.464|
                          DCD      0x20002200
                  |L1.468|
                          DCD      0xa0000040
                  |L1.472|
                          DCD      DAC_DMA_InitStructure
                  |L1.476|
                          DCD      0x00200001
                  |L1.480|
                          DCD      0x40020000
                  |L1.484|
                          DCD      0x40007408
                  |L1.488|
                          DCD      0x20000800
                  |L1.492|
                          DCD      0x40001000

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  DAC_DMA_InitStructure
                          %        60

;*** Start embedded assembler ***

#line 1 "..\\BSP\\bsp_DAC.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_bsp_DAC_c_69085a9e____REV16|
#line 112 "..\\BSP\\CMSIS\\core_cmInstr.h"
|__asm___9_bsp_DAC_c_69085a9e____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_bsp_DAC_c_69085a9e____REVSH|
#line 130
|__asm___9_bsp_DAC_c_69085a9e____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
