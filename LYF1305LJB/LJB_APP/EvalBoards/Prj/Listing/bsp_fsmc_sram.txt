; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Output\bsp_fsmc_sram.o --asm_dir=.\Listing\ --list_dir=.\Listing\ --depend=.\Output\bsp_fsmc_sram.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\BSP -I..\BSP\UCOS-II -I..\BSP\STM32F2xx\inc -I..\BSP\CMSIS -I..\BSP\CMSIS\Device_Support -I..\BSP\UCOS-II -I..\..\uC-CPU -I..\..\uC-CPU\ARM-Cortex-M3 -I..\..\uC-LIB -I..\..\uC-LIB\Ports\ARM-Cortex-M3 -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3 -I..\App -I..\Prj -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\INC\ST\STM32F2xx -DUSE_STDPERIPH_DRIVER -DDEBUG -DLJB_CPU_MAIN -DUSE_CPU_F205RC --omf_browse=.\Output\bsp_fsmc_sram.crf ..\BSP\bsp_fsmc_sram.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  BSP_SRAM_Init PROC
;;;63       */
;;;64     void BSP_SRAM_Init(void)
000000  b500              PUSH     {lr}
;;;65     {
000002  b099              SUB      sp,sp,#0x64
;;;66     	FSMC_NORSRAMInitTypeDef  FSMC_NORSRAMInitStructure;
;;;67     	FSMC_NORSRAMTimingInitTypeDef  p;
;;;68     	GPIO_InitTypeDef GPIO_InitStructure; 
;;;69       
;;;70     	/* Enable GPIOs clock */
;;;71     	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD | RCC_AHB1Periph_GPIOE | RCC_AHB1Periph_GPIOF |
000004  2101              MOVS     r1,#1
000006  2078              MOVS     r0,#0x78
000008  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;72                              RCC_AHB1Periph_GPIOG, ENABLE);
;;;73     
;;;74     	/* Enable FSMC clock */
;;;75     	RCC_AHB3PeriphClockCmd(RCC_AHB3Periph_FSMC, ENABLE); 
00000c  2101              MOVS     r1,#1
00000e  4608              MOV      r0,r1
000010  f7fffffe          BL       RCC_AHB3PeriphClockCmd
;;;76       
;;;77     /*-- GPIOs Configuration ------------------------------------------------------*/
;;;78     /*
;;;79     	+-------------------+--------------------+------------------+------------------+
;;;80     	+                       SRAM pins assignment                                  +
;;;81     	+-------------------+--------------------+------------------+------------------+
;;;82     	| PD0  <-> FSMC_D2  | PE0  <-> FSMC_NBL0 | PF0  <-> FSMC_A0 | PG0 <-> FSMC_A10 |
;;;83     	| PD1  <-> FSMC_D3  | PE1  <-> FSMC_NBL1 | PF1  <-> FSMC_A1 | PG1 <-> FSMC_A11 |
;;;84     	| PD4  <-> FSMC_NOE | PE7  <-> FSMC_D4   | PF2  <-> FSMC_A2 | PG2 <-> FSMC_A12 |
;;;85     	| PD5  <-> FSMC_NWE | PE8  <-> FSMC_D5   | PF3  <-> FSMC_A3 | PG3 <-> FSMC_A13 |
;;;86     	| PD8  <-> FSMC_D13 | PE9  <-> FSMC_D6   | PF4  <-> FSMC_A4 | PG4 <-> FSMC_A14 |
;;;87     	| PD9  <-> FSMC_D14 | PE10 <-> FSMC_D7   | PF5  <-> FSMC_A5 | PG5 <-> FSMC_A15 |
;;;88     	| PD10 <-> FSMC_D15 | PE11 <-> FSMC_D8   | PF12 <-> FSMC_A6 | PG9 <-> FSMC_NE2 |
;;;89     	| PD11 <-> FSMC_A16 | PE12 <-> FSMC_D9   | PF13 <-> FSMC_A7 |------------------+
;;;90     	| PD12 <-> FSMC_A17 | PE13 <-> FSMC_D10  | PF14 <-> FSMC_A8 | 
;;;91     	| PD14 <-> FSMC_D0  | PE14 <-> FSMC_D11  | PF15 <-> FSMC_A9 | 
;;;92     	| PD15 <-> FSMC_D1  | PE15 <-> FSMC_D12  |------------------+
;;;93     	+-------------------+--------------------+
;;;94     */
;;;95     	/* GPIOD configuration */
;;;96     	GPIO_PinAFConfig(GPIOD, GPIO_PinSource0, GPIO_AF_FSMC);
000014  220c              MOVS     r2,#0xc
000016  2100              MOVS     r1,#0
000018  489a              LDR      r0,|L1.644|
00001a  f7fffffe          BL       GPIO_PinAFConfig
;;;97     	GPIO_PinAFConfig(GPIOD, GPIO_PinSource1, GPIO_AF_FSMC);
00001e  220c              MOVS     r2,#0xc
000020  2101              MOVS     r1,#1
000022  4898              LDR      r0,|L1.644|
000024  f7fffffe          BL       GPIO_PinAFConfig
;;;98     	GPIO_PinAFConfig(GPIOD, GPIO_PinSource4, GPIO_AF_FSMC);
000028  220c              MOVS     r2,#0xc
00002a  2104              MOVS     r1,#4
00002c  4895              LDR      r0,|L1.644|
00002e  f7fffffe          BL       GPIO_PinAFConfig
;;;99     	GPIO_PinAFConfig(GPIOD, GPIO_PinSource5, GPIO_AF_FSMC);
000032  220c              MOVS     r2,#0xc
000034  2105              MOVS     r1,#5
000036  4893              LDR      r0,|L1.644|
000038  f7fffffe          BL       GPIO_PinAFConfig
;;;100    	GPIO_PinAFConfig(GPIOD, GPIO_PinSource7, GPIO_AF_FSMC);
00003c  220c              MOVS     r2,#0xc
00003e  2107              MOVS     r1,#7
000040  4890              LDR      r0,|L1.644|
000042  f7fffffe          BL       GPIO_PinAFConfig
;;;101    	GPIO_PinAFConfig(GPIOD, GPIO_PinSource8, GPIO_AF_FSMC);
000046  220c              MOVS     r2,#0xc
000048  2108              MOVS     r1,#8
00004a  488e              LDR      r0,|L1.644|
00004c  f7fffffe          BL       GPIO_PinAFConfig
;;;102    	GPIO_PinAFConfig(GPIOD, GPIO_PinSource9, GPIO_AF_FSMC);
000050  220c              MOVS     r2,#0xc
000052  2109              MOVS     r1,#9
000054  488b              LDR      r0,|L1.644|
000056  f7fffffe          BL       GPIO_PinAFConfig
;;;103    	GPIO_PinAFConfig(GPIOD, GPIO_PinSource10, GPIO_AF_FSMC);
00005a  220c              MOVS     r2,#0xc
00005c  210a              MOVS     r1,#0xa
00005e  4889              LDR      r0,|L1.644|
000060  f7fffffe          BL       GPIO_PinAFConfig
;;;104    	GPIO_PinAFConfig(GPIOD, GPIO_PinSource11, GPIO_AF_FSMC); 
000064  220c              MOVS     r2,#0xc
000066  210b              MOVS     r1,#0xb
000068  4886              LDR      r0,|L1.644|
00006a  f7fffffe          BL       GPIO_PinAFConfig
;;;105    	GPIO_PinAFConfig(GPIOD, GPIO_PinSource12, GPIO_AF_FSMC);
00006e  220c              MOVS     r2,#0xc
000070  4611              MOV      r1,r2
000072  4884              LDR      r0,|L1.644|
000074  f7fffffe          BL       GPIO_PinAFConfig
;;;106    	GPIO_PinAFConfig(GPIOD, GPIO_PinSource14, GPIO_AF_FSMC);
000078  220c              MOVS     r2,#0xc
00007a  210e              MOVS     r1,#0xe
00007c  4881              LDR      r0,|L1.644|
00007e  f7fffffe          BL       GPIO_PinAFConfig
;;;107    	GPIO_PinAFConfig(GPIOD, GPIO_PinSource15, GPIO_AF_FSMC);
000082  220c              MOVS     r2,#0xc
000084  210f              MOVS     r1,#0xf
000086  487f              LDR      r0,|L1.644|
000088  f7fffffe          BL       GPIO_PinAFConfig
;;;108    
;;;109    	GPIO_InitStructure.GPIO_Pin = 	GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_4 | GPIO_Pin_5 | GPIO_Pin_7 |
00008c  f64d70b3          MOV      r0,#0xdfb3
000090  9001              STR      r0,[sp,#4]
;;;110    									GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_11 |
;;;111    									GPIO_Pin_12 | GPIO_Pin_14 | GPIO_Pin_15;
;;;112    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
000092  f04f0002          MOV      r0,#2
000096  f88d0008          STRB     r0,[sp,#8]
;;;113    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
00009a  f04f0003          MOV      r0,#3
00009e  f88d0009          STRB     r0,[sp,#9]
;;;114    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
0000a2  f04f0000          MOV      r0,#0
0000a6  f88d000a          STRB     r0,[sp,#0xa]
;;;115    	GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_NOPULL;
0000aa  f88d000b          STRB     r0,[sp,#0xb]
;;;116    
;;;117    	GPIO_Init(GPIOD, &GPIO_InitStructure);
0000ae  a901              ADD      r1,sp,#4
0000b0  4874              LDR      r0,|L1.644|
0000b2  f7fffffe          BL       GPIO_Init
;;;118    
;;;119    
;;;120    	/* GPIOE configuration */
;;;121    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource0 , GPIO_AF_FSMC);
0000b6  220c              MOVS     r2,#0xc
0000b8  2100              MOVS     r1,#0
0000ba  4873              LDR      r0,|L1.648|
0000bc  f7fffffe          BL       GPIO_PinAFConfig
;;;122    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource1 , GPIO_AF_FSMC);
0000c0  220c              MOVS     r2,#0xc
0000c2  2101              MOVS     r1,#1
0000c4  4870              LDR      r0,|L1.648|
0000c6  f7fffffe          BL       GPIO_PinAFConfig
;;;123    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource7 , GPIO_AF_FSMC);
0000ca  220c              MOVS     r2,#0xc
0000cc  2107              MOVS     r1,#7
0000ce  486e              LDR      r0,|L1.648|
0000d0  f7fffffe          BL       GPIO_PinAFConfig
;;;124    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource8 , GPIO_AF_FSMC);
0000d4  220c              MOVS     r2,#0xc
0000d6  2108              MOVS     r1,#8
0000d8  486b              LDR      r0,|L1.648|
0000da  f7fffffe          BL       GPIO_PinAFConfig
;;;125    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource9 , GPIO_AF_FSMC);
0000de  220c              MOVS     r2,#0xc
0000e0  2109              MOVS     r1,#9
0000e2  4869              LDR      r0,|L1.648|
0000e4  f7fffffe          BL       GPIO_PinAFConfig
;;;126    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource10 , GPIO_AF_FSMC);
0000e8  220c              MOVS     r2,#0xc
0000ea  210a              MOVS     r1,#0xa
0000ec  4866              LDR      r0,|L1.648|
0000ee  f7fffffe          BL       GPIO_PinAFConfig
;;;127    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource11 , GPIO_AF_FSMC);
0000f2  220c              MOVS     r2,#0xc
0000f4  210b              MOVS     r1,#0xb
0000f6  4864              LDR      r0,|L1.648|
0000f8  f7fffffe          BL       GPIO_PinAFConfig
;;;128    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource12 , GPIO_AF_FSMC);
0000fc  220c              MOVS     r2,#0xc
0000fe  4611              MOV      r1,r2
000100  4861              LDR      r0,|L1.648|
000102  f7fffffe          BL       GPIO_PinAFConfig
;;;129    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource13 , GPIO_AF_FSMC);
000106  220c              MOVS     r2,#0xc
000108  210d              MOVS     r1,#0xd
00010a  485f              LDR      r0,|L1.648|
00010c  f7fffffe          BL       GPIO_PinAFConfig
;;;130    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource14 , GPIO_AF_FSMC);
000110  220c              MOVS     r2,#0xc
000112  210e              MOVS     r1,#0xe
000114  485c              LDR      r0,|L1.648|
000116  f7fffffe          BL       GPIO_PinAFConfig
;;;131    	GPIO_PinAFConfig(GPIOE, GPIO_PinSource15 , GPIO_AF_FSMC);
00011a  220c              MOVS     r2,#0xc
00011c  210f              MOVS     r1,#0xf
00011e  485a              LDR      r0,|L1.648|
000120  f7fffffe          BL       GPIO_PinAFConfig
;;;132    
;;;133    	GPIO_InitStructure.GPIO_Pin = 	GPIO_Pin_0  | GPIO_Pin_1 | GPIO_Pin_7 |
000124  f64f7083          MOV      r0,#0xff83
000128  9001              STR      r0,[sp,#4]
;;;134    									GPIO_Pin_8  | GPIO_Pin_9  | GPIO_Pin_10 | GPIO_Pin_11|
;;;135    									GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15;
;;;136    
;;;137    	GPIO_Init(GPIOE, &GPIO_InitStructure);
00012a  a901              ADD      r1,sp,#4
00012c  4856              LDR      r0,|L1.648|
00012e  f7fffffe          BL       GPIO_Init
;;;138    
;;;139    
;;;140    	/* GPIOF configuration */
;;;141    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource0 , GPIO_AF_FSMC);
000132  220c              MOVS     r2,#0xc
000134  2100              MOVS     r1,#0
000136  4855              LDR      r0,|L1.652|
000138  f7fffffe          BL       GPIO_PinAFConfig
;;;142    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource1 , GPIO_AF_FSMC);
00013c  220c              MOVS     r2,#0xc
00013e  2101              MOVS     r1,#1
000140  4852              LDR      r0,|L1.652|
000142  f7fffffe          BL       GPIO_PinAFConfig
;;;143    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource2 , GPIO_AF_FSMC);
000146  220c              MOVS     r2,#0xc
000148  2102              MOVS     r1,#2
00014a  4850              LDR      r0,|L1.652|
00014c  f7fffffe          BL       GPIO_PinAFConfig
;;;144    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource3 , GPIO_AF_FSMC);
000150  220c              MOVS     r2,#0xc
000152  2103              MOVS     r1,#3
000154  484d              LDR      r0,|L1.652|
000156  f7fffffe          BL       GPIO_PinAFConfig
;;;145    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource4 , GPIO_AF_FSMC);
00015a  220c              MOVS     r2,#0xc
00015c  2104              MOVS     r1,#4
00015e  484b              LDR      r0,|L1.652|
000160  f7fffffe          BL       GPIO_PinAFConfig
;;;146    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource5 , GPIO_AF_FSMC);
000164  220c              MOVS     r2,#0xc
000166  2105              MOVS     r1,#5
000168  4848              LDR      r0,|L1.652|
00016a  f7fffffe          BL       GPIO_PinAFConfig
;;;147    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource12 , GPIO_AF_FSMC);
00016e  220c              MOVS     r2,#0xc
000170  4611              MOV      r1,r2
000172  4846              LDR      r0,|L1.652|
000174  f7fffffe          BL       GPIO_PinAFConfig
;;;148    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource13 , GPIO_AF_FSMC);
000178  220c              MOVS     r2,#0xc
00017a  210d              MOVS     r1,#0xd
00017c  4843              LDR      r0,|L1.652|
00017e  f7fffffe          BL       GPIO_PinAFConfig
;;;149    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource14 , GPIO_AF_FSMC);
000182  220c              MOVS     r2,#0xc
000184  210e              MOVS     r1,#0xe
000186  4841              LDR      r0,|L1.652|
000188  f7fffffe          BL       GPIO_PinAFConfig
;;;150    	GPIO_PinAFConfig(GPIOF, GPIO_PinSource15 , GPIO_AF_FSMC);
00018c  220c              MOVS     r2,#0xc
00018e  210f              MOVS     r1,#0xf
000190  483e              LDR      r0,|L1.652|
000192  f7fffffe          BL       GPIO_PinAFConfig
;;;151    
;;;152    	GPIO_InitStructure.GPIO_Pin = 	GPIO_Pin_0  | GPIO_Pin_1  | GPIO_Pin_2  | GPIO_Pin_3 | 
000196  f24f003f          MOV      r0,#0xf03f
00019a  9001              STR      r0,[sp,#4]
;;;153    									GPIO_Pin_4  | GPIO_Pin_5  | 
;;;154    									GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | GPIO_Pin_15;      
;;;155    
;;;156    	GPIO_Init(GPIOF, &GPIO_InitStructure);
00019c  a901              ADD      r1,sp,#4
00019e  483b              LDR      r0,|L1.652|
0001a0  f7fffffe          BL       GPIO_Init
;;;157    
;;;158    
;;;159    	/* GPIOG configuration */
;;;160    	GPIO_PinAFConfig(GPIOG, GPIO_PinSource0 , GPIO_AF_FSMC);
0001a4  220c              MOVS     r2,#0xc
0001a6  2100              MOVS     r1,#0
0001a8  4839              LDR      r0,|L1.656|
0001aa  f7fffffe          BL       GPIO_PinAFConfig
;;;161    	GPIO_PinAFConfig(GPIOG, GPIO_PinSource1 , GPIO_AF_FSMC);
0001ae  220c              MOVS     r2,#0xc
0001b0  2101              MOVS     r1,#1
0001b2  4837              LDR      r0,|L1.656|
0001b4  f7fffffe          BL       GPIO_PinAFConfig
;;;162    	GPIO_PinAFConfig(GPIOG, GPIO_PinSource2 , GPIO_AF_FSMC);
0001b8  220c              MOVS     r2,#0xc
0001ba  2102              MOVS     r1,#2
0001bc  4834              LDR      r0,|L1.656|
0001be  f7fffffe          BL       GPIO_PinAFConfig
;;;163    	GPIO_PinAFConfig(GPIOG, GPIO_PinSource3 , GPIO_AF_FSMC);
0001c2  220c              MOVS     r2,#0xc
0001c4  2103              MOVS     r1,#3
0001c6  4832              LDR      r0,|L1.656|
0001c8  f7fffffe          BL       GPIO_PinAFConfig
;;;164    	GPIO_PinAFConfig(GPIOG, GPIO_PinSource4 , GPIO_AF_FSMC);
0001cc  220c              MOVS     r2,#0xc
0001ce  2104              MOVS     r1,#4
0001d0  482f              LDR      r0,|L1.656|
0001d2  f7fffffe          BL       GPIO_PinAFConfig
;;;165    	GPIO_PinAFConfig(GPIOG, GPIO_PinSource5 , GPIO_AF_FSMC);
0001d6  220c              MOVS     r2,#0xc
0001d8  2105              MOVS     r1,#5
0001da  482d              LDR      r0,|L1.656|
0001dc  f7fffffe          BL       GPIO_PinAFConfig
;;;166    
;;;167    	GPIO_InitStructure.GPIO_Pin = 	GPIO_Pin_0  | GPIO_Pin_1  | GPIO_Pin_2  | GPIO_Pin_3 | 
0001e0  f04f003f          MOV      r0,#0x3f
0001e4  9001              STR      r0,[sp,#4]
;;;168    									GPIO_Pin_4  | GPIO_Pin_5;      
;;;169    
;;;170    	GPIO_Init(GPIOG, &GPIO_InitStructure);
0001e6  a901              ADD      r1,sp,#4
0001e8  4829              LDR      r0,|L1.656|
0001ea  f7fffffe          BL       GPIO_Init
;;;171    
;;;172    /*-- FSMC Configuration ------------------------------------------------------*/
;;;173    	p.FSMC_AddressSetupTime = 1;///0;
0001ee  f04f0001          MOV      r0,#1
0001f2  9003              STR      r0,[sp,#0xc]
;;;174    	p.FSMC_AddressHoldTime = 0;
0001f4  f04f0000          MOV      r0,#0
0001f8  9004              STR      r0,[sp,#0x10]
;;;175    	p.FSMC_DataSetupTime = 1;///4;
0001fa  f04f0001          MOV      r0,#1
0001fe  9005              STR      r0,[sp,#0x14]
;;;176    	p.FSMC_BusTurnAroundDuration = 1;
000200  9006              STR      r0,[sp,#0x18]
;;;177    	p.FSMC_CLKDivision = 0;
000202  f04f0000          MOV      r0,#0
000206  9007              STR      r0,[sp,#0x1c]
;;;178    	p.FSMC_DataLatency = 0;
000208  9008              STR      r0,[sp,#0x20]
;;;179    	p.FSMC_AccessMode = FSMC_AccessMode_A;
00020a  9009              STR      r0,[sp,#0x24]
;;;180    
;;;181    	FSMC_NORSRAMInitStructure.FSMC_Bank = FSMC_Bank1_NORSRAM1;
00020c  900a              STR      r0,[sp,#0x28]
;;;182    	FSMC_NORSRAMInitStructure.FSMC_DataAddressMux = FSMC_DataAddressMux_Disable;
00020e  900b              STR      r0,[sp,#0x2c]
;;;183    	FSMC_NORSRAMInitStructure.FSMC_MemoryType = FSMC_MemoryType_SRAM;
000210  900c              STR      r0,[sp,#0x30]
;;;184    	FSMC_NORSRAMInitStructure.FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_16b;
000212  f04f0010          MOV      r0,#0x10
000216  900d              STR      r0,[sp,#0x34]
;;;185    	FSMC_NORSRAMInitStructure.FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
000218  f04f0000          MOV      r0,#0
00021c  900e              STR      r0,[sp,#0x38]
;;;186    	FSMC_NORSRAMInitStructure.FSMC_AsynchronousWait = FSMC_AsynchronousWait_Disable;  
00021e  900f              STR      r0,[sp,#0x3c]
;;;187    	FSMC_NORSRAMInitStructure.FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
000220  9010              STR      r0,[sp,#0x40]
;;;188    	FSMC_NORSRAMInitStructure.FSMC_WrapMode = FSMC_WrapMode_Disable;
000222  9011              STR      r0,[sp,#0x44]
;;;189    	FSMC_NORSRAMInitStructure.FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
000224  9012              STR      r0,[sp,#0x48]
;;;190    	FSMC_NORSRAMInitStructure.FSMC_WriteOperation = FSMC_WriteOperation_Enable;
000226  f44f5080          MOV      r0,#0x1000
00022a  9013              STR      r0,[sp,#0x4c]
;;;191    	FSMC_NORSRAMInitStructure.FSMC_WaitSignal = FSMC_WaitSignal_Disable;
00022c  f04f0000          MOV      r0,#0
000230  9014              STR      r0,[sp,#0x50]
;;;192    	FSMC_NORSRAMInitStructure.FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
000232  9015              STR      r0,[sp,#0x54]
;;;193    	FSMC_NORSRAMInitStructure.FSMC_WriteBurst = FSMC_WriteBurst_Disable;
000234  9016              STR      r0,[sp,#0x58]
;;;194    	FSMC_NORSRAMInitStructure.FSMC_ReadWriteTimingStruct = &p;
000236  a803              ADD      r0,sp,#0xc
000238  9017              STR      r0,[sp,#0x5c]
;;;195    	FSMC_NORSRAMInitStructure.FSMC_WriteTimingStruct = &p;
00023a  9018              STR      r0,[sp,#0x60]
;;;196    
;;;197    	FSMC_NORSRAMInit(&FSMC_NORSRAMInitStructure); 
00023c  a80a              ADD      r0,sp,#0x28
00023e  f7fffffe          BL       FSMC_NORSRAMInit
;;;198    
;;;199    	/*!< Enable FSMC Bank1_SRAM1 Bank */
;;;200    	FSMC_NORSRAMCmd(FSMC_Bank1_NORSRAM1, ENABLE); 
000242  2101              MOVS     r1,#1
000244  2000              MOVS     r0,#0
000246  f7fffffe          BL       FSMC_NORSRAMCmd
;;;201    }
00024a  b019              ADD      sp,sp,#0x64
00024c  bd00              POP      {pc}
;;;202    
                          ENDP

                  BSP_SRAM_WriteBuffer PROC
;;;210      */
;;;211    void BSP_SRAM_WriteBuffer(uint16_t* pBuffer, uint32_t WriteAddr, uint32_t NumHalfwordToWrite)
00024e  b510              PUSH     {r4,lr}
;;;212    {
;;;213    	for (; NumHalfwordToWrite != 0; NumHalfwordToWrite--) /* while there is data to write */
000250  e008              B        |L1.612|
                  |L1.594|
;;;214    	{
;;;215    		/* Transfer data to the memory */
;;;216    		*(uint16_t *) (Bank1_SRAM1_ADDR + WriteAddr) = *pBuffer++;
000252  f8304b02          LDRH     r4,[r0],#2
000256  f04f43c0          MOV      r3,#0x60000000
00025a  525c              STRH     r4,[r3,r1]
;;;217    
;;;218    		/* Increment the address*/
;;;219    		WriteAddr += 2;
00025c  f1010102          ADD      r1,r1,#2
000260  f1a20201          SUB      r2,r2,#1              ;213
                  |L1.612|
000264  2a00              CMP      r2,#0                 ;213
000266  d1f4              BNE      |L1.594|
;;;220    	}
;;;221    }
000268  bd10              POP      {r4,pc}
;;;222    
                          ENDP

                  BSP_SRAM_ReadBuffer PROC
;;;230      */
;;;231    void BSP_SRAM_ReadBuffer(uint16_t* pBuffer, uint32_t ReadAddr, uint32_t NumHalfwordToRead)
00026a  e008              B        |L1.638|
                  |L1.620|
;;;232    {
;;;233    	for (; NumHalfwordToRead != 0; NumHalfwordToRead--) /* while there is data to read */
;;;234    	{
;;;235    		/* Read a half-word from the memory */
;;;236    		*pBuffer++ = *(__IO uint16_t*) (Bank1_SRAM1_ADDR + ReadAddr);
00026c  f04f43c0          MOV      r3,#0x60000000
000270  5a5b              LDRH     r3,[r3,r1]
000272  f8203b02          STRH     r3,[r0],#2
;;;237    
;;;238    		/* Increment the address*/
;;;239    		ReadAddr += 2;
000276  f1010102          ADD      r1,r1,#2
00027a  f1a20201          SUB      r2,r2,#1              ;233
                  |L1.638|
00027e  2a00              CMP      r2,#0                 ;233
000280  d1f4              BNE      |L1.620|
;;;240    	}
;;;241    }
000282  4770              BX       lr
;;;242    
                          ENDP

                  |L1.644|
                          DCD      0x40020c00
                  |L1.648|
                          DCD      0x40021000
                  |L1.652|
                          DCD      0x40021400
                  |L1.656|
                          DCD      0x40021800

;*** Start embedded assembler ***

#line 1 "..\\BSP\\bsp_fsmc_sram.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___15_bsp_fsmc_sram_c_59c6c844____REV16|
#line 112 "..\\BSP\\CMSIS\\core_cmInstr.h"
|__asm___15_bsp_fsmc_sram_c_59c6c844____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___15_bsp_fsmc_sram_c_59c6c844____REVSH|
#line 130
|__asm___15_bsp_fsmc_sram_c_59c6c844____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
