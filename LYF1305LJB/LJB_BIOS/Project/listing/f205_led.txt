; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\output\f205_led.o --asm_dir=..\listing\ --list_dir=..\listing\ --depend=..\output\f205_led.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\src -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\STM32F2xx -I..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc -I..\..\Utilities\STM32_EVAL -I..\src\SYSTICK -I..\src\LED -I..\src\GPIO -I..\src\USART -I..\src\FLASH -I..\src\HexFile -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\INC\ST\STM32F2xx -DUSE_STDPERIPH_DRIVER -DUSE_CPU_F205RC -DLJB_CPU -W --omf_browse=..\output\f205_led.crf ..\src\LED\F205_Led.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  F205_InitLED PROC
;;;32     ///////////////////////////////////////////////////////////
;;;33     void F205_InitLED(void)
000000  b510              PUSH     {r4,lr}
;;;34     {
;;;35     #if defined JLB_CPU_SAMPLE
;;;36     	STM_EVAL_LEDInit(LED1);
;;;37       	STM_EVAL_LEDInit(LED2);
;;;38       	STM_EVAL_LEDInit(LED3);
;;;39     #elif defined JLB_CPU_CONTROL
;;;40     	STM_EVAL_LEDInit(LED4);
;;;41     	STM_EVAL_LEDInit(LED5);
;;;42     	STM_EVAL_LEDInit(LED6);
;;;43     	STM_EVAL_LEDInit(LED7);
;;;44     	STM_EVAL_LEDInit(LED8);
;;;45     #elif defined JMB_CPU_MAIN
;;;46     	STM_EVAL_LEDInit(LED9);
;;;47     #elif defined LJB_CPU
;;;48     	STM_EVAL_LEDInit(LED10);
000002  2009              MOVS     r0,#9
000004  f7fffffe          BL       STM_EVAL_LEDInit
;;;49         STM_EVAL_LEDInit(LED11);
000008  200a              MOVS     r0,#0xa
00000a  f7fffffe          BL       STM_EVAL_LEDInit
;;;50     #endif
;;;51     }
00000e  bd10              POP      {r4,pc}
;;;52     
                          ENDP

                  F205_PowOnLedFlash PROC
;;;53     
;;;54     void F205_PowOnLedFlash(void)
000010  b510              PUSH     {r4,lr}
;;;55     {
;;;56     #if defined JLB_CPU_SAMPLE
;;;57       	STM_EVAL_LEDOn(LED1);
;;;58       	STM_EVAL_LEDOn(LED2);
;;;59       	STM_EVAL_LEDOn(LED3); 
;;;60     
;;;61       	MyInfo.SysTm = 0;
;;;62     	while (MyInfo.SysTm < 500){}
;;;63     
;;;64       	STM_EVAL_LEDOff(LED1);
;;;65       	STM_EVAL_LEDOff(LED2);
;;;66       	STM_EVAL_LEDOff(LED3);
;;;67     
;;;68     	MyInfo.SysTm = 0;
;;;69     	while (MyInfo.SysTm < 300){}
;;;70     		
;;;71     #elif defined JLB_CPU_CONTROL
;;;72     	STM_EVAL_LEDOn(LED4);
;;;73       	STM_EVAL_LEDOn(LED5);
;;;74       	STM_EVAL_LEDOn(LED6);
;;;75     	STM_EVAL_LEDOn(LED7);
;;;76       	STM_EVAL_LEDOn(LED8);
;;;77     
;;;78       	MyInfo.SysTm = 0;
;;;79     	while (MyInfo.SysTm < 500){}
;;;80     
;;;81       	STM_EVAL_LEDOff(LED4);
;;;82       	STM_EVAL_LEDOff(LED5);
;;;83       	STM_EVAL_LEDOff(LED6);
;;;84     	STM_EVAL_LEDOff(LED7);
;;;85       	STM_EVAL_LEDOff(LED8);
;;;86     
;;;87     	MyInfo.SysTm = 0;
;;;88     	while (MyInfo.SysTm < 300){}
;;;89     		
;;;90     #elif defined JMB_CPU_MAIN
;;;91     	STM_EVAL_LEDOn(LED9);
;;;92     
;;;93       	MyInfo.SysTm = 0;
;;;94     	while (MyInfo.SysTm < 500){}
;;;95     
;;;96       	STM_EVAL_LEDOff(LED9);
;;;97     
;;;98     	MyInfo.SysTm = 0;
;;;99     	while (MyInfo.SysTm < 300){}
;;;100    
;;;101    #elif defined LJB_CPU
;;;102      	STM_EVAL_LEDOn(LED10);
000012  2009              MOVS     r0,#9
000014  f7fffffe          BL       STM_EVAL_LEDOn
;;;103      	STM_EVAL_LEDOn(LED11);
000018  200a              MOVS     r0,#0xa
00001a  f7fffffe          BL       STM_EVAL_LEDOn
;;;104    
;;;105      	MyInfo.SysTm = 0;
00001e  f04f0000          MOV      r0,#0
000022  4940              LDR      r1,|L1.292|
000024  60c8              STR      r0,[r1,#0xc]  ; MyInfo
;;;106    	while (MyInfo.SysTm < 500){}
000026  bf00              NOP      
                  |L1.40|
000028  483e              LDR      r0,|L1.292|
00002a  68c0              LDR      r0,[r0,#0xc]  ; MyInfo
00002c  f5b07ffa          CMP      r0,#0x1f4
000030  d3fa              BCC      |L1.40|
;;;107    
;;;108      	STM_EVAL_LEDOff(LED10);
000032  2009              MOVS     r0,#9
000034  f7fffffe          BL       STM_EVAL_LEDOff
;;;109      	STM_EVAL_LEDOff(LED11);
000038  200a              MOVS     r0,#0xa
00003a  f7fffffe          BL       STM_EVAL_LEDOff
;;;110    
;;;111    	MyInfo.SysTm = 0;
00003e  f04f0000          MOV      r0,#0
000042  4938              LDR      r1,|L1.292|
000044  60c8              STR      r0,[r1,#0xc]  ; MyInfo
;;;112    	while (MyInfo.SysTm < 300){}		
000046  bf00              NOP      
                  |L1.72|
000048  4836              LDR      r0,|L1.292|
00004a  68c0              LDR      r0,[r0,#0xc]  ; MyInfo
00004c  f5b07f96          CMP      r0,#0x12c
000050  d3fa              BCC      |L1.72|
;;;113    #endif
;;;114    }
000052  bd10              POP      {r4,pc}
;;;115    
                          ENDP

                  F205_ComLed PROC
;;;218    
;;;219    void F205_ComLed(void)
000054  b510              PUSH     {r4,lr}
;;;220    {
;;;221    #if defined JLB_CPU_SAMPLE
;;;222    	if (MyInfo.RdyFlag){
;;;223    		
;;;224    		if (MyInfo.RxFlag){
;;;225    			
;;;226    			if (RxLedTm >= 500){
;;;227    				STM_EVAL_LEDOff(LED1);
;;;228    				RxLedTm = 0;
;;;229    				MyInfo.RxFlag--;
;;;230    			}
;;;231    			else{
;;;232    				if ((RxLedTm % 100) == 0)
;;;233    					STM_EVAL_LEDOn(LED1); 			
;;;234    				else if ((RxLedTm % 50) == 0)
;;;235    					STM_EVAL_LEDOff(LED1);
;;;236    				RxLedTm++;
;;;237    			}
;;;238    		}
;;;239    		else{
;;;240    			STM_EVAL_LEDOff(LED1);
;;;241    			RxLedTm = 0;
;;;242    		}
;;;243    	}
;;;244    #endif
;;;245    
;;;246    #if defined LJB_CPU
;;;247    	if (MyInfo.RdyFlag)
000056  4833              LDR      r0,|L1.292|
000058  7940              LDRB     r0,[r0,#5]  ; MyInfo
00005a  b390              CBZ      r0,|L1.194|
;;;248    	{
;;;249    		if (MyInfo.RxFlag)
00005c  4831              LDR      r0,|L1.292|
00005e  78c0              LDRB     r0,[r0,#3]  ; MyInfo
000060  b380              CBZ      r0,|L1.196|
;;;250    		{
;;;251    			if (RxLedTm >= 500)
000062  4831              LDR      r0,|L1.296|
000064  6800              LDR      r0,[r0,#0]  ; RxLedTm
000066  f5b07ffa          CMP      r0,#0x1f4
00006a  d30d              BCC      |L1.136|
;;;252    			{
;;;253    				STM_EVAL_LEDOff(LED11);
00006c  200a              MOVS     r0,#0xa
00006e  f7fffffe          BL       STM_EVAL_LEDOff
;;;254    				RxLedTm = 0;
000072  f04f0000          MOV      r0,#0
000076  492c              LDR      r1,|L1.296|
000078  6008              STR      r0,[r1,#0]  ; RxLedTm
;;;255    				MyInfo.RxFlag--;
00007a  482a              LDR      r0,|L1.292|
00007c  78c0              LDRB     r0,[r0,#3]  ; MyInfo
00007e  f1a00001          SUB      r0,r0,#1
000082  4928              LDR      r1,|L1.292|
000084  70c8              STRB     r0,[r1,#3]
000086  e025              B        |L1.212|
                  |L1.136|
;;;256    			}
;;;257    			else
;;;258    			{
;;;259    				if ((RxLedTm % 100) == 0)
000088  4827              LDR      r0,|L1.296|
00008a  6800              LDR      r0,[r0,#0]  ; RxLedTm
00008c  2164              MOVS     r1,#0x64
00008e  fbb0f2f1          UDIV     r2,r0,r1
000092  fb010012          MLS      r0,r1,r2,r0
000096  b918              CBNZ     r0,|L1.160|
;;;260    				{
;;;261    					STM_EVAL_LEDOn(LED11); 			
000098  200a              MOVS     r0,#0xa
00009a  f7fffffe          BL       STM_EVAL_LEDOn
00009e  e00a              B        |L1.182|
                  |L1.160|
;;;262    				}
;;;263    				else if ((RxLedTm % 50) == 0)
0000a0  4821              LDR      r0,|L1.296|
0000a2  6800              LDR      r0,[r0,#0]  ; RxLedTm
0000a4  2132              MOVS     r1,#0x32
0000a6  fbb0f2f1          UDIV     r2,r0,r1
0000aa  fb010012          MLS      r0,r1,r2,r0
0000ae  b910              CBNZ     r0,|L1.182|
;;;264    					{
;;;265    					    STM_EVAL_LEDOff(LED11);
0000b0  200a              MOVS     r0,#0xa
0000b2  f7fffffe          BL       STM_EVAL_LEDOff
                  |L1.182|
;;;266    					}
;;;267    				RxLedTm++;
0000b6  481c              LDR      r0,|L1.296|
0000b8  6800              LDR      r0,[r0,#0]  ; RxLedTm
0000ba  f1000001          ADD      r0,r0,#1
0000be  491a              LDR      r1,|L1.296|
0000c0  6008              STR      r0,[r1,#0]  ; RxLedTm
                  |L1.194|
0000c2  e007              B        |L1.212|
                  |L1.196|
0000c4  e7ff              B        |L1.198|
                  |L1.198|
;;;268    			}
;;;269    		}
;;;270    		else
;;;271    		{
;;;272    			STM_EVAL_LEDOff(LED11);
0000c6  200a              MOVS     r0,#0xa
0000c8  f7fffffe          BL       STM_EVAL_LEDOff
;;;273    			RxLedTm = 0;
0000cc  f04f0000          MOV      r0,#0
0000d0  4915              LDR      r1,|L1.296|
0000d2  6008              STR      r0,[r1,#0]  ; RxLedTm
                  |L1.212|
;;;274    		}
;;;275    	}
;;;276    #endif
;;;277    
;;;278    }
0000d4  bd10              POP      {r4,pc}
;;;279    
                          ENDP

                  F205_TaxLed PROC
;;;281    ///采样CPU BIOS 状态由 TAX 灯指示
;;;282    void F205_TaxLed(void)
0000d6  b510              PUSH     {r4,lr}
;;;283    {
;;;284    #if defined JLB_CPU_SAMPLE
;;;285    	if (MyInfo.RdyFlag){
;;;286    		if (WkLedTm >= 100){
;;;287    			STM_EVAL_LEDOn(LED3);
;;;288    			WkLedTm = 0;
;;;289    		}
;;;290    		else{
;;;291    			WkLedTm++;
;;;292    			if (WkLedTm == 50)
;;;293    				STM_EVAL_LEDOff(LED3);
;;;294    		}
;;;295    	}
;;;296    #endif
;;;297    
;;;298    #if defined LJB_CPU
;;;299    	if (MyInfo.RdyFlag)
0000d8  4812              LDR      r0,|L1.292|
0000da  7940              LDRB     r0,[r0,#5]  ; MyInfo
0000dc  b1c0              CBZ      r0,|L1.272|
;;;300    	{
;;;301    		if (WkLedTm >= 100)
0000de  4813              LDR      r0,|L1.300|
0000e0  6800              LDR      r0,[r0,#0]  ; WkLedTm
0000e2  2864              CMP      r0,#0x64
0000e4  d307              BCC      |L1.246|
;;;302    		{
;;;303    			STM_EVAL_LEDOn(LED10);
0000e6  2009              MOVS     r0,#9
0000e8  f7fffffe          BL       STM_EVAL_LEDOn
;;;304    			WkLedTm = 0;
0000ec  f04f0000          MOV      r0,#0
0000f0  490e              LDR      r1,|L1.300|
0000f2  6008              STR      r0,[r1,#0]  ; WkLedTm
0000f4  e00c              B        |L1.272|
                  |L1.246|
;;;305    		}
;;;306    		else
;;;307    		{
;;;308    			WkLedTm++;
0000f6  480d              LDR      r0,|L1.300|
0000f8  6800              LDR      r0,[r0,#0]  ; WkLedTm
0000fa  f1000001          ADD      r0,r0,#1
0000fe  490b              LDR      r1,|L1.300|
000100  6008              STR      r0,[r1,#0]  ; WkLedTm
;;;309    			if (WkLedTm == 50)
000102  4608              MOV      r0,r1
000104  6800              LDR      r0,[r0,#0]  ; WkLedTm
000106  2832              CMP      r0,#0x32
000108  d102              BNE      |L1.272|
;;;310    			{
;;;311    				STM_EVAL_LEDOff(LED10);
00010a  2009              MOVS     r0,#9
00010c  f7fffffe          BL       STM_EVAL_LEDOff
                  |L1.272|
;;;312    			}
;;;313    		}
;;;314    	}
;;;315    #endif
;;;316    }
000110  bd10              POP      {r4,pc}
;;;317    
                          ENDP

                  F205_BiosLed PROC
;;;115    
;;;116    void F205_BiosLed(void)
000112  b510              PUSH     {r4,lr}
;;;117    {
;;;118        /* Start:Deleted by fxs,2013.12.12 */
;;;119        /*
;;;120    	F205_WkLed();                       //LJB暂没实现这个，因无对应的指示灯
;;;121    	*/
;;;122        /* End:Deleted by fxs,2013.12.12 */
;;;123    
;;;124    	F205_TaxLed();
000114  f7fffffe          BL       F205_TaxLed
;;;125    	
;;;126    	F205_ComLed();
000118  f7fffffe          BL       F205_ComLed
;;;127    }
00011c  bd10              POP      {r4,pc}
;;;128    
                          ENDP

                  F205_WkLed PROC
;;;134    ///////////////////////////////////////////////////////////
;;;135    void F205_WkLed(void)
00011e  4770              BX       lr
;;;136    {
;;;137    #if defined JLB_CPU_CONTROL
;;;138    	if (MyInfo.RdyFlag){
;;;139    		if (WkLedTm >= 100){
;;;140    			STM_EVAL_LEDOn(LED4);
;;;141    			WkLedTm = 0;
;;;142    		}
;;;143    		else{
;;;144    			WkLedTm++;
;;;145    			if (WkLedTm == 50)
;;;146    				STM_EVAL_LEDOff(LED4);
;;;147    		}
;;;148    	}
;;;149    #endif
;;;150    	
;;;151    #if defined JMB_CPU_MAIN
;;;152    	if (MyInfo.RdyFlag){
;;;153    		if (WkLedTm >= 100){
;;;154    			STM_EVAL_LEDOn(LED9);
;;;155    			WkLedTm = 0;
;;;156    		}
;;;157    		else{
;;;158    			WkLedTm++;
;;;159    			if (WkLedTm == 50)
;;;160    				STM_EVAL_LEDOff(LED9);
;;;161    		}
;;;162    	}
;;;163    #endif
;;;164    }
;;;165    
                          ENDP

                  F205_TxLed PROC
;;;166    
;;;167    void F205_TxLed(void)
000120  4770              BX       lr
;;;168    {
;;;169    #if (OTHER_BOARD == 1)
;;;170    	if (MyInfo.RdyFlag){
;;;171    		if (MyInfo.TxFlag){
;;;172    			if (TxLedTm >= 500){
;;;173    				STM_EVAL_LEDOff(LED3);
;;;174    				TxLedTm = 0;
;;;175    				MyInfo.TxFlag--;
;;;176    			}
;;;177    			else{
;;;178    				if ((TxLedTm % 100)	== 0)
;;;179    					STM_EVAL_LEDOn(LED3); 			
;;;180    				else if ((TxLedTm % 50) == 0)
;;;181    					STM_EVAL_LEDOff(LED3);
;;;182    				TxLedTm++;
;;;183    			}
;;;184    		}
;;;185    		else{
;;;186    			STM_EVAL_LEDOff(LED3);
;;;187    			TxLedTm = 0;
;;;188    		}
;;;189    	}
;;;190    #endif
;;;191    }
;;;192    
                          ENDP

                  F205_RxLed PROC
;;;193    void F205_RxLed(void)
000122  4770              BX       lr
;;;194    {
;;;195    #if (OTHER_BOARD == 1)
;;;196    	if (MyInfo.RdyFlag){
;;;197    		if (MyInfo.RxFlag){
;;;198    			if (RxLedTm >= 500){
;;;199    				STM_EVAL_LEDOff(LED2);
;;;200    				RxLedTm = 0;
;;;201    				MyInfo.RxFlag--;
;;;202    			}
;;;203    			else{
;;;204    				if ((RxLedTm % 100) == 0)
;;;205    					STM_EVAL_LEDOn(LED2); 			
;;;206    				else if ((RxLedTm % 50) == 0)
;;;207    					STM_EVAL_LEDOff(LED2);
;;;208    				RxLedTm++;
;;;209    			}
;;;210    		}
;;;211    		else{
;;;212    			STM_EVAL_LEDOff(LED2);
;;;213    			RxLedTm = 0;
;;;214    		}
;;;215    	}
;;;216    #endif
;;;217    }
;;;218    
                          ENDP

                  |L1.292|
                          DCD      MyInfo
                  |L1.296|
                          DCD      RxLedTm
                  |L1.300|
                          DCD      WkLedTm

                          AREA ||.data||, DATA, ALIGN=2

                  WkLedTm
                          DCD      0x00000000
                  RxLedTm
                          DCD      0x00000000
                  TxLedTm
                          DCD      0x00000000
