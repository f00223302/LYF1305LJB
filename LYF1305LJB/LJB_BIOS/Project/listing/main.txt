; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\output\main.o --asm_dir=..\listing\ --list_dir=..\listing\ --depend=..\output\main.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\src -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\STM32F2xx -I..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc -I..\..\Utilities\STM32_EVAL -I..\src\SYSTICK -I..\src\LED -I..\src\GPIO -I..\src\USART -I..\src\FLASH -I..\src\HexFile -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\INC\ST\STM32F2xx -DUSE_STDPERIPH_DRIVER -DUSE_CPU_F205RC -DLJB_CPU -W --omf_browse=..\output\main.crf ..\src\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GetParams PROC
;;;195    
;;;196    void GetParams(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;197    {
;;;198    	uint8_t err = 0;
000004  f04f0500          MOV      r5,#0
;;;199    	uint16_t crc, tmp;
;;;200    	uint32_t addr;
;;;201    
;;;202    	addr = PARAMS_ADDRESS;
000008  4f91              LDR      r7,|L1.592|
;;;203    	
;;;204    	F205_ReadParams(addr, &(ParamBuf[0]), 16);
00000a  f04f0210          MOV      r2,#0x10
00000e  4991              LDR      r1,|L1.596|
000010  4638              MOV      r0,r7
000012  f7fffffe          BL       F205_ReadParams
;;;205    
;;;206    	crc = Calc_CRCByte(ParamBuf, 14);
000016  210e              MOVS     r1,#0xe
000018  488e              LDR      r0,|L1.596|
00001a  f7fffffe          BL       Calc_CRCByte
00001e  4604              MOV      r4,r0
;;;207    
;;;208    	tmp = ((uint16_t)ParamBuf[14] << 8) + ParamBuf[15];
000020  488c              LDR      r0,|L1.596|
000022  7bc0              LDRB     r0,[r0,#0xf]  ; ParamBuf
000024  498b              LDR      r1,|L1.596|
000026  7b89              LDRB     r1,[r1,#0xe]  ; ParamBuf
000028  eb002001          ADD      r0,r0,r1,LSL #8
00002c  b286              UXTH     r6,r0
;;;209    
;;;210    	if ((crc != tmp) || (ParamBuf[0] != 0x61) || (ParamBuf[1] != 0x41) || \
00002e  42b4              CMP      r4,r6
000030  d126              BNE      |L1.128|
000032  4888              LDR      r0,|L1.596|
000034  7800              LDRB     r0,[r0,#0]  ; ParamBuf
000036  2861              CMP      r0,#0x61
000038  d122              BNE      |L1.128|
00003a  4886              LDR      r0,|L1.596|
00003c  7840              LDRB     r0,[r0,#1]  ; ParamBuf
00003e  2841              CMP      r0,#0x41
000040  d11e              BNE      |L1.128|
;;;211    		(ParamBuf[2] != 0x73) || (ParamBuf[3] != 0x86) || \
000042  4884              LDR      r0,|L1.596|
000044  7880              LDRB     r0,[r0,#2]  ; ParamBuf
000046  2873              CMP      r0,#0x73
000048  d11a              BNE      |L1.128|
00004a  4882              LDR      r0,|L1.596|
00004c  78c0              LDRB     r0,[r0,#3]  ; ParamBuf
00004e  2886              CMP      r0,#0x86
000050  d116              BNE      |L1.128|
;;;212    		(ParamBuf[4] != F205_BIOS_MAIN_VER) || (ParamBuf[5] != F205_BIOS_SUB_VER) || \
000052  4880              LDR      r0,|L1.596|
000054  7900              LDRB     r0,[r0,#4]  ; ParamBuf
000056  2810              CMP      r0,#0x10
000058  d112              BNE      |L1.128|
00005a  487e              LDR      r0,|L1.596|
00005c  7940              LDRB     r0,[r0,#5]  ; ParamBuf
00005e  b978              CBNZ     r0,|L1.128|
;;;213    		(ParamBuf[6] != 0x20) || (ParamBuf[7] != F205_BIOS_YEAR) || \
000060  487c              LDR      r0,|L1.596|
000062  7980              LDRB     r0,[r0,#6]  ; ParamBuf
000064  2820              CMP      r0,#0x20
000066  d10b              BNE      |L1.128|
000068  487a              LDR      r0,|L1.596|
00006a  79c0              LDRB     r0,[r0,#7]  ; ParamBuf
00006c  2813              CMP      r0,#0x13
00006e  d107              BNE      |L1.128|
;;;214    		(ParamBuf[8] != F205_BIOS_MONTH) || (ParamBuf[9] != F205_BIOS_DATE))
000070  4878              LDR      r0,|L1.596|
000072  7a00              LDRB     r0,[r0,#8]  ; ParamBuf
000074  2810              CMP      r0,#0x10
000076  d103              BNE      |L1.128|
000078  4876              LDR      r0,|L1.596|
00007a  7a40              LDRB     r0,[r0,#9]  ; ParamBuf
00007c  2810              CMP      r0,#0x10
00007e  d02f              BEQ      |L1.224|
                  |L1.128|
;;;215    	{	
;;;216    		ParamBuf[0] = 0x61;
000080  f04f0061          MOV      r0,#0x61
000084  4973              LDR      r1,|L1.596|
000086  7008              STRB     r0,[r1,#0]
;;;217    		ParamBuf[1] = 0x41;
000088  f04f0041          MOV      r0,#0x41
00008c  7048              STRB     r0,[r1,#1]
;;;218    		ParamBuf[2] = 0x73;
00008e  f04f0073          MOV      r0,#0x73
000092  7088              STRB     r0,[r1,#2]
;;;219    		ParamBuf[3] = 0x86;
000094  f04f0086          MOV      r0,#0x86
000098  70c8              STRB     r0,[r1,#3]
;;;220    	
;;;221    		ParamBuf[4] = F205_BIOS_MAIN_VER;
00009a  f04f0010          MOV      r0,#0x10
00009e  7108              STRB     r0,[r1,#4]
;;;222    		ParamBuf[5] = F205_BIOS_SUB_VER;
0000a0  f04f0000          MOV      r0,#0
0000a4  7148              STRB     r0,[r1,#5]
;;;223    		ParamBuf[6] = 0x20;
0000a6  f04f0020          MOV      r0,#0x20
0000aa  7188              STRB     r0,[r1,#6]
;;;224    		ParamBuf[7] = F205_BIOS_YEAR;
0000ac  f04f0013          MOV      r0,#0x13
0000b0  71c8              STRB     r0,[r1,#7]
;;;225    		ParamBuf[8] = F205_BIOS_MONTH;
0000b2  f04f0010          MOV      r0,#0x10
0000b6  7208              STRB     r0,[r1,#8]
;;;226    		ParamBuf[9] = F205_BIOS_DATE;
0000b8  7248              STRB     r0,[r1,#9]
;;;227    	
;;;228    		ParamBuf[10] = 0;
0000ba  f04f0000          MOV      r0,#0
0000be  7288              STRB     r0,[r1,#0xa]
;;;229    		ParamBuf[11] = 0;
0000c0  72c8              STRB     r0,[r1,#0xb]
;;;230    		ParamBuf[12] = 0;
0000c2  7308              STRB     r0,[r1,#0xc]
;;;231    		ParamBuf[13] = 0;
0000c4  7348              STRB     r0,[r1,#0xd]
;;;232    		
;;;233    		crc = Calc_CRCByte(ParamBuf, 14);
0000c6  f04f010e          MOV      r1,#0xe
0000ca  4862              LDR      r0,|L1.596|
0000cc  f7fffffe          BL       Calc_CRCByte
0000d0  4604              MOV      r4,r0
;;;234    		ParamBuf[14] = crc >> 8;
0000d2  ea4f2024          ASR      r0,r4,#8
0000d6  495f              LDR      r1,|L1.596|
0000d8  7388              STRB     r0,[r1,#0xe]
;;;235    		ParamBuf[15] = crc & 0xff;
0000da  73cc              STRB     r4,[r1,#0xf]
;;;236    	
;;;237    		err = 1;
0000dc  f04f0501          MOV      r5,#1
                  |L1.224|
;;;238    	}
;;;239    	
;;;240    	if (err)
0000e0  b135              CBZ      r5,|L1.240|
;;;241    	{		
;;;242    		err = F205_WriteParams(addr, &(ParamBuf[0]), 16);
0000e2  2210              MOVS     r2,#0x10
0000e4  495b              LDR      r1,|L1.596|
0000e6  4638              MOV      r0,r7
0000e8  f7fffffe          BL       F205_WriteParams
0000ec  4605              MOV      r5,r0
;;;243    
;;;244    		if (err)
0000ee  bf00              NOP      
                  |L1.240|
;;;245    		{
;;;246    
;;;247    		}
;;;248    	}
;;;249    #if 0
;;;250        if (err){
;;;251    		
;;;252    		err = F205_EraseSectors(PARAMS_START_SECTOR, PARAMS_END_SECTOR);
;;;253    
;;;254    		if (!err){
;;;255    			
;;;256    			addr = PARAMS_ADDRESS;
;;;257    			err = F205_WriteParams(addr, &(ParamBuf[0]), sizeof(ParamBuf));
;;;258    			if (err){
;;;259    			}
;;;260    		}
;;;261    	}
;;;262    #endif
;;;263    }
0000f0  e8bd81f0          POP      {r4-r8,pc}
;;;264    
                          ENDP

                  InitInfo PROC
;;;185    
;;;186    void InitInfo(void)
0000f4  b510              PUSH     {r4,lr}
;;;187    {
;;;188    	memset(&MyInfo, 0, sizeof(MyInfo));
0000f6  2118              MOVS     r1,#0x18
0000f8  4857              LDR      r0,|L1.600|
0000fa  f7fffffe          BL       __aeabi_memclr4
;;;189    
;;;190    	MyInfo.FirmType = APP_FIRM_TYPE;
0000fe  f04f0016          MOV      r0,#0x16
000102  4955              LDR      r1,|L1.600|
000104  7088              STRB     r0,[r1,#2]
;;;191    	MyInfo.AckFlag = ACK_FLAG_NONE;
000106  f04f00ff          MOV      r0,#0xff
00010a  71c8              STRB     r0,[r1,#7]
;;;192    	MyInfo.TxRdy = 1;
00010c  f04f0001          MOV      r0,#1
000110  7208              STRB     r0,[r1,#8]
;;;193    }
000112  bd10              POP      {r4,pc}
;;;194    
                          ENDP

                  main PROC
;;;65     ////////////////////////////////////////////////////////////////
;;;66     int main()
000114  b570              PUSH     {r4-r6,lr}
;;;67     {
;;;68     	__IO uint16_t i, DlyTm;
;;;69     	uint8_t res;
;;;70     
;;;71     	///1ms(1000 tick per second)
;;;72     	F205_ConfigSysTick(1000);
000116  f44f707a          MOV      r0,#0x3e8
00011a  f7fffffe          BL       F205_ConfigSysTick
;;;73     
;;;74     	InitInfo();
00011e  f7fffffe          BL       InitInfo
;;;75     
;;;76     	///²»ÔÊÐíÐ´/²Á³ý FLASH:
;;;77     	FLASH_Lock();
000122  f7fffffe          BL       FLASH_Lock
;;;78     	
;;;79     	GetParams();
000126  f7fffffe          BL       GetParams
;;;80     	
;;;81     	F205_InitGpio();
00012a  f7fffffe          BL       F205_InitGpio
;;;82     
;;;83     	if (*(__IO uint32_t*)UPGRADE_FLAG_ADDRESS == UPGRADE_FLAG_DATA)
00012e  484b              LDR      r0,|L1.604|
000130  6800              LDR      r0,[r0,#0]
000132  494b              LDR      r1,|L1.608|
000134  4288              CMP      r0,r1
000136  d106              BNE      |L1.326|
;;;84     	{
;;;85     		*(__IO uint32_t*)UPGRADE_FLAG_ADDRESS = 0x00000000;
000138  f04f0000          MOV      r0,#0
00013c  4947              LDR      r1,|L1.604|
00013e  6008              STR      r0,[r1,#0]
;;;86     		res = 1;
000140  f04f0401          MOV      r4,#1
000144  e002              B        |L1.332|
                  |L1.326|
;;;87     	}
;;;88     	else
;;;89     	{
;;;90     	    res = F205_GetCapStatus();
000146  f7fffffe          BL       F205_GetCapStatus
00014a  4604              MOV      r4,r0
                  |L1.332|
;;;91     	}
;;;92     	
;;;93     	if (res)
00014c  2c00              CMP      r4,#0
00014e  d038              BEQ      |L1.450|
;;;94     	{	
;;;95          	    ///´®¿Ú¹©µç
;;;96     	    USART_CTRL_ENABLE;
000150  f44f6000          MOV      r0,#0x800
000154  4943              LDR      r1,|L1.612|
000156  8348              STRH     r0,[r1,#0x1a]
000158  f44f7000          MOV      r0,#0x200
00015c  4942              LDR      r1,|L1.616|
00015e  8008              STRH     r0,[r1,#0]
;;;97     
;;;98     	    ///ÐèÒª½« USART ¿ØÖÆ¶ËÉèÖÃ³ÉÔÊÐí½ÓÊÕ£¬½ûÖ¹·¢ËÍ
;;;99     	    F205_DisableUsartTx();
000160  f7fffffe          BL       F205_DisableUsartTx
;;;100    
;;;101    		F205_GetBdAddr();
000164  f7fffffe          BL       F205_GetBdAddr
;;;102    
;;;103    	    //BIOSÉý¼¶APPÊ±Ö¸Ê¾µÆ
;;;104    		F205_InitLED();
000168  f7fffffe          BL       F205_InitLED
;;;105    		F205_PowOnLedFlash();
00016c  f7fffffe          BL       F205_PowOnLedFlash
;;;106    
;;;107    		F205_InitUSART();
000170  f7fffffe          BL       F205_InitUSART
;;;108    
;;;109            //µ÷ÊÔÓÃ
;;;110    	    //printf("\n\rUSART Printf Example: retarget the C library printf function to the USART\n\r");
;;;111    
;;;112    		MyInfo.RdyFlag = 1;
000174  f04f0001          MOV      r0,#1
000178  4937              LDR      r1,|L1.600|
00017a  7148              STRB     r0,[r1,#5]
;;;113    		MyInfo.DlyTm = 30000;
00017c  f2475030          MOV      r0,#0x7530
000180  6108              STR      r0,[r1,#0x10]  ; MyInfo
;;;114    
;;;115    		MyInfo.SysTm = 0;
000182  f04f0000          MOV      r0,#0
000186  60c8              STR      r0,[r1,#0xc]  ; MyInfo
;;;116    		while (MyInfo.SysTm < MyInfo.DlyTm)
000188  e011              B        |L1.430|
                  |L1.394|
;;;117    		{
;;;118    			F205_UsartRxData();
00018a  f7fffffe          BL       F205_UsartRxData
;;;119    			res = F205_RxDataHandler();
00018e  f7fffffe          BL       F205_RxDataHandler
000192  4604              MOV      r4,r0
;;;120    			if (res == ACK_FLAG_EOF)       ///Éý¼¶ÎÄ¼þÍê³É£¬ÍË³ö
000194  2c08              CMP      r4,#8
000196  d10a              BNE      |L1.430|
;;;121    			{
;;;122    				///µÈ´ý×îºó×Ö½Ú·¢ËÍÍê±Ï
;;;123    				for (i = 0; i < 32768; i++)
000198  f04f0500          MOV      r5,#0
00019c  e003              B        |L1.422|
                  |L1.414|
;;;124    					__NOP();
00019e  bf00              NOP      
0001a0  f1050001          ADD      r0,r5,#1              ;123
0001a4  b285              UXTH     r5,r0                 ;123
                  |L1.422|
0001a6  f5b54f00          CMP      r5,#0x8000            ;123
0001aa  dbf8              BLT      |L1.414|
;;;125    
;;;126    				break;
0001ac  e005              B        |L1.442|
                  |L1.430|
0001ae  482a              LDR      r0,|L1.600|
0001b0  68c0              LDR      r0,[r0,#0xc]          ;116  ; MyInfo
0001b2  4929              LDR      r1,|L1.600|
0001b4  6909              LDR      r1,[r1,#0x10]         ;116  ; MyInfo
0001b6  4288              CMP      r0,r1                 ;116
0001b8  d3e7              BCC      |L1.394|
                  |L1.442|
0001ba  bf00              NOP      
;;;127    			}
;;;128    		}			
;;;129    		
;;;130    		///»Ö¸´³õÊ¼ÉèÖÃ£º¹ØÖÐ¶Ï£»
;;;131    		F205_DisableUSART();
0001bc  f7fffffe          BL       F205_DisableUSART
0001c0  e024              B        |L1.524|
                  |L1.450|
;;;132    		//F205_DisableUSART1();
;;;133    
;;;134    	}
;;;135        else	//BIOS²»Éý¼¶APPÊ±Ö¸Ê¾µÆ
;;;136    	{
;;;137    	    STM_EVAL_LEDInit(LED12);
0001c2  200b              MOVS     r0,#0xb
0001c4  f7fffffe          BL       STM_EVAL_LEDInit
;;;138    		      
;;;139    	  	STM_EVAL_LEDOn(LED12);
0001c8  200b              MOVS     r0,#0xb
0001ca  f7fffffe          BL       STM_EVAL_LEDOn
;;;140    
;;;141      	    MyInfo.SysTm = 0;
0001ce  f04f0000          MOV      r0,#0
0001d2  4921              LDR      r1,|L1.600|
0001d4  60c8              STR      r0,[r1,#0xc]  ; MyInfo
;;;142    	    //while (MyInfo.SysTm < 500){}
;;;143    
;;;144      	    STM_EVAL_LEDOff(LED12);
0001d6  f04f000b          MOV      r0,#0xb
0001da  f7fffffe          BL       STM_EVAL_LEDOff
;;;145    
;;;146    	    MyInfo.SysTm = 0;
0001de  f04f0000          MOV      r0,#0
0001e2  491d              LDR      r1,|L1.600|
0001e4  60c8              STR      r0,[r1,#0xc]  ; MyInfo
;;;147    	    //while (MyInfo.SysTm < 300){}
;;;148    
;;;149    
;;;150        	STM_EVAL_LEDInit(LED12);
0001e6  f04f000b          MOV      r0,#0xb
0001ea  f7fffffe          BL       STM_EVAL_LEDInit
;;;151    		      
;;;152    	  	STM_EVAL_LEDOn(LED12);
0001ee  200b              MOVS     r0,#0xb
0001f0  f7fffffe          BL       STM_EVAL_LEDOn
;;;153    
;;;154      	    MyInfo.SysTm = 0;
0001f4  f04f0000          MOV      r0,#0
0001f8  4917              LDR      r1,|L1.600|
0001fa  60c8              STR      r0,[r1,#0xc]  ; MyInfo
;;;155    	    //while (MyInfo.SysTm < 500){}
;;;156    
;;;157      	    STM_EVAL_LEDOff(LED12);
0001fc  f04f000b          MOV      r0,#0xb
000200  f7fffffe          BL       STM_EVAL_LEDOff
;;;158    
;;;159    	    MyInfo.SysTm = 0;
000204  f04f0000          MOV      r0,#0
000208  4913              LDR      r1,|L1.600|
00020a  60c8              STR      r0,[r1,#0xc]  ; MyInfo
                  |L1.524|
;;;160    	    //while (MyInfo.SysTm < 300){}
;;;161    	}
;;;162    
;;;163      	 USART_CTRL_DISABLE;
00020c  f44f6000          MOV      r0,#0x800
000210  4914              LDR      r1,|L1.612|
000212  8308              STRH     r0,[r1,#0x18]
000214  f44f7000          MOV      r0,#0x200
000218  4914              LDR      r1,|L1.620|
00021a  8008              STRH     r0,[r1,#0]
;;;164    
;;;165    	///Ð´±£»¤£º
;;;166    	///F205_WriteProtection(BIOS_FLASH_SECTORS | APP_FLASH_SECTORS | PARAM_FLASH_SECTORS, 1);
;;;167    	
;;;168    	///²»ÔÊÐíÐ´/²Á³ý FLASH:
;;;169    	FLASH_Lock();
00021c  f7fffffe          BL       FLASH_Lock
;;;170    
;;;171    	if (((*(__IO uint32_t*)APPLICATION_ADDRESS) & 0x2FFE0000) == 0x20000000)
000220  4813              LDR      r0,|L1.624|
000222  6800              LDR      r0,[r0,#0]
000224  4913              LDR      r1,|L1.628|
000226  4008              ANDS     r0,r0,r1
000228  f1b05f00          CMP      r0,#0x20000000
00022c  d10e              BNE      |L1.588|
;;;172    	{
;;;173    		///Ìø×ªµ½Ó¦ÓÃ³ÌÐò
;;;174        	JumpAddress = *(__IO uint32_t*) (APPLICATION_ADDRESS + 4);
00022e  4810              LDR      r0,|L1.624|
000230  6840              LDR      r0,[r0,#4]
000232  4911              LDR      r1,|L1.632|
000234  6008              STR      r0,[r1,#0]  ; JumpAddress
;;;175        	Jump_To_Application = (pFunction) JumpAddress;
000236  4608              MOV      r0,r1
000238  6800              LDR      r0,[r0,#0]  ; JumpAddress
00023a  4910              LDR      r1,|L1.636|
00023c  6008              STR      r0,[r1,#0]  ; Jump_To_Application
;;;176    
;;;177        	/* Initialize user application's Stack Pointer */
;;;178        	__set_MSP(*(__IO uint32_t*) APPLICATION_ADDRESS);
00023e  490c              LDR      r1,|L1.624|
000240  6808              LDR      r0,[r1,#0]
000242  f7fffffe          BL       __set_MSP
;;;179    
;;;180    		///Jump to application
;;;181        	Jump_To_Application();
000246  480d              LDR      r0,|L1.636|
000248  6800              LDR      r0,[r0,#0]  ; Jump_To_Application
00024a  4780              BLX      r0
                  |L1.588|
;;;182    	}
;;;183    }
00024c  2000              MOVS     r0,#0
00024e  bd70              POP      {r4-r6,pc}
;;;184    
                          ENDP

                  |L1.592|
                          DCD      0x08008000
                  |L1.596|
                          DCD      ParamBuf
                  |L1.600|
                          DCD      MyInfo
                  |L1.604|
                          DCD      0x20017ffc
                  |L1.608|
                          DCD      0x73625593
                  |L1.612|
                          DCD      0x40020000
                  |L1.616|
                          DCD      0x4002041a
                  |L1.620|
                          DCD      0x40020418
                  |L1.624|
                          DCD      0x08010000
                  |L1.628|
                          DCD      0x2ffe0000
                  |L1.632|
                          DCD      JumpAddress
                  |L1.636|
                          DCD      Jump_To_Application

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  MyInfo
                          %        24
                  ParamBuf
                          %        16384

                          AREA ||.data||, DATA, ALIGN=2

                  Jump_To_Application
                          DCD      0x00000000
                  JumpAddress
                          DCD      0x00000000

                  __ARM_use_no_argv EQU 0
