; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\output\hexfile.o --asm_dir=..\listing\ --list_dir=..\listing\ --depend=..\output\hexfile.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\src -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\STM32F2xx -I..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc -I..\..\Utilities\STM32_EVAL -I..\src\SYSTICK -I..\src\LED -I..\src\GPIO -I..\src\USART -I..\src\FLASH -I..\src\HexFile -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\INC\ST\STM32F2xx -DUSE_STDPERIPH_DRIVER -DUSE_CPU_F205RC -DLJB_CPU -W --omf_browse=..\output\hexfile.crf ..\src\HexFile\HexFile.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  InitHexVar PROC
;;;204    
;;;205    void InitHexVar(HEX_FILE *HexBuf)
000000  f04f0100          MOV      r1,#0
;;;206    {
;;;207    	HexBuf->A = 0;
000004  71c1              STRB     r1,[r0,#7]
;;;208    	HexBuf->D = 0;
000006  7181              STRB     r1,[r0,#6]
;;;209    	HexBuf->colon = 0;
000008  7001              STRB     r1,[r0,#0]
;;;210    	HexBuf->line_len = 0;
00000a  7041              STRB     r1,[r0,#1]
;;;211    	HexBuf->actual_len = 0;
00000c  7501              STRB     r1,[r0,#0x14]
;;;212    	HexBuf->type = 0xff;
00000e  f04f01ff          MOV      r1,#0xff
000012  7101              STRB     r1,[r0,#4]
;;;213    	HexBuf->actual_sum = 0;
000014  f04f0100          MOV      r1,#0
000018  7541              STRB     r1,[r0,#0x15]
;;;214    	HexBuf->data_cnt = 0;
00001a  7301              STRB     r1,[r0,#0xc]
;;;215    }
00001c  4770              BX       lr
;;;216    
                          ENDP

                  GetDataFromHexFile PROC
;;;22     
;;;23     uint8_t GetDataFromHexFile(HEX_FILE *HexBuf, uint8_t *buf, uint16_t len)
00001e  b5f0              PUSH     {r4-r7,lr}
;;;24     {
000020  4603              MOV      r3,r0
000022  460d              MOV      r5,r1
000024  4616              MOV      r6,r2
;;;25     	uint16_t i;
;;;26     	uint8_t data, ret;
;;;27     
;;;28     	ret = 0;
000026  f04f0400          MOV      r4,#0
;;;29     	for (i = 0; i < len; i++){
00002a  4627              MOV      r7,r4
00002c  e18c              B        |L1.840|
                  |L1.46|
;;;30     
;;;31     		data = *buf++;
00002e  f8152b01          LDRB     r2,[r5],#1
;;;32     		ret++;
000032  f1040001          ADD      r0,r4,#1
000036  b2c4              UXTB     r4,r0
;;;33     		switch (data){
000038  2a0a              CMP      r2,#0xa
00003a  d027              BEQ      |L1.140|
00003c  2a0d              CMP      r2,#0xd
00003e  d017              BEQ      |L1.112|
000040  2a3a              CMP      r2,#0x3a
000042  d141              BNE      |L1.200|
;;;34     
;;;35     			case ':':
;;;36     				if (HexBuf->colon || HexBuf->D || HexBuf->A)
000044  7818              LDRB     r0,[r3,#0]
000046  b918              CBNZ     r0,|L1.80|
000048  7998              LDRB     r0,[r3,#6]
00004a  b908              CBNZ     r0,|L1.80|
00004c  79d8              LDRB     r0,[r3,#7]
00004e  b110              CBZ      r0,|L1.86|
                  |L1.80|
;;;37     					return (ret | HEX_ERR_DATA);
000050  f0440040          ORR      r0,r4,#0x40
                  |L1.84|
;;;38     				if (HexBuf->type != 0xff)
;;;39     					return (ret | HEX_ERR_DATA);
;;;40     				InitHexVar(HexBuf);
;;;41     				HexBuf->colon = 1;
;;;42     				break;
;;;43     			case 0x0D:
;;;44     				if (!HexBuf->colon)
;;;45     					return (ret | HEX_ERR_DATA);
;;;46     				if (HexBuf->D)
;;;47     					return (ret | HEX_ERR_DATA);
;;;48     				HexBuf->D = 1;
;;;49     				break;
;;;50     			case 0x0A:
;;;51     				if (!HexBuf->colon)
;;;52     					return (ret | HEX_ERR_DATA);
;;;53     				if (!HexBuf->D)
;;;54     					return (ret | HEX_ERR_DATA);
;;;55     				if ((HexBuf->line_len << 1) + 10 != HexBuf->actual_len)
;;;56     					return (ret | HEX_ERR_DATA);
;;;57     				if (HexBuf->type == 0xff)
;;;58     					return (ret | HEX_ERR_DATA);
;;;59     				InitHexVar(HexBuf);
;;;60     				break;
;;;61     			default:
;;;62     				if ((!HexBuf->colon) || HexBuf->D || HexBuf->A)
;;;63     					return (ret | HEX_ERR_DATA);
;;;64     				data = Hex2Bin(data);
;;;65     				if (data == 0xff)
;;;66     					return (ret | HEX_ERR_DATA);
;;;67     
;;;68     				switch (HexBuf->actual_len){
;;;69     
;;;70     					case 0:///接收长度值1
;;;71     						HexBuf->line_len = data << 4;
;;;72     						break;
;;;73     					case 1:///接收长度值2：
;;;74     						HexBuf->line_len |= data;
;;;75     						if (HexBuf->line_len > 0x10)
;;;76     							return (ret | HEX_ERR_DATA); 
;;;77     						HexBuf->actual_sum = HexBuf->line_len;						
;;;78     						break;
;;;79     					case 2:///地址1
;;;80     						HexBuf->addr = (uint16_t)data << 12;
;;;81     						break;
;;;82     					case 3:///地址2
;;;83     						HexBuf->addr |= ((uint16_t)data << 8);
;;;84     						break;
;;;85     					case 4:///地址3
;;;86     						HexBuf->addr |= ((uint8_t)data << 4);
;;;87     						break;
;;;88     					case 5:///地址4
;;;89     						HexBuf->addr |= data; 
;;;90     						HexBuf->actual_sum += (HexBuf->addr & 0xff);
;;;91     						HexBuf->actual_sum += (HexBuf->addr >> 8);						
;;;92     						break;
;;;93     					case 6:///type1
;;;94     						HexBuf->type = data << 4;
;;;95     						break;
;;;96     					case 7:///type2
;;;97     						HexBuf->type |= data;
;;;98     						HexBuf->actual_sum += HexBuf->type;
;;;99     						switch (HexBuf->type){
;;;100    
;;;101    							case 0x00:///data record
;;;102    								break;
;;;103    							case 0x01:///EOF
;;;104    								if (HexBuf->line_len != 0)
;;;105    									return (ret | HEX_ERR_DATA);
;;;106    								break;
;;;107    							case 0x02:///extended segment address record								
;;;108    								if (HexBuf->line_len != 2)
;;;109    									return (ret | HEX_ERR_DATA);
;;;110    								break;
;;;111    							case 0x04:///extened linear address record
;;;112    								if (HexBuf->line_len != 2)
;;;113    									return (ret | HEX_ERR_DATA);
;;;114    								break;
;;;115    							case 0x05:///start Linear Address Record
;;;116    								break; 
;;;117    							default:///错误数据
;;;118    								return (ret | HEX_ERR_DATA);
;;;119    						}
;;;120    						break;
;;;121    					default:
;;;122    						if (HexBuf->actual_len >= (HexBuf->line_len << 1) + 10)
;;;123    							return (ret | HEX_ERR_DATA);
;;;124    						else if (HexBuf->actual_len == (HexBuf->line_len << 1) + 8)///sum1
;;;125    							HexBuf->sum = (data << 4);
;;;126    						else if (HexBuf->actual_len == (HexBuf->line_len << 1) + 9){///sum2
;;;127    
;;;128    							HexBuf->sum |= data;
;;;129    							HexBuf->sum += HexBuf->actual_sum;
;;;130    							if (HexBuf->sum != 0)
;;;131    								return (ret | HEX_ERR_DATA);
;;;132    							///最后一行可能没有换行符，用结束标志：
;;;133    							if (HexBuf->type == 0x01)///EOF
;;;134    								return (ret | HEX_ERR_EOF);
;;;135    						}
;;;136    						else{
;;;137    
;;;138    							if (HexBuf->type == 0x04){
;;;139    
;;;140    								if (HexBuf->actual_len == 8)
;;;141    									HexBuf->seg_addr = (data << 28);
;;;142    								else if (HexBuf->actual_len == 9)
;;;143    									HexBuf->seg_addr |= (data << 24);
;;;144    								else if (HexBuf->actual_len == 10)
;;;145    									HexBuf->seg_addr |= (data << 20);
;;;146    								else if (HexBuf->actual_len == 11){
;;;147    
;;;148    									HexBuf->seg_addr |= (data << 16);
;;;149    									HexBuf->actual_sum += ((HexBuf->seg_addr >> 16) & 0xff);
;;;150    									HexBuf->actual_sum += ((HexBuf->seg_addr >> 24) & 0xff);
;;;151    								}
;;;152    							}
;;;153    							else if (HexBuf->type == 0x05){///No meaning
;;;154    
;;;155    								if (!(HexBuf->actual_len & 0x01))
;;;156    									HexBuf->actual_sum += (data << 4);
;;;157    								else
;;;158    									HexBuf->actual_sum += data;
;;;159    							}
;;;160    							else if (HexBuf->type == 0x00){//Data
;;;161    
;;;162    								if (!(HexBuf->actual_len & 0x01)){
;;;163    								
;;;164    									HexBuf->data[HexBuf->data_cnt] = data << 4;								
;;;165    									HexBuf->actual_sum += (data << 4);
;;;166    								}
;;;167    								else{
;;;168    								
;;;169    									HexBuf->actual_sum += data;
;;;170    									HexBuf->data[HexBuf->data_cnt] |= data;
;;;171    									HexBuf->data_cnt++;
;;;172    									HexBuf->data_cnt &= 0x03;
;;;173    									if (HexBuf->data_cnt == 0){
;;;174    
;;;175    										HexBuf->actual_len++;
;;;176    										///每 4 个字节组成 1 个程序数据：
;;;177    										return (ret | HEX_VALID_DATA);
;;;178    									}
;;;179    								}
;;;180    							}
;;;181    							else
;;;182    								return (ret | HEX_ERR_DATA);
;;;183    						}
;;;184    						
;;;185    						break;
;;;186    				}
;;;187    				HexBuf->actual_len++;
;;;188    				break;
;;;189    		}
;;;190    	}
;;;191    
;;;192    	return (ret | HEX_ERR_NONE);
;;;193    }
000054  bdf0              POP      {r4-r7,pc}
                  |L1.86|
000056  7918              LDRB     r0,[r3,#4]            ;38
000058  28ff              CMP      r0,#0xff              ;38
00005a  d002              BEQ      |L1.98|
00005c  f0440040          ORR      r0,r4,#0x40           ;39
000060  e7f8              B        |L1.84|
                  |L1.98|
000062  4618              MOV      r0,r3                 ;40
000064  f7fffffe          BL       InitHexVar
000068  f04f0001          MOV      r0,#1                 ;41
00006c  7018              STRB     r0,[r3,#0]            ;41
00006e  e167              B        |L1.832|
                  |L1.112|
000070  7818              LDRB     r0,[r3,#0]            ;44
000072  b910              CBNZ     r0,|L1.122|
000074  f0440040          ORR      r0,r4,#0x40           ;45
000078  e7ec              B        |L1.84|
                  |L1.122|
00007a  7998              LDRB     r0,[r3,#6]            ;46
00007c  b110              CBZ      r0,|L1.132|
00007e  f0440040          ORR      r0,r4,#0x40           ;47
000082  e7e7              B        |L1.84|
                  |L1.132|
000084  f04f0001          MOV      r0,#1                 ;48
000088  7198              STRB     r0,[r3,#6]            ;48
00008a  e159              B        |L1.832|
                  |L1.140|
00008c  7818              LDRB     r0,[r3,#0]            ;51
00008e  b910              CBNZ     r0,|L1.150|
000090  f0440040          ORR      r0,r4,#0x40           ;52
000094  e7de              B        |L1.84|
                  |L1.150|
000096  7998              LDRB     r0,[r3,#6]            ;53
000098  b910              CBNZ     r0,|L1.160|
00009a  f0440040          ORR      r0,r4,#0x40           ;54
00009e  e7d9              B        |L1.84|
                  |L1.160|
0000a0  7858              LDRB     r0,[r3,#1]            ;55
0000a2  210a              MOVS     r1,#0xa               ;55
0000a4  eb010040          ADD      r0,r1,r0,LSL #1       ;55
0000a8  7d19              LDRB     r1,[r3,#0x14]         ;55
0000aa  4288              CMP      r0,r1                 ;55
0000ac  d002              BEQ      |L1.180|
0000ae  f0440040          ORR      r0,r4,#0x40           ;56
0000b2  e7cf              B        |L1.84|
                  |L1.180|
0000b4  7918              LDRB     r0,[r3,#4]            ;57
0000b6  28ff              CMP      r0,#0xff              ;57
0000b8  d102              BNE      |L1.192|
0000ba  f0440040          ORR      r0,r4,#0x40           ;58
0000be  e7c9              B        |L1.84|
                  |L1.192|
0000c0  4618              MOV      r0,r3                 ;59
0000c2  f7fffffe          BL       InitHexVar
0000c6  e13b              B        |L1.832|
                  |L1.200|
0000c8  7818              LDRB     r0,[r3,#0]            ;62
0000ca  b118              CBZ      r0,|L1.212|
0000cc  7998              LDRB     r0,[r3,#6]            ;62
0000ce  b908              CBNZ     r0,|L1.212|
0000d0  79d8              LDRB     r0,[r3,#7]            ;62
0000d2  b110              CBZ      r0,|L1.218|
                  |L1.212|
0000d4  f0440040          ORR      r0,r4,#0x40           ;63
0000d8  e7bc              B        |L1.84|
                  |L1.218|
0000da  4610              MOV      r0,r2                 ;64
0000dc  283a              CMP      r0,#0x3a              ;64
0000de  da05              BGE      |L1.236|
0000e0  282f              CMP      r0,#0x2f              ;64
0000e2  dd03              BLE      |L1.236|
0000e4  f1a00130          SUB      r1,r0,#0x30           ;64
0000e8  b2c9              UXTB     r1,r1                 ;64
0000ea  e009              B        |L1.256|
                  |L1.236|
0000ec  2847              CMP      r0,#0x47              ;64
0000ee  da05              BGE      |L1.252|
0000f0  2840              CMP      r0,#0x40              ;64
0000f2  dd03              BLE      |L1.252|
0000f4  f1a00137          SUB      r1,r0,#0x37           ;64
0000f8  b2c9              UXTB     r1,r1                 ;64
0000fa  e001              B        |L1.256|
                  |L1.252|
0000fc  f04f01ff          MOV      r1,#0xff              ;64
                  |L1.256|
000100  460a              MOV      r2,r1                 ;64
000102  2aff              CMP      r2,#0xff              ;65
000104  d102              BNE      |L1.268|
000106  f0440040          ORR      r0,r4,#0x40           ;66
00010a  e7a3              B        |L1.84|
                  |L1.268|
00010c  7d18              LDRB     r0,[r3,#0x14]         ;68
00010e  2808              CMP      r0,#8                 ;68
000110  d267              BCS      |L1.482|
000112  e8dff000          TBB      [pc,r0]               ;68
000116  040a              DCB      0x04,0x0a
000118  171d2227          DCB      0x17,0x1d,0x22,0x27
00011c  353b              DCB      0x35,0x3b
00011e  ea4f7002          LSL      r0,r2,#28             ;71
000122  ea4f6010          LSR      r0,r0,#24             ;71
000126  7058              STRB     r0,[r3,#1]            ;71
000128  e104              B        |L1.820|
00012a  7858              LDRB     r0,[r3,#1]            ;74
00012c  ea400002          ORR      r0,r0,r2              ;74
000130  7058              STRB     r0,[r3,#1]            ;74
000132  7858              LDRB     r0,[r3,#1]            ;75
000134  2810              CMP      r0,#0x10              ;75
000136  dd02              BLE      |L1.318|
000138  f0440040          ORR      r0,r4,#0x40           ;76
00013c  e78a              B        |L1.84|
                  |L1.318|
00013e  7858              LDRB     r0,[r3,#1]            ;77
000140  7558              STRB     r0,[r3,#0x15]         ;77
000142  e0f7              B        |L1.820|
000144  ea4f7002          LSL      r0,r2,#28             ;80
000148  ea4f4010          LSR      r0,r0,#16             ;80
00014c  8058              STRH     r0,[r3,#2]            ;80
00014e  e0f1              B        |L1.820|
000150  8858              LDRH     r0,[r3,#2]            ;83
000152  ea402002          ORR      r0,r0,r2,LSL #8       ;83
000156  8058              STRH     r0,[r3,#2]            ;83
000158  e0ec              B        |L1.820|
00015a  8858              LDRH     r0,[r3,#2]            ;86
00015c  ea401002          ORR      r0,r0,r2,LSL #4       ;86
000160  8058              STRH     r0,[r3,#2]            ;86
000162  e0e7              B        |L1.820|
000164  8858              LDRH     r0,[r3,#2]            ;89
000166  ea400002          ORR      r0,r0,r2              ;89
00016a  8058              STRH     r0,[r3,#2]            ;89
00016c  7d59              LDRB     r1,[r3,#0x15]         ;90
00016e  8858              LDRH     r0,[r3,#2]            ;90
000170  4408              ADD      r0,r0,r1              ;90
000172  7558              STRB     r0,[r3,#0x15]         ;90
000174  7d58              LDRB     r0,[r3,#0x15]         ;91
000176  8859              LDRH     r1,[r3,#2]            ;91
000178  eb002021          ADD      r0,r0,r1,ASR #8       ;91
00017c  7558              STRB     r0,[r3,#0x15]         ;91
00017e  e0d9              B        |L1.820|
000180  ea4f7002          LSL      r0,r2,#28             ;94
000184  ea4f6010          LSR      r0,r0,#24             ;94
000188  7118              STRB     r0,[r3,#4]            ;94
00018a  e0d3              B        |L1.820|
00018c  7918              LDRB     r0,[r3,#4]            ;97
00018e  ea400002          ORR      r0,r0,r2              ;97
000192  7118              STRB     r0,[r3,#4]            ;97
000194  7d58              LDRB     r0,[r3,#0x15]         ;98
000196  7919              LDRB     r1,[r3,#4]            ;98
000198  4408              ADD      r0,r0,r1              ;98
00019a  7558              STRB     r0,[r3,#0x15]         ;98
00019c  7918              LDRB     r0,[r3,#4]            ;99
00019e  2806              CMP      r0,#6                 ;99
0001a0  d21a              BCS      |L1.472|
0001a2  e8dff000          TBB      [pc,r0]               ;99
0001a6  0304              DCB      0x03,0x04
0001a8  0a191118          DCB      0x0a,0x19,0x11,0x18
0001ac  e017              B        |L1.478|
0001ae  7858              LDRB     r0,[r3,#1]            ;104
0001b0  b110              CBZ      r0,|L1.440|
0001b2  f0440040          ORR      r0,r4,#0x40           ;105
0001b6  e74d              B        |L1.84|
                  |L1.440|
0001b8  e011              B        |L1.478|
0001ba  7858              LDRB     r0,[r3,#1]            ;108
0001bc  2802              CMP      r0,#2                 ;108
0001be  d002              BEQ      |L1.454|
0001c0  f0440040          ORR      r0,r4,#0x40           ;109
0001c4  e746              B        |L1.84|
                  |L1.454|
0001c6  e00a              B        |L1.478|
0001c8  7858              LDRB     r0,[r3,#1]            ;112
0001ca  2802              CMP      r0,#2                 ;112
0001cc  d002              BEQ      |L1.468|
0001ce  f0440040          ORR      r0,r4,#0x40           ;113
0001d2  e73f              B        |L1.84|
                  |L1.468|
0001d4  e003              B        |L1.478|
0001d6  e002              B        |L1.478|
                  |L1.472|
0001d8  f0440040          ORR      r0,r4,#0x40           ;118
0001dc  e73a              B        |L1.84|
                  |L1.478|
0001de  bf00              NOP                            ;102
0001e0  e0a8              B        |L1.820|
                  |L1.482|
0001e2  7d18              LDRB     r0,[r3,#0x14]         ;122
0001e4  7859              LDRB     r1,[r3,#1]            ;122
0001e6  f04f0c0a          MOV      r12,#0xa              ;122
0001ea  eb0c0141          ADD      r1,r12,r1,LSL #1      ;122
0001ee  4288              CMP      r0,r1                 ;122
0001f0  db02              BLT      |L1.504|
0001f2  f0440040          ORR      r0,r4,#0x40           ;123
0001f6  e72d              B        |L1.84|
                  |L1.504|
0001f8  7d18              LDRB     r0,[r3,#0x14]         ;124
0001fa  7859              LDRB     r1,[r3,#1]            ;124
0001fc  f04f0c08          MOV      r12,#8                ;124
000200  eb0c0141          ADD      r1,r12,r1,LSL #1      ;124
000204  4288              CMP      r0,r1                 ;124
000206  d105              BNE      |L1.532|
000208  ea4f7002          LSL      r0,r2,#28             ;125
00020c  ea4f6010          LSR      r0,r0,#24             ;125
000210  7158              STRB     r0,[r3,#5]            ;125
000212  e08e              B        |L1.818|
                  |L1.532|
000214  7d18              LDRB     r0,[r3,#0x14]         ;126
000216  7859              LDRB     r1,[r3,#1]            ;126
000218  f04f0c09          MOV      r12,#9                ;126
00021c  eb0c0141          ADD      r1,r12,r1,LSL #1      ;126
000220  4288              CMP      r0,r1                 ;126
000222  d112              BNE      |L1.586|
000224  7958              LDRB     r0,[r3,#5]            ;128
000226  ea400002          ORR      r0,r0,r2              ;128
00022a  7158              STRB     r0,[r3,#5]            ;128
00022c  7958              LDRB     r0,[r3,#5]            ;129
00022e  7d59              LDRB     r1,[r3,#0x15]         ;129
000230  4408              ADD      r0,r0,r1              ;129
000232  7158              STRB     r0,[r3,#5]            ;129
000234  7958              LDRB     r0,[r3,#5]            ;130
000236  b110              CBZ      r0,|L1.574|
000238  f0440040          ORR      r0,r4,#0x40           ;131
00023c  e70a              B        |L1.84|
                  |L1.574|
00023e  7918              LDRB     r0,[r3,#4]            ;133
000240  2801              CMP      r0,#1                 ;133
000242  d176              BNE      |L1.818|
000244  f0440080          ORR      r0,r4,#0x80           ;134
000248  e704              B        |L1.84|
                  |L1.586|
00024a  7918              LDRB     r0,[r3,#4]            ;138
00024c  2804              CMP      r0,#4                 ;138
00024e  d129              BNE      |L1.676|
000250  7d18              LDRB     r0,[r3,#0x14]         ;140
000252  2808              CMP      r0,#8                 ;140
000254  d103              BNE      |L1.606|
000256  ea4f7002          LSL      r0,r2,#28             ;141
00025a  6118              STR      r0,[r3,#0x10]         ;141
00025c  e069              B        |L1.818|
                  |L1.606|
00025e  7d18              LDRB     r0,[r3,#0x14]         ;142
000260  2809              CMP      r0,#9                 ;142
000262  d104              BNE      |L1.622|
000264  6918              LDR      r0,[r3,#0x10]         ;143
000266  ea406002          ORR      r0,r0,r2,LSL #24      ;143
00026a  6118              STR      r0,[r3,#0x10]         ;143
00026c  e061              B        |L1.818|
                  |L1.622|
00026e  7d18              LDRB     r0,[r3,#0x14]         ;144
000270  280a              CMP      r0,#0xa               ;144
000272  d104              BNE      |L1.638|
000274  6918              LDR      r0,[r3,#0x10]         ;145
000276  ea405002          ORR      r0,r0,r2,LSL #20      ;145
00027a  6118              STR      r0,[r3,#0x10]         ;145
00027c  e059              B        |L1.818|
                  |L1.638|
00027e  7d18              LDRB     r0,[r3,#0x14]         ;146
000280  280b              CMP      r0,#0xb               ;146
000282  d156              BNE      |L1.818|
000284  6918              LDR      r0,[r3,#0x10]         ;148
000286  ea404002          ORR      r0,r0,r2,LSL #16      ;148
00028a  6118              STR      r0,[r3,#0x10]         ;148
00028c  7d58              LDRB     r0,[r3,#0x15]         ;149
00028e  6919              LDR      r1,[r3,#0x10]         ;149
000290  f3c14107          UBFX     r1,r1,#16,#8          ;149
000294  4408              ADD      r0,r0,r1              ;149
000296  7558              STRB     r0,[r3,#0x15]         ;149
000298  7d59              LDRB     r1,[r3,#0x15]         ;150
00029a  6918              LDR      r0,[r3,#0x10]         ;150
00029c  eb016010          ADD      r0,r1,r0,LSR #24      ;150
0002a0  7558              STRB     r0,[r3,#0x15]         ;150
0002a2  e046              B        |L1.818|
                  |L1.676|
0002a4  7918              LDRB     r0,[r3,#4]            ;153
0002a6  2805              CMP      r0,#5                 ;153
0002a8  d10c              BNE      |L1.708|
0002aa  7d18              LDRB     r0,[r3,#0x14]         ;155
0002ac  f0100f01          TST      r0,#1                 ;155
0002b0  d104              BNE      |L1.700|
0002b2  7d58              LDRB     r0,[r3,#0x15]         ;156
0002b4  eb001002          ADD      r0,r0,r2,LSL #4       ;156
0002b8  7558              STRB     r0,[r3,#0x15]         ;156
0002ba  e03a              B        |L1.818|
                  |L1.700|
0002bc  7d58              LDRB     r0,[r3,#0x15]         ;158
0002be  4410              ADD      r0,r0,r2              ;158
0002c0  7558              STRB     r0,[r3,#0x15]         ;158
0002c2  e036              B        |L1.818|
                  |L1.708|
0002c4  7918              LDRB     r0,[r3,#4]            ;160
0002c6  bb80              CBNZ     r0,|L1.810|
0002c8  7d18              LDRB     r0,[r3,#0x14]         ;162
0002ca  f0100f01          TST      r0,#1                 ;162
0002ce  d10e              BNE      |L1.750|
0002d0  ea4f7002          LSL      r0,r2,#28             ;164
0002d4  ea4f6110          LSR      r1,r0,#24             ;164
0002d8  f893c00c          LDRB     r12,[r3,#0xc]         ;164
0002dc  f1030008          ADD      r0,r3,#8              ;164
0002e0  f800100c          STRB     r1,[r0,r12]           ;164
0002e4  7d58              LDRB     r0,[r3,#0x15]         ;165
0002e6  eb001002          ADD      r0,r0,r2,LSL #4       ;165
0002ea  7558              STRB     r0,[r3,#0x15]         ;165
0002ec  e021              B        |L1.818|
                  |L1.750|
0002ee  7d58              LDRB     r0,[r3,#0x15]         ;169
0002f0  4410              ADD      r0,r0,r2              ;169
0002f2  7558              STRB     r0,[r3,#0x15]         ;169
0002f4  f893c00c          LDRB     r12,[r3,#0xc]         ;170
0002f8  f1030108          ADD      r1,r3,#8              ;170
0002fc  eb0c0001          ADD      r0,r12,r1             ;170
000300  7801              LDRB     r1,[r0,#0]            ;170
000302  ea410102          ORR      r1,r1,r2              ;170
000306  7001              STRB     r1,[r0,#0]            ;170
000308  7b18              LDRB     r0,[r3,#0xc]          ;171
00030a  f1000001          ADD      r0,r0,#1              ;171
00030e  7318              STRB     r0,[r3,#0xc]          ;171
000310  7b18              LDRB     r0,[r3,#0xc]          ;172
000312  f0000003          AND      r0,r0,#3              ;172
000316  7318              STRB     r0,[r3,#0xc]          ;172
000318  7b18              LDRB     r0,[r3,#0xc]          ;173
00031a  b950              CBNZ     r0,|L1.818|
00031c  7d18              LDRB     r0,[r3,#0x14]         ;175
00031e  f1000001          ADD      r0,r0,#1              ;175
000322  7518              STRB     r0,[r3,#0x14]         ;175
000324  f04400c0          ORR      r0,r4,#0xc0           ;177
000328  e694              B        |L1.84|
                  |L1.810|
00032a  e7ff              B        |L1.812|
                  |L1.812|
00032c  f0440040          ORR      r0,r4,#0x40           ;182
000330  e690              B        |L1.84|
                  |L1.818|
000332  bf00              NOP                            ;185
                  |L1.820|
000334  bf00              NOP                            ;72
000336  7d18              LDRB     r0,[r3,#0x14]         ;187
000338  f1000001          ADD      r0,r0,#1              ;187
00033c  7518              STRB     r0,[r3,#0x14]         ;187
00033e  bf00              NOP                            ;188
                  |L1.832|
000340  bf00              NOP                            ;42
000342  f1070001          ADD      r0,r7,#1              ;29
000346  b287              UXTH     r7,r0                 ;29
                  |L1.840|
000348  42b7              CMP      r7,r6                 ;29
00034a  f6ffae70          BLT      |L1.46|
00034e  4620              MOV      r0,r4                 ;192
000350  e680              B        |L1.84|
;;;194    
                          ENDP

