; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\output\stm32f2xx_syscfg.o --asm_dir=..\listing\ --list_dir=..\listing\ --depend=..\output\stm32f2xx_syscfg.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\src -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\STM32F2xx -I..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc -I..\..\Utilities\STM32_EVAL -I..\src\SYSTICK -I..\src\LED -I..\src\GPIO -I..\src\USART -I..\src\FLASH -I..\src\HexFile -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\INC\ST\STM32F2xx -DUSE_STDPERIPH_DRIVER -DUSE_CPU_F205RC -DLJB_CPU -W --omf_browse=..\output\stm32f2xx_syscfg.crf ..\..\Libraries\STM32F2xx_StdPeriph_Driver\src\stm32f2xx_syscfg.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SYSCFG_DeInit PROC
;;;85       */
;;;86     void SYSCFG_DeInit(void)
000000  b510              PUSH     {r4,lr}
;;;87     {
;;;88        RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, ENABLE);
000002  2101              MOVS     r1,#1
000004  0388              LSLS     r0,r1,#14
000006  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;89        RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, DISABLE);
00000a  2100              MOVS     r1,#0
00000c  f44f4080          MOV      r0,#0x4000
000010  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;90     }
000014  bd10              POP      {r4,pc}
;;;91     
                          ENDP

                  SYSCFG_MemoryRemapConfig PROC
;;;108      */
;;;109    void SYSCFG_MemoryRemapConfig(uint8_t SYSCFG_MemoryRemap)
000016  4920              LDR      r1,|L1.152|
;;;110    {
;;;111      /* Check the parameters */
;;;112      assert_param(IS_SYSCFG_MEMORY_REMAP_CONFING(SYSCFG_MemoryRemap));
;;;113    
;;;114      SYSCFG->MEMRMP = SYSCFG_MemoryRemap;
000018  6008              STR      r0,[r1,#0]
;;;115    }
00001a  4770              BX       lr
;;;116    
                          ENDP

                  SYSCFG_EXTILineConfig PROC
;;;125      */
;;;126    void SYSCFG_EXTILineConfig(uint8_t EXTI_PortSourceGPIOx, uint8_t EXTI_PinSourcex)
00001c  b530              PUSH     {r4,r5,lr}
;;;127    {
;;;128      uint32_t tmp = 0x00;
00001e  f04f0200          MOV      r2,#0
;;;129    
;;;130      /* Check the parameters */
;;;131      assert_param(IS_EXTI_PORT_SOURCE(EXTI_PortSourceGPIOx));
;;;132      assert_param(IS_EXTI_PIN_SOURCE(EXTI_PinSourcex));
;;;133    
;;;134      tmp = ((uint32_t)0x0F) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03));
000022  ea4f7381          LSL      r3,r1,#30
000026  ea4f7413          LSR      r4,r3,#28
00002a  f04f030f          MOV      r3,#0xf
00002e  fa03f204          LSL      r2,r3,r4
;;;135      SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] &= ~tmp;
000032  4b1a              LDR      r3,|L1.156|
000034  ea4f04a1          ASR      r4,r1,#2
000038  f8533024          LDR      r3,[r3,r4,LSL #2]
00003c  ea230302          BIC      r3,r3,r2
000040  4c16              LDR      r4,|L1.156|
000042  ea4f05a1          ASR      r5,r1,#2
000046  f8443025          STR      r3,[r4,r5,LSL #2]
;;;136      SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] |= (((uint32_t)EXTI_PortSourceGPIOx) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03)));
00004a  4623              MOV      r3,r4
00004c  ea4f04a1          ASR      r4,r1,#2
000050  f8533024          LDR      r3,[r3,r4,LSL #2]
000054  ea4f7481          LSL      r4,r1,#30
000058  ea4f7414          LSR      r4,r4,#28
00005c  fa00f404          LSL      r4,r0,r4
000060  ea430304          ORR      r3,r3,r4
000064  4c0d              LDR      r4,|L1.156|
000066  ea4f05a1          ASR      r5,r1,#2
00006a  f8443025          STR      r3,[r4,r5,LSL #2]
;;;137    }
00006e  bd30              POP      {r4,r5,pc}
;;;138    
                          ENDP

                  SYSCFG_ETH_MediaInterfaceConfig PROC
;;;146      */
;;;147    void SYSCFG_ETH_MediaInterfaceConfig(uint32_t SYSCFG_ETH_MediaInterface) 
000070  490b              LDR      r1,|L1.160|
;;;148    { 
;;;149      assert_param(IS_SYSCFG_ETH_MEDIA_INTERFACE(SYSCFG_ETH_MediaInterface)); 
;;;150      /* Configure MII_RMII selection bit */ 
;;;151      *(__IO uint32_t *) PMC_MII_RMII_SEL_BB = SYSCFG_ETH_MediaInterface; 
000072  6008              STR      r0,[r1,#0]
;;;152    }
000074  4770              BX       lr
;;;153    
                          ENDP

                  SYSCFG_CompensationCellCmd PROC
;;;163      */
;;;164    void SYSCFG_CompensationCellCmd(FunctionalState NewState)
000076  490b              LDR      r1,|L1.164|
;;;165    {
;;;166      /* Check the parameters */
;;;167      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;168    
;;;169      *(__IO uint32_t *) CMPCR_CMP_PD_BB = (uint32_t)NewState;
000078  6008              STR      r0,[r1,#0]
;;;170    }
00007a  4770              BX       lr
;;;171    
                          ENDP

                  SYSCFG_GetCompensationCellStatus PROC
;;;176      */
;;;177    FlagStatus SYSCFG_GetCompensationCellStatus(void)
00007c  f04f0000          MOV      r0,#0
;;;178    {
;;;179      FlagStatus bitstatus = RESET;
;;;180        
;;;181      if ((SYSCFG->CMPCR & SYSCFG_CMPCR_READY ) != (uint32_t)RESET)
000080  4909              LDR      r1,|L1.168|
000082  6809              LDR      r1,[r1,#0]
000084  f4117f80          TST      r1,#0x100
000088  d002              BEQ      |L1.144|
;;;182      {
;;;183        bitstatus = SET;
00008a  f04f0001          MOV      r0,#1
00008e  e001              B        |L1.148|
                  |L1.144|
;;;184      }
;;;185      else
;;;186      {
;;;187        bitstatus = RESET;
000090  f04f0000          MOV      r0,#0
                  |L1.148|
;;;188      }
;;;189      return bitstatus;
;;;190    }
000094  4770              BX       lr
;;;191    
                          ENDP

000096  0000              DCW      0x0000
                  |L1.152|
                          DCD      0x40013800
                  |L1.156|
                          DCD      0x40013808
                  |L1.160|
                          DCD      0x422700dc
                  |L1.164|
                          DCD      0x42270400
                  |L1.168|
                          DCD      0x40013820
